

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Dec 27 00:19:27 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F47Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=4,class=CODE,delta=1
    48                           	psect	text34,global,reloc=4,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=4,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Generated 17/08/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F47Q43 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataBANK5
    94  004EBA                     __pidataBANK5:
    95                           	callstack 0
    96                           
    97                           ;initializer for _TD4_ROM
    98  004EBA  B3                 	db	179
    99  004EBB  B6                 	db	182
   100  004EBC  BC                 	db	188
   101  004EBD  B8                 	db	184
   102  004EBE  B8                 	db	184
   103  004EBF  BC                 	db	188
   104  004EC0  B6                 	db	182
   105  004EC1  B3                 	db	179
   106  004EC2  B1                 	db	177
   107  004EC3  F0                 	db	240
   108  004EC4  00                 	db	0
   109  004EC5  00                 	db	0
   110  004EC6  00                 	db	0
   111  004EC7  00                 	db	0
   112  004EC8  00                 	db	0
   113  004EC9  00                 	db	0
   114                           
   115                           	psect	smallconst
   116  002500                     __psmallconst:
   117                           	callstack 0
   118  002500  00                 	db	0
   119  002501                     _led_font:
   120                           	callstack 0
   121  002501  1D                 	db	29
   122  002502  30                 	db	48
   123  002503  6D                 	db	109
   124  002504  79                 	db	121
   125  002505  33                 	db	51
   126  002506  5B                 	db	91
   127  002507  5F                 	db	95
   128  002508  70                 	db	112
   129  002509  7F                 	db	127
   130  00250A  7B                 	db	123
   131  00250B  77                 	db	119
   132  00250C  1F                 	db	31
   133  00250D  4E                 	db	78
   134  00250E  3D                 	db	61
   135  00250F  4F                 	db	79
   136  002510  47                 	db	71
   137  002511                     __end_of_led_font:
   138                           	callstack 0
   139  0000                     _T0CON0	set	794
   140  0000                     _RA5PPS	set	518
   141  0000                     _RB5PPS	set	526
   142  0000                     _SPI2CON1	set	146
   143  0000                     _SPI2CON0	set	145
   144  0000                     _RB6PPS	set	527
   145  0000                     _SPI1CON1	set	133
   146  0000                     _SPI1CON0	set	132
   147  0000                     _NCO3CLK	set	1111
   148  0000                     _TRISD	set	1225
   149  0000                     _TRISC	set	1224
   150  0000                     _NCO3PFM	set	8880
   151  0000                     _SPI2CON0bits	set	145
   152  0000                     _SPI2CON2	set	147
   153  0000                     _SPI1CON0bits	set	132
   154  0000                     _SPI1CON2	set	134
   155  0000                     _U3TXEN	set	5773
   156  0000                     _IVTLOCKbits	set	1113
   157  0000                     _ANSELA6	set	8198
   158  0000                     _WPUA7	set	8207
   159  0000                     _ANSELA7	set	8199
   160  0000                     _NCO3EN	set	8887
   161  0000                     _NCO3OUT	set	8885
   162  0000                     _ANSELA5	set	8197
   163  0000                     _ANSELA4	set	8196
   164  0000                     _ANSELE2	set	8450
   165  0000                     _ANSELE1	set	8449
   166  0000                     _TRISA6	set	9782
   167  0000                     _LATA6	set	9718
   168  0000                     _TRISA7	set	9783
   169  0000                     _TRISA5	set	9781
   170  0000                     _LATA5	set	9717
   171  0000                     _TRISA4	set	9780
   172  0000                     _TRISE2	set	9810
   173  0000                     _LATE2	set	9746
   174  0000                     _TRISE1	set	9809
   175  0000                     _LATE1	set	9745
   176  0000                     _SPI1TCNT	set	130
   177  0000                     _SPI1TXB	set	129
   178  0000                     _SPI1CON2bits	set	134
   179  0000                     _U3RXB	set	711
   180  0000                     _U3TXB	set	713
   181  0000                     _U3TXIF	set	9657
   182  0000                     _LATB	set	1215
   183  0000                     _LATD	set	1217
   184  0000                     _PORTA	set	1230
   185  0000                     _LATA4	set	9716
   186  0000                     _U3BRG	set	724
   187  0000                     _ANSELA	set	1024
   188  0000                     _ANSELB	set	1032
   189  0000                     _U3RXEN	set	5772
   190  0000                     _IOCCF5	set	8381
   191  0000                     _IOCIF	set	9591
   192  0000                     _TMR0IF	set	9615
   193  0000                     _SPI2TCNT	set	143
   194  0000                     _SPI1TWIDTH	set	136
   195  0000                     _SPI1BAUD	set	137
   196  0000                     _SPI1CLK	set	140
   197  0000                     _SPI2TXB	set	142
   198  0000                     _SPI2CON2bits	set	147
   199  0000                     _SPI2TWIDTH	set	149
   200  0000                     _SPI2BAUD	set	150
   201  0000                     _SPI2CLK	set	153
   202  0000                     _OSCFRQ	set	177
   203  0000                     _GIE	set	9911
   204  0000                     _TRISA	set	1222
   205  0000                     _TRISB	set	1223
   206  0000                     _TRISE0	set	9808
   207  0000                     _LATE0	set	9744
   208  0000                     _ANSELD	set	1048
   209  0000                     _ANSELE0	set	8448
   210  0000                     _RA4PPS	set	517
   211  0000                     _RA6PPS	set	519
   212  0000                     _RE2PPS	set	547
   213  0000                     _NCO3INC	set	1107
   214  0000                     _WPUE2	set	8458
   215  0000                     _ANSELC	set	1040
   216  0000                     _WPUB	set	1033
   217  0000                     _WPUC	set	1041
   218  0000                     _IOCCP5	set	8365
   219  0000                     _WPUA	set	1025
   220  0000                     _U3RXPPS	set	630
   221  0000                     _IVTLOCK	set	1113
   222  0000                     _TMR0H	set	793
   223  0000                     _T0CON1	set	795
   224  0000                     _U3ON	set	5783
   225  0000                     _RB4PPS	set	525
   226  0000                     _RB7PPS	set	528
   227  0000                     _IVTBASE	set	1117
   228  0000                     _IOCIE	set	9463
   229  0000                     _TMR0IE	set	9487
   230  0000                     _U3RXIE	set	9528
   231  002511                     STR_1:
   232                           
   233                           ; BSR set to: 0
   234  002511  0D                 	db	13
   235  002512  0A                 	db	10
   236  002513  54                 	db	84	;'T'
   237  002514  44                 	db	68	;'D'
   238  002515  34                 	db	52	;'4'
   239  002516  20                 	db	32
   240  002517  52                 	db	82	;'R'
   241  002518  4F                 	db	79	;'O'
   242  002519  4D                 	db	77	;'M'
   243  00251A  20                 	db	32
   244  00251B  65                 	db	101	;'e'
   245  00251C  6D                 	db	109	;'m'
   246  00251D  75                 	db	117	;'u'
   247  00251E  6C                 	db	108	;'l'
   248  00251F  61                 	db	97	;'a'
   249  002520  74                 	db	116	;'t'
   250  002521  6F                 	db	111	;'o'
   251  002522  72                 	db	114	;'r'
   252  002523  20                 	db	32
   253  002524  61                 	db	97	;'a'
   254  002525  6E                 	db	110	;'n'
   255  002526  64                 	db	100	;'d'
   256  002527  20                 	db	32
   257  002528  6D                 	db	109	;'m'
   258  002529  6F                 	db	111	;'o'
   259  00252A  6E                 	db	110	;'n'
   260  00252B  69                 	db	105	;'i'
   261  00252C  74                 	db	116	;'t'
   262  00252D  6F                 	db	111	;'o'
   263  00252E  72                 	db	114	;'r'
   264  00252F  20                 	db	32
   265  002530  25                 	db	37
   266  002531  32                 	db	50	;'2'
   267  002532  2E                 	db	46
   268  002533  32                 	db	50	;'2'
   269  002534  66                 	db	102	;'f'
   270  002535  48                 	db	72	;'H'
   271  002536  7A                 	db	122	;'z'
   272  002537  0D                 	db	13
   273  002538  0A                 	db	10
   274  002539  00                 	db	0
   275  00253A                     STR_2:
   276                           
   277                           ; BSR set to: 0
   278  00253A  49                 	db	73	;'I'
   279  00253B  4E                 	db	78	;'N'
   280  00253C  46                 	db	70	;'F'
   281  00253D  00                 	db	0
   282  00253E                     STR_6:
   283                           
   284                           ; BSR set to: 0
   285  00253E  4E                 	db	78	;'N'
   286  00253F  41                 	db	65	;'A'
   287  002540  4E                 	db	78	;'N'
   288  002541  00                 	db	0
   289  002542                     STR_3:
   290                           
   291                           ; BSR set to: 0
   292  002542  69                 	db	105	;'i'
   293  002543  6E                 	db	110	;'n'
   294  002544  66                 	db	102	;'f'
   295  002545  00                 	db	0
   296  002546                     STR_7:
   297                           
   298                           ; BSR set to: 0
   299  002546  6E                 	db	110	;'n'
   300  002547  61                 	db	97	;'a'
   301  002548  6E                 	db	110	;'n'
   302  002549  00                 	db	0
   303  00254A                     STR_10:
   304                           
   305                           ; BSR set to: 0
   306  00254A  6C                 	db	108	;'l'
   307  00254B  66                 	db	102	;'f'
   308  00254C  00                 	db	0
   309  00254D  00                 	db	0	; dummy byte at the end
   310  0000                     
   311                           ; #config settings
   312                           
   313                           	psect	cinit
   314  004B4C                     __pcinit:
   315                           	callstack 0
   316  004B4C                     start_initialization:
   317                           	callstack 0
   318  004B4C                     __initialization:
   319                           	callstack 0
   320                           
   321                           ; Initialize objects allocated to BANK5 (16 bytes)
   322                           ; load TBLPTR registers with __pidataBANK5
   323  004B4C  0EBA               	movlw	low __pidataBANK5
   324  004B4E  6EF6               	movwf	tblptrl,c
   325  004B50  0E4E               	movlw	high __pidataBANK5
   326  004B52  6EF7               	movwf	tblptrh,c
   327  004B54  0E00               	movlw	low (__pidataBANK5 shr (0+16))
   328  004B56  6EF8               	movwf	tblptru,c
   329  004B58  EE01  F1D8         	lfsr	0,__pdataBANK5
   330  004B5C  EE10 F010          	lfsr	1,16
   331  004B60                     copy_data0:
   332  004B60  0009               	tblrd		*+
   333  004B62  C4F5 F4EE          	movff	tablat,postinc0
   334  004B66  50E5               	movf	postdec1,w,c
   335  004B68  50E1               	movf	fsr1l,w,c
   336  004B6A  E1FA               	bnz	copy_data0
   337                           
   338                           ; Clear objects allocated to BANK6 (80 bytes)
   339  004B6C  EE01  F200         	lfsr	0,__pbssBANK6
   340  004B70  0E50               	movlw	80
   341  004B72                     clear_0:
   342  004B72  6AEE               	clrf	postinc0,c
   343  004B74  06E8               	decf	wreg,f,c
   344  004B76  E1FD               	bnz	clear_0
   345                           
   346                           ; Clear objects allocated to BANK5 (6 bytes)
   347  004B78  0105               	movlb	5
   348  004B7A  6BED               	clrf	(__pbssBANK5+5)& (0+255),b
   349  004B7C  6BEC               	clrf	(__pbssBANK5+4)& (0+255),b
   350  004B7E  6BEB               	clrf	(__pbssBANK5+3)& (0+255),b
   351  004B80  6BEA               	clrf	(__pbssBANK5+2)& (0+255),b
   352  004B82  6BE9               	clrf	(__pbssBANK5+1)& (0+255),b
   353  004B84  6BE8               	clrf	__pbssBANK5& (0+255),b
   354                           
   355                           ; Clear objects allocated to COMRAM (15 bytes)
   356  004B86  EE01  F13B         	lfsr	0,__pbssCOMRAM
   357  004B8A  0E0F               	movlw	15
   358  004B8C                     clear_1:
   359  004B8C  6AEE               	clrf	postinc0,c
   360  004B8E  06E8               	decf	wreg,f,c
   361  004B90  E1FD               	bnz	clear_1
   362                           
   363                           ;
   364                           ; Setup IVTBASE
   365                           ;
   366  004B92  0104               	movlb	4
   367  004B94  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   368  004B96  6F5D               	movwf	93,b
   369  004B98  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   370  004B9A  6F5E               	movwf	94,b
   371  004B9C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   372  004B9E  6F5F               	movwf	95,b
   373  004BA0                     end_of_initialization:
   374                           	callstack 0
   375  004BA0                     __end_of__initialization:
   376                           	callstack 0
   377  004BA0  0100               	movlb	0
   378  004BA2  EFB3  F01E         	goto	_main	;jump to C main() function
   379                           
   380                           	psect	bssCOMRAM
   381  00053B                     __pbssCOMRAM:
   382                           	callstack 0
   383  00053B                     floorf@F526:
   384                           	callstack 0
   385  00053B                     	ds	4
   386  00053F                     ___fpclassifyf@F465:
   387                           	callstack 0
   388  00053F                     	ds	4
   389  000543                     _flags:
   390                           	callstack 0
   391  000543                     	ds	2
   392  000545                     _scan_pointer2:
   393                           	callstack 0
   394  000545                     	ds	1
   395  000546                     _scan_pointer:
   396                           	callstack 0
   397  000546                     	ds	1
   398  000547                     _rom_pointer2:
   399                           	callstack 0
   400  000547                     	ds	1
   401  000548                     _rom_pointer:
   402                           	callstack 0
   403  000548                     	ds	1
   404  000549                     _TD4_PC:
   405                           	callstack 0
   406  000549                     	ds	1
   407                           
   408                           	psect	bssBANK5
   409  0005E8                     __pbssBANK5:
   410                           	callstack 0
   411  0005E8                     _nout:
   412                           	callstack 0
   413  0005E8                     	ds	2
   414  0005EA                     _width:
   415                           	callstack 0
   416  0005EA                     	ds	2
   417  0005EC                     _prec:
   418                           	callstack 0
   419  0005EC                     	ds	2
   420                           
   421                           	psect	dataBANK5
   422  0005D8                     __pdataBANK5:
   423                           	callstack 0
   424  0005D8                     _TD4_ROM:
   425                           	callstack 0
   426  0005D8                     	ds	16
   427                           
   428                           	psect	bssBANK6
   429  000600                     __pbssBANK6:
   430                           	callstack 0
   431  000600                     _dbuf:
   432                           	callstack 0
   433  000600                     	ds	80
   434                           
   435                           	psect	cstackBANK5
   436  000560                     __pcstackBANK5:
   437                           	callstack 0
   438  000560                     ??___flge:
   439  000560                     ___fldiv@rem:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x0
   443  000560                     	ds	4
   444  000564                     ___fldiv@sign:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x4
   448  000564                     	ds	1
   449  000565                     ___fldiv@new_exp:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x5
   453  000565                     	ds	2
   454  000567                     ___fldiv@grs:
   455                           	callstack 0
   456                           
   457                           ; 4 bytes @ 0x7
   458  000567                     	ds	4
   459  00056B                     ___fldiv@bexp:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0xB
   463  00056B                     	ds	1
   464  00056C                     ___fldiv@aexp:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0xC
   468  00056C                     	ds	1
   469  00056D                     floorf@m:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0xD
   473  00056D                     	ds	4
   474  000571                     floorf@e:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x11
   478  000571                     	ds	2
   479  000573                     floorf@u:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x13
   483  000573                     	ds	4
   484  000577                     ?_efgtoa:
   485                           	callstack 0
   486  000577                     efgtoa@fp:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x17
   490  000577                     	ds	2
   491  000579                     efgtoa@f:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x19
   495  000579                     	ds	4
   496  00057D                     efgtoa@c:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x1D
   500  00057D                     	ds	1
   501  00057E                     ??_efgtoa:
   502                           
   503                           ; 1 bytes @ 0x1E
   504  00057E                     	ds	5
   505  000583                     _efgtoa$876:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x23
   509  000583                     	ds	2
   510  000585                     _efgtoa$884:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x25
   514  000585                     	ds	2
   515  000587                     _efgtoa$885:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x27
   519  000587                     	ds	2
   520  000589                     efgtoa@t:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x29
   524  000589                     	ds	2
   525  00058B                     efgtoa@pp:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x2B
   529  00058B                     	ds	2
   530  00058D                     efgtoa@ne:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x2D
   534  00058D                     	ds	2
   535  00058F                     efgtoa@m:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x2F
   539  00058F                     	ds	2
   540  000591                     efgtoa@ou:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x31
   544  000591                     	ds	4
   545  000595                     efgtoa@d:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x35
   549  000595                     	ds	2
   550  000597                     efgtoa@sign:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x37
   554  000597                     	ds	2
   555  000599                     efgtoa@p:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x39
   559  000599                     	ds	2
   560  00059B                     efgtoa@w:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x3B
   564  00059B                     	ds	2
   565  00059D                     efgtoa@nmode:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x3D
   569  00059D                     	ds	1
   570  00059E                     efgtoa@mode:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x3E
   574  00059E                     	ds	1
   575  00059F                     efgtoa@h:
   576                           	callstack 0
   577                           
   578                           ; 4 bytes @ 0x3F
   579  00059F                     	ds	4
   580  0005A3                     efgtoa@l:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0x43
   584  0005A3                     	ds	4
   585  0005A7                     efgtoa@i:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x47
   589  0005A7                     	ds	2
   590  0005A9                     efgtoa@g:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x49
   594  0005A9                     	ds	4
   595  0005AD                     efgtoa@e:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x4D
   599  0005AD                     	ds	2
   600  0005AF                     efgtoa@n:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x4F
   604  0005AF                     	ds	2
   605  0005B1                     efgtoa@u:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x51
   609  0005B1                     	ds	4
   610  0005B5                     ?_vfpfcnvrt:
   611                           	callstack 0
   612  0005B5                     vfpfcnvrt@fp:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x55
   616  0005B5                     	ds	2
   617  0005B7                     vfpfcnvrt@fmt:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x57
   621  0005B7                     	ds	2
   622  0005B9                     vfpfcnvrt@ap:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x59
   626  0005B9                     	ds	2
   627  0005BB                     ??_vfpfcnvrt:
   628                           
   629                           ; 1 bytes @ 0x5B
   630  0005BB                     	ds	4
   631  0005BF                     vfpfcnvrt@f:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x5F
   635  0005BF                     	ds	4
   636  0005C3                     vfpfcnvrt@ct:
   637                           	callstack 0
   638                           
   639                           ; 3 bytes @ 0x63
   640  0005C3                     	ds	3
   641  0005C6                     vfpfcnvrt@c:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x66
   645  0005C6                     	ds	1
   646  0005C7                     ?_vfprintf:
   647                           	callstack 0
   648  0005C7                     vfprintf@fp:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x67
   652  0005C7                     	ds	2
   653  0005C9                     vfprintf@fmt:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x69
   657  0005C9                     	ds	1
   658  0005CA                     vfprintf@ap:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x6A
   662  0005CA                     	ds	2
   663  0005CC                     vfprintf@cfmt:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x6C
   667  0005CC                     	ds	1
   668  0005CD                     ?_printf:
   669                           	callstack 0
   670  0005CD                     printf@fmt:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x6D
   674  0005CD                     	ds	5
   675  0005D2                     printf@ap:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x72
   679  0005D2                     	ds	2
   680  0005D4                     _main$1243:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x74
   684  0005D4                     	ds	4
   685                           
   686                           	psect	cstackCOMRAM
   687  000501                     __pcstackCOMRAM:
   688                           	callstack 0
   689  000501                     i2led_matrix_write@c1:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0x0
   693  000501                     	ds	1
   694  000502                     i2led_matrix_write@r2:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x1
   698  000502                     	ds	1
   699  000503                     i2led_matrix_write@c2:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x2
   703  000503                     	ds	1
   704  000504                     i2led_matrix_write@r1:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x3
   708  000504                     	ds	1
   709  000505                     ??_TMR0_ISR:
   710                           
   711                           ; 1 bytes @ 0x4
   712  000505                     	ds	4
   713  000509                     TMR0_ISR@romdata1:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x8
   717  000509                     	ds	1
   718  00050A                     TMR0_ISR@romdata2:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x9
   722  00050A                     	ds	1
   723  00050B                     TMR0_ISR@a2:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0xA
   727  00050B                     	ds	1
   728  00050C                     TMR0_ISR@rom_a:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0xB
   732  00050C                     	ds	1
   733  00050D                     TMR0_ISR@a0:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0xC
   737  00050D                     	ds	1
   738  00050E                     TMR0_ISR@a1:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0xD
   742  00050E                     	ds	1
   743  00050F                     i2led_7seg_write@c:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0xE
   747  00050F                     	ds	1
   748  000510                     i2led_7seg_write@r:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0xF
   752  000510                     	ds	1
   753  000511                     ??_IOC_ISR:
   754                           
   755                           ; 1 bytes @ 0x10
   756  000511                     	ds	6
   757  000517                     ?_strlen:
   758                           	callstack 0
   759  000517                     ?___fpclassifyf:
   760                           	callstack 0
   761  000517                     ?_isupper:
   762                           	callstack 0
   763  000517                     ?_isdigit:
   764                           	callstack 0
   765  000517                     ?_strncmp:
   766                           	callstack 0
   767  000517                     ?_isspace:
   768                           	callstack 0
   769  000517                     ?___wmul:
   770                           	callstack 0
   771  000517                     ?___awdiv:
   772                           	callstack 0
   773  000517                     ?___awmod:
   774                           	callstack 0
   775  000517                     ?___fladd:
   776                           	callstack 0
   777  000517                     ?___flmul:
   778                           	callstack 0
   779  000517                     ?___flneg:
   780                           	callstack 0
   781  000517                     ?___fltol:
   782                           	callstack 0
   783  000517                     ?___xxtofl:
   784                           	callstack 0
   785  000517                     putch@c:
   786                           	callstack 0
   787  000517                     led_matrix_write@c1:
   788                           	callstack 0
   789  000517                     led_7seg_write@c:
   790                           	callstack 0
   791  000517                     ___wmul@multiplier:
   792                           	callstack 0
   793  000517                     ___awdiv@dividend:
   794                           	callstack 0
   795  000517                     ___awmod@dividend:
   796                           	callstack 0
   797  000517                     isdigit@c:
   798                           	callstack 0
   799  000517                     isspace@c:
   800                           	callstack 0
   801  000517                     isupper@c:
   802                           	callstack 0
   803  000517                     strcpy@dest:
   804                           	callstack 0
   805  000517                     strlen@s:
   806                           	callstack 0
   807  000517                     strncmp@_l:
   808                           	callstack 0
   809  000517                     ___fleq@ff1:
   810                           	callstack 0
   811  000517                     ___flneg@f1:
   812                           	callstack 0
   813  000517                     ___fltol@f1:
   814                           	callstack 0
   815  000517                     ___fladd@b:
   816                           	callstack 0
   817  000517                     ___flmul@b:
   818                           	callstack 0
   819  000517                     ___xxtofl@val:
   820                           	callstack 0
   821  000517                     ___fpclassifyf@x:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x16
   825  000517                     	ds	1
   826  000518                     led_matrix_write@r2:
   827                           	callstack 0
   828  000518                     led_7seg_write@r:
   829                           	callstack 0
   830  000518                     fputc@c:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x17
   834  000518                     	ds	1
   835  000519                     ??_isupper:
   836  000519                     ??_isdigit:
   837  000519                     ??_isspace:
   838  000519                     led_matrix_write@c2:
   839                           	callstack 0
   840  000519                     strncmp@_r:
   841                           	callstack 0
   842  000519                     ___wmul@multiplicand:
   843                           	callstack 0
   844  000519                     ___awdiv@divisor:
   845                           	callstack 0
   846  000519                     ___awmod@divisor:
   847                           	callstack 0
   848  000519                     strcpy@src:
   849                           	callstack 0
   850  000519                     strlen@a:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x18
   854  000519                     	ds	1
   855  00051A                     led_matrix_write@r1:
   856                           	callstack 0
   857  00051A                     fputc@fp:
   858                           	callstack 0
   859  00051A                     strncmp@n:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x19
   863  00051A                     	ds	1
   864  00051B                     ??___fpclassifyf:
   865  00051B                     ??_strcpy:
   866  00051B                     ??___fltol:
   867  00051B                     ??___xxtofl:
   868  00051B                     ___awdiv@counter:
   869                           	callstack 0
   870  00051B                     ___awmod@counter:
   871                           	callstack 0
   872  00051B                     ___wmul@product:
   873                           	callstack 0
   874  00051B                     ___fleq@ff2:
   875                           	callstack 0
   876  00051B                     ___fladd@a:
   877                           	callstack 0
   878  00051B                     ___flmul@a:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x1A
   882  00051B                     	ds	1
   883  00051C                     ??_fputc:
   884  00051C                     ??_strncmp:
   885  00051C                     ___awdiv@sign:
   886                           	callstack 0
   887  00051C                     ___awmod@sign:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x1B
   891  00051C                     	ds	1
   892  00051D                     ?_tolower:
   893                           	callstack 0
   894  00051D                     _isspace$963:
   895                           	callstack 0
   896  00051D                     ___awdiv@quotient:
   897                           	callstack 0
   898  00051D                     strcpy@s:
   899                           	callstack 0
   900  00051D                     strncmp@l:
   901                           	callstack 0
   902  00051D                     tolower@c:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x1C
   906  00051D                     	ds	1
   907  00051E                     ?_atoi:
   908                           	callstack 0
   909  00051E                     atoi@s:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x1D
   913  00051E                     	ds	1
   914  00051F                     ??___fladd:
   915  00051F                     ??___flmul:
   916  00051F                     ??_tolower:
   917  00051F                     ??___fleq:
   918  00051F                     ___fltol@sign1:
   919                           	callstack 0
   920  00051F                     ___xxtofl@sign:
   921                           	callstack 0
   922  00051F                     strncmp@r:
   923                           	callstack 0
   924  00051F                     ___fpclassifyf@e:
   925                           	callstack 0
   926  00051F                     strcpy@d:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x1E
   930  00051F                     	ds	1
   931  000520                     ??_atoi:
   932  000520                     ___fltol@exp1:
   933                           	callstack 0
   934  000520                     ___xxtofl@exp:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x1F
   938  000520                     	ds	1
   939  000521                     fputs@s:
   940                           	callstack 0
   941  000521                     ___xxtofl@arg:
   942                           	callstack 0
   943  000521                     ___fpclassifyf@u:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0x20
   947  000521                     	ds	2
   948  000523                     ___fladd@signs:
   949                           	callstack 0
   950  000523                     ___flmul@sign:
   951                           	callstack 0
   952  000523                     fputs@fp:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x22
   956  000523                     	ds	1
   957  000524                     ___fladd@aexp:
   958                           	callstack 0
   959  000524                     ___flmul@aexp:
   960                           	callstack 0
   961  000524                     atoi@neg:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x23
   965  000524                     	ds	1
   966  000525                     ?___fldiv:
   967                           	callstack 0
   968  000525                     ___fladd@bexp:
   969                           	callstack 0
   970  000525                     ___flmul@bexp:
   971                           	callstack 0
   972  000525                     fputs@c:
   973                           	callstack 0
   974  000525                     ___fldiv@b:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x24
   978  000525                     	ds	1
   979  000526                     ___fladd@grs:
   980                           	callstack 0
   981  000526                     atoi@n:
   982                           	callstack 0
   983  000526                     fputs@i:
   984                           	callstack 0
   985  000526                     ___flmul@grs:
   986                           	callstack 0
   987                           
   988                           ; 4 bytes @ 0x25
   989  000526                     	ds	2
   990  000528                     ?_pad:
   991                           	callstack 0
   992  000528                     pad@fp:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x27
   996  000528                     	ds	1
   997  000529                     ___fldiv@a:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x28
  1001  000529                     	ds	1
  1002  00052A                     pad@buf:
  1003                           	callstack 0
  1004  00052A                     ___flmul@prod:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x29
  1008  00052A                     	ds	2
  1009  00052C                     pad@p:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x2B
  1013  00052C                     	ds	1
  1014  00052D                     ??___fldiv:
  1015                           
  1016                           ; 1 bytes @ 0x2C
  1017  00052D                     	ds	1
  1018  00052E                     ??_pad:
  1019  00052E                     ___flmul@temp:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x2D
  1023  00052E                     	ds	1
  1024  00052F                     pad@i:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x2E
  1028  00052F                     	ds	1
  1029  000530                     ?___flsub:
  1030                           	callstack 0
  1031  000530                     ___flge@ff1:
  1032                           	callstack 0
  1033  000530                     ___flsub@b:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x2F
  1037  000530                     	ds	1
  1038  000531                     ?_floorf:
  1039                           	callstack 0
  1040  000531                     pad@w:
  1041                           	callstack 0
  1042  000531                     floorf@x:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x30
  1046  000531                     	ds	3
  1047  000534                     ___flge@ff2:
  1048                           	callstack 0
  1049  000534                     ___flsub@a:
  1050                           	callstack 0
  1051                           
  1052                           ; 4 bytes @ 0x33
  1053  000534                     	ds	1
  1054  000535                     ??_floorf:
  1055                           
  1056                           ; 1 bytes @ 0x34
  1057  000535                     	ds	3
  1058  000538                     
  1059                           ; 1 bytes @ 0x37
  1060  000538                     	ds	3
  1061  00053B                     
  1062                           ; 1 bytes @ 0x3A
  1063 ;;
  1064 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1065 ;;
  1066 ;; *************** function _main *****************
  1067 ;; Defined at:
  1068 ;;		line 312 in file "TD4-monitor.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1083 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1085 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1086 ;;Total ram usage:        4 bytes
  1087 ;; Hardware stack levels required when called: 10
  1088 ;; This function calls:
  1089 ;;		___fldiv
  1090 ;;		___xxtofl
  1091 ;;		_led_7seg_write
  1092 ;;		_led_matrix_write
  1093 ;;		_printf
  1094 ;; This function is called by:
  1095 ;;		Startup code after reset
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text0
  1100  003D66                     __ptext0:
  1101                           	callstack 0
  1102  003D66                     _main:
  1103                           	callstack 117
  1104                           
  1105                           ;TD4-monitor.c: 315:  OSCFRQ = 0x08;
  1106                           
  1107                           ;incstack = 0
  1108  003D66  0E08               	movlw	8
  1109  003D68  0100               	movlb	0	; () banked
  1110  003D6A  6FB1               	movwf	177,b	;volatile
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;TD4-monitor.c: 318:  ANSELE0 = 0;
  1114  003D6C  0104               	movlb	4	; () banked
  1115  003D6E  9120               	bcf	32,0,b	;volatile
  1116                           
  1117                           ; BSR set to: 4
  1118                           ;TD4-monitor.c: 319:  LATE0 = 1;
  1119  003D70  80C2               	bsf	1218,0,c	;volatile
  1120                           
  1121                           ; BSR set to: 4
  1122                           ;TD4-monitor.c: 322:  TRISE0 = 0;
  1123  003D72  90CA               	bcf	1226,0,c	;volatile
  1124                           
  1125                           ; BSR set to: 4
  1126                           ;TD4-monitor.c: 325:  ANSELE1 = 0;
  1127  003D74  9320               	bcf	32,1,b	;volatile
  1128                           
  1129                           ; BSR set to: 4
  1130                           ;TD4-monitor.c: 326:  LATE1 = 0;
  1131  003D76  92C2               	bcf	1218,1,c	;volatile
  1132                           
  1133                           ; BSR set to: 4
  1134                           ;TD4-monitor.c: 329:  TRISE1 = 1;
  1135  003D78  82CA               	bsf	1226,1,c	;volatile
  1136                           
  1137                           ; BSR set to: 4
  1138                           ;TD4-monitor.c: 332:  ANSELE2 = 0;
  1139  003D7A  9520               	bcf	32,2,b	;volatile
  1140                           
  1141                           ; BSR set to: 4
  1142                           ;TD4-monitor.c: 333:  LATE2 = 0;
  1143  003D7C  94C2               	bcf	1218,2,c	;volatile
  1144                           
  1145                           ; BSR set to: 4
  1146                           ;TD4-monitor.c: 335:  TRISE2 = 0;
  1147  003D7E  94CA               	bcf	1226,2,c	;volatile
  1148                           
  1149                           ;TD4-monitor.c: 338:  ANSELB = 0x00;
  1150  003D80  0E00               	movlw	0
  1151  003D82  6F08               	movwf	8,b	;volatile
  1152                           
  1153                           ; BSR set to: 4
  1154                           ;TD4-monitor.c: 339:  WPUB = 0xff;
  1155  003D84  6909               	setf	9,b	;volatile
  1156                           
  1157                           ;TD4-monitor.c: 340:  LATB = 0x00;
  1158  003D86  0E00               	movlw	0
  1159  003D88  6EBF               	movwf	191,c	;volatile
  1160                           
  1161                           ;TD4-monitor.c: 341:  TRISB = 0x0f;
  1162  003D8A  0E0F               	movlw	15
  1163  003D8C  6EC7               	movwf	199,c	;volatile
  1164                           
  1165                           ;TD4-monitor.c: 344:  ANSELC = 0x00;
  1166  003D8E  0E00               	movlw	0
  1167  003D90  6F10               	movwf	16,b	;volatile
  1168                           
  1169                           ;TD4-monitor.c: 345:  WPUC = 0xdf;
  1170  003D92  0EDF               	movlw	223
  1171  003D94  6F11               	movwf	17,b	;volatile
  1172                           
  1173                           ; BSR set to: 4
  1174                           ;TD4-monitor.c: 347:  TRISC = 0xff;
  1175  003D96  68C8               	setf	200,c	;volatile
  1176                           
  1177                           ;TD4-monitor.c: 350:  ANSELD = 0x00;
  1178  003D98  0E00               	movlw	0
  1179  003D9A  6F18               	movwf	24,b	;volatile
  1180                           
  1181                           ;TD4-monitor.c: 352:  LATD = 0x00;
  1182  003D9C  0E00               	movlw	0
  1183  003D9E  6EC1               	movwf	193,c	;volatile
  1184                           
  1185                           ;TD4-monitor.c: 353:  TRISD = 0x00;
  1186  003DA0  0E00               	movlw	0
  1187  003DA2  6EC9               	movwf	201,c	;volatile
  1188                           
  1189                           ;TD4-monitor.c: 356:  ANSELA = 0;
  1190  003DA4  0E00               	movlw	0
  1191  003DA6  6F00               	movwf	0,b	;volatile
  1192                           
  1193                           ; BSR set to: 4
  1194                           ;TD4-monitor.c: 357:  WPUA = 0xff;
  1195  003DA8  6901               	setf	1,b	;volatile
  1196                           
  1197                           ;TD4-monitor.c: 358:  TRISA = 0x8f;
  1198  003DAA  0E8F               	movlw	143
  1199  003DAC  6EC6               	movwf	198,c	;volatile
  1200                           
  1201                           ; BSR set to: 4
  1202                           ;TD4-monitor.c: 361:  ANSELA4 = 0;
  1203  003DAE  9900               	bcf	0,4,b	;volatile
  1204                           
  1205                           ; BSR set to: 4
  1206                           ;TD4-monitor.c: 362:  LATA4 = 0;
  1207  003DB0  98BE               	bcf	1214,4,c	;volatile
  1208                           
  1209                           ; BSR set to: 4
  1210                           ;TD4-monitor.c: 363:  TRISA4 = 0;
  1211  003DB2  98C6               	bcf	1222,4,c	;volatile
  1212                           
  1213                           ; BSR set to: 4
  1214                           ;TD4-monitor.c: 366:  ANSELA5 = 0;
  1215  003DB4  9B00               	bcf	0,5,b	;volatile
  1216                           
  1217                           ; BSR set to: 4
  1218                           ;TD4-monitor.c: 367:  LATA5 = 0;
  1219  003DB6  9ABE               	bcf	1214,5,c	;volatile
  1220                           
  1221                           ; BSR set to: 4
  1222                           ;TD4-monitor.c: 368:  TRISA5 = 0;
  1223  003DB8  9AC6               	bcf	1222,5,c	;volatile
  1224                           
  1225                           ;TD4-monitor.c: 371:  RE2PPS = 0x41;
  1226  003DBA  0E41               	movlw	65
  1227  003DBC  0102               	movlb	2	; () banked
  1228  003DBE  6F23               	movwf	35,b	;volatile
  1229                           
  1230                           ; BSR set to: 2
  1231                           ;TD4-monitor.c: 372:  ANSELE2 = 0;
  1232  003DC0  0104               	movlb	4	; () banked
  1233  003DC2  9520               	bcf	32,2,b	;volatile
  1234                           
  1235                           ; BSR set to: 4
  1236                           ;TD4-monitor.c: 373:  WPUE2 = 0;
  1237  003DC4  9521               	bcf	33,2,b	;volatile
  1238                           
  1239                           ; BSR set to: 4
  1240                           ;TD4-monitor.c: 374:  TRISE2 = 0;
  1241  003DC6  94CA               	bcf	1226,2,c	;volatile
  1242                           
  1243                           ;TD4-monitor.c: 376:  NCO3INC = 671;
  1244  003DC8  0E9F               	movlw	159
  1245  003DCA  6F53               	movwf	83,b	;volatile
  1246  003DCC  0E02               	movlw	2
  1247  003DCE  6F54               	movwf	84,b	;volatile
  1248  003DD0  0E00               	movlw	0
  1249  003DD2  6F55               	movwf	85,b	;volatile
  1250                           
  1251                           ;TD4-monitor.c: 378:  NCO3CLK = 0x04;
  1252  003DD4  0E04               	movlw	4
  1253  003DD6  6F57               	movwf	87,b	;volatile
  1254                           
  1255                           ; BSR set to: 4
  1256                           ;TD4-monitor.c: 379:  NCO3PFM = 0;
  1257  003DD8  9156               	bcf	86,0,b	;volatile
  1258                           
  1259                           ; BSR set to: 4
  1260                           ;TD4-monitor.c: 380:  NCO3OUT = 1;
  1261  003DDA  8B56               	bsf	86,5,b	;volatile
  1262                           
  1263                           ; BSR set to: 4
  1264                           ;TD4-monitor.c: 381:  NCO3EN = 1;
  1265  003DDC  8F56               	bsf	86,7,b	;volatile
  1266                           
  1267                           ;TD4-monitor.c: 385:  U3BRG = 416;
  1268  003DDE  0E01               	movlw	1
  1269  003DE0  0102               	movlb	2	; () banked
  1270  003DE2  6FD5               	movwf	213,b	;volatile
  1271  003DE4  0EA0               	movlw	160
  1272  003DE6  6FD4               	movwf	212,b	;volatile
  1273                           
  1274                           ; BSR set to: 2
  1275                           ;TD4-monitor.c: 386:  U3RXEN = 1;
  1276  003DE8  89D1               	bsf	209,4,b	;volatile
  1277                           
  1278                           ; BSR set to: 2
  1279                           ;TD4-monitor.c: 387:  U3TXEN = 1;
  1280  003DEA  8BD1               	bsf	209,5,b	;volatile
  1281                           
  1282                           ; BSR set to: 2
  1283                           ;TD4-monitor.c: 390:  ANSELA7 = 0;
  1284  003DEC  0104               	movlb	4	; () banked
  1285  003DEE  9F00               	bcf	0,7,b	;volatile
  1286                           
  1287                           ; BSR set to: 4
  1288                           ;TD4-monitor.c: 391:  WPUA7 = 1;
  1289  003DF0  8F01               	bsf	1,7,b	;volatile
  1290                           
  1291                           ; BSR set to: 4
  1292                           ;TD4-monitor.c: 392:  TRISA7 = 1;
  1293  003DF2  8EC6               	bsf	1222,7,c	;volatile
  1294                           
  1295                           ;TD4-monitor.c: 393:  U3RXPPS = 0x07;
  1296  003DF4  0E07               	movlw	7
  1297  003DF6  0102               	movlb	2	; () banked
  1298  003DF8  6F76               	movwf	118,b	;volatile
  1299                           
  1300                           ; BSR set to: 2
  1301                           ;TD4-monitor.c: 396:  ANSELA6 = 0;
  1302  003DFA  0104               	movlb	4	; () banked
  1303  003DFC  9D00               	bcf	0,6,b	;volatile
  1304                           
  1305                           ; BSR set to: 4
  1306                           ;TD4-monitor.c: 397:  LATA6 = 1;
  1307  003DFE  8CBE               	bsf	1214,6,c	;volatile
  1308                           
  1309                           ; BSR set to: 4
  1310                           ;TD4-monitor.c: 398:  TRISA6 = 0;
  1311  003E00  9CC6               	bcf	1222,6,c	;volatile
  1312                           
  1313                           ;TD4-monitor.c: 399:  RA6PPS = 0x26;
  1314  003E02  0E26               	movlw	38
  1315  003E04  0102               	movlb	2	; () banked
  1316  003E06  6F07               	movwf	7,b	;volatile
  1317                           
  1318                           ; BSR set to: 2
  1319                           ;TD4-monitor.c: 401:  U3ON = 1;
  1320  003E08  8FD2               	bsf	210,7,b	;volatile
  1321                           
  1322                           ;TD4-monitor.c: 404:  SPI1CON0 = 0x03;
  1323  003E0A  0E03               	movlw	3
  1324  003E0C  0100               	movlb	0	; () banked
  1325  003E0E  6F84               	movwf	132,b	;volatile
  1326                           
  1327                           ;TD4-monitor.c: 405:  SPI1CON1 = 0xd4;
  1328  003E10  0ED4               	movlw	212
  1329  003E12  6F85               	movwf	133,b	;volatile
  1330                           
  1331                           ;TD4-monitor.c: 406:  SPI1CON2 = 0x02;
  1332  003E14  0E02               	movlw	2
  1333  003E16  6F86               	movwf	134,b	;volatile
  1334                           
  1335                           ;TD4-monitor.c: 407:  SPI1CLK = 0;
  1336  003E18  0E00               	movlw	0
  1337  003E1A  6F8C               	movwf	140,b	;volatile
  1338                           
  1339                           ;TD4-monitor.c: 408:  SPI1BAUD = 3;
  1340  003E1C  0E03               	movlw	3
  1341  003E1E  6F89               	movwf	137,b	;volatile
  1342                           
  1343                           ;TD4-monitor.c: 409:  SPI1TWIDTH = 0;
  1344  003E20  0E00               	movlw	0
  1345  003E22  6F88               	movwf	136,b	;volatile
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;TD4-monitor.c: 410:  SPI1CON0bits.EN = 1;
  1349  003E24  8F84               	bsf	132,7,b	;volatile
  1350                           
  1351                           ;TD4-monitor.c: 411:  RB4PPS = 0x31;
  1352  003E26  0E31               	movlw	49
  1353  003E28  0102               	movlb	2	; () banked
  1354  003E2A  6F0D               	movwf	13,b	;volatile
  1355                           
  1356                           ;TD4-monitor.c: 412:  RB6PPS = 0x32;
  1357  003E2C  0E32               	movlw	50
  1358  003E2E  6F0F               	movwf	15,b	;volatile
  1359                           
  1360                           ;TD4-monitor.c: 413:  RA4PPS = 0x33;
  1361  003E30  0E33               	movlw	51
  1362  003E32  6F05               	movwf	5,b	;volatile
  1363                           
  1364                           ;TD4-monitor.c: 415:  SPI2CON0 = 0x03;
  1365  003E34  0E03               	movlw	3
  1366  003E36  0100               	movlb	0	; () banked
  1367  003E38  6F91               	movwf	145,b	;volatile
  1368                           
  1369                           ;TD4-monitor.c: 416:  SPI2CON1 = 0xd4;
  1370  003E3A  0ED4               	movlw	212
  1371  003E3C  6F92               	movwf	146,b	;volatile
  1372                           
  1373                           ;TD4-monitor.c: 417:  SPI2CON2 = 0x02;
  1374  003E3E  0E02               	movlw	2
  1375  003E40  6F93               	movwf	147,b	;volatile
  1376                           
  1377                           ;TD4-monitor.c: 418:  SPI2CLK = 0;
  1378  003E42  0E00               	movlw	0
  1379  003E44  6F99               	movwf	153,b	;volatile
  1380                           
  1381                           ;TD4-monitor.c: 419:  SPI2BAUD = 3;
  1382  003E46  0E03               	movlw	3
  1383  003E48  6F96               	movwf	150,b	;volatile
  1384                           
  1385                           ;TD4-monitor.c: 420:  SPI2TWIDTH = 0;
  1386  003E4A  0E00               	movlw	0
  1387  003E4C  6F95               	movwf	149,b	;volatile
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;TD4-monitor.c: 421:  SPI2CON0bits.EN = 1;
  1391  003E4E  8F91               	bsf	145,7,b	;volatile
  1392                           
  1393                           ;TD4-monitor.c: 422:  RB5PPS = 0x34;
  1394  003E50  0E34               	movlw	52
  1395  003E52  0102               	movlb	2	; () banked
  1396  003E54  6F0E               	movwf	14,b	;volatile
  1397                           
  1398                           ;TD4-monitor.c: 423:  RB7PPS = 0x35;
  1399  003E56  0E35               	movlw	53
  1400  003E58  6F10               	movwf	16,b	;volatile
  1401                           
  1402                           ;TD4-monitor.c: 424:  RA5PPS = 0x36;
  1403  003E5A  0E36               	movlw	54
  1404  003E5C  6F06               	movwf	6,b	;volatile
  1405                           
  1406                           ;TD4-monitor.c: 427:  T0CON1 = 0x90;
  1407  003E5E  0E90               	movlw	144
  1408  003E60  0103               	movlb	3	; () banked
  1409  003E62  6F1B               	movwf	27,b	;volatile
  1410                           
  1411                           ;TD4-monitor.c: 428:  TMR0H = 60;
  1412  003E64  0E3C               	movlw	60
  1413  003E66  6F19               	movwf	25,b	;volatile
  1414                           
  1415                           ;TD4-monitor.c: 429:  T0CON0 = 0x80;
  1416  003E68  0E80               	movlw	128
  1417  003E6A  6F1A               	movwf	26,b	;volatile
  1418                           
  1419                           ; BSR set to: 3
  1420                           ;TD4-monitor.c: 432:  IOCCP5 = 1;
  1421  003E6C  0104               	movlb	4	; () banked
  1422  003E6E  8B15               	bsf	21,5,b	;volatile
  1423                           
  1424                           ; BSR set to: 4
  1425                           ;TD4-monitor.c: 436:  printf("\r\nTD4 ROM emulator and monitor %2.2fHz\r\n",NCO3INC/67.1
      +                          089);
  1426  003E70  5153               	movf	83,w,b	;volatile
  1427  003E72  6E17               	movwf	___xxtofl@val^(0+1280),c
  1428  003E74  5154               	movf	84,w,b	;volatile
  1429  003E76  6E18               	movwf	(___xxtofl@val+1)^(0+1280),c
  1430  003E78  5155               	movf	85,w,b	;volatile
  1431  003E7A  6E19               	movwf	(___xxtofl@val+2)^(0+1280),c
  1432  003E7C  6A1A               	clrf	(___xxtofl@val+3)^(0+1280),c
  1433  003E7E  0E00               	movlw	0
  1434  003E80  ECC1  F020         	call	___xxtofl
  1435  003E84  C517  F525         	movff	?___xxtofl,___fldiv@b
  1436  003E88  C518  F526         	movff	?___xxtofl+1,___fldiv@b+1
  1437  003E8C  C519  F527         	movff	?___xxtofl+2,___fldiv@b+2
  1438  003E90  C51A  F528         	movff	?___xxtofl+3,___fldiv@b+3
  1439  003E94  0EC2               	movlw	194
  1440  003E96  6E29               	movwf	___fldiv@a^(0+1280),c
  1441  003E98  0E37               	movlw	55
  1442  003E9A  6E2A               	movwf	(___fldiv@a+1)^(0+1280),c
  1443  003E9C  0E86               	movlw	134
  1444  003E9E  6E2B               	movwf	(___fldiv@a+2)^(0+1280),c
  1445  003EA0  0E42               	movlw	66
  1446  003EA2  6E2C               	movwf	(___fldiv@a+3)^(0+1280),c
  1447  003EA4  EC6E  F01D         	call	___fldiv	;wreg free
  1448  003EA8  C525  F5D4         	movff	?___fldiv,_main$1243
  1449  003EAC  C526  F5D5         	movff	?___fldiv+1,_main$1243+1
  1450  003EB0  C527  F5D6         	movff	?___fldiv+2,_main$1243+2
  1451  003EB4  C528  F5D7         	movff	?___fldiv+3,_main$1243+3
  1452                           
  1453                           ; BSR set to: 5
  1454                           ;TD4-monitor.c: 436:  printf("\r\nTD4 ROM emulator and monitor %2.2fHz\r\n",NCO3INC/67.1
      +                          089);
  1455  003EB8  0E11               	movlw	low STR_1
  1456  003EBA  6FCD               	movwf	printf@fmt& (0+255),b
  1457  003EBC  C5D4  F5CE         	movff	_main$1243,?_printf+1
  1458  003EC0  C5D5  F5CF         	movff	_main$1243+1,?_printf+2
  1459  003EC4  C5D6  F5D0         	movff	_main$1243+2,?_printf+3
  1460  003EC8  C5D7  F5D1         	movff	_main$1243+3,?_printf+4
  1461  003ECC  EC4C  F027         	call	_printf	;wreg free
  1462                           
  1463                           ; BSR set to: 5
  1464                           ;TD4-monitor.c: 439:  IVTLOCK = 0x55;
  1465  003ED0  0E55               	movlw	85
  1466  003ED2  0104               	movlb	4	; () banked
  1467  003ED4  6F59               	movwf	89,b	;volatile
  1468                           
  1469                           ; BSR set to: 4
  1470                           ;TD4-monitor.c: 440:  IVTLOCK = 0xAA;
  1471  003ED6  0EAA               	movlw	170
  1472  003ED8  6F59               	movwf	89,b	;volatile
  1473                           
  1474                           ; BSR set to: 4
  1475                           ;TD4-monitor.c: 441:  IVTLOCKbits.IVTLOCKED = 0x00;
  1476  003EDA  9159               	bcf	89,0,b	;volatile
  1477                           
  1478                           ; BSR set to: 4
  1479                           ;TD4-monitor.c: 444:  IVTBASE = 0x000008;
  1480  003EDC  0E08               	movlw	8
  1481  003EDE  6F5D               	movwf	93,b	;volatile
  1482  003EE0  0E00               	movlw	0
  1483  003EE2  6F5E               	movwf	94,b	;volatile
  1484  003EE4  0E00               	movlw	0
  1485  003EE6  6F5F               	movwf	95,b	;volatile
  1486                           
  1487                           ; BSR set to: 4
  1488                           ;TD4-monitor.c: 447:  IVTLOCK = 0x55;
  1489  003EE8  0E55               	movlw	85
  1490  003EEA  6F59               	movwf	89,b	;volatile
  1491                           
  1492                           ; BSR set to: 4
  1493                           ;TD4-monitor.c: 448:  IVTLOCK = 0xAA;
  1494  003EEC  0EAA               	movlw	170
  1495  003EEE  6F59               	movwf	89,b	;volatile
  1496                           
  1497                           ; BSR set to: 4
  1498                           ;TD4-monitor.c: 449:  IVTLOCKbits.IVTLOCKED = 0x01;
  1499  003EF0  8159               	bsf	89,0,b	;volatile
  1500                           
  1501                           ; BSR set to: 4
  1502                           ;TD4-monitor.c: 451:  led_matrix_write(0x0f, 0x00, 0x0f, 0x00);
  1503  003EF2  0E00               	movlw	0
  1504  003EF4  6E17               	movwf	led_matrix_write@c1^(0+1280),c
  1505  003EF6  0E0F               	movlw	15
  1506  003EF8  6E18               	movwf	led_matrix_write@r2^(0+1280),c
  1507  003EFA  0E00               	movlw	0
  1508  003EFC  6E19               	movwf	led_matrix_write@c2^(0+1280),c
  1509  003EFE  0E0F               	movlw	15
  1510  003F00  EC5D  F026         	call	_led_matrix_write
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;TD4-monitor.c: 452:  led_matrix_write(0x0a, 0x01, 0x0a, 0x01);
  1514  003F04  0E01               	movlw	1
  1515  003F06  6E17               	movwf	led_matrix_write@c1^(0+1280),c
  1516  003F08  0E0A               	movlw	10
  1517  003F0A  6E18               	movwf	led_matrix_write@r2^(0+1280),c
  1518  003F0C  0E01               	movlw	1
  1519  003F0E  6E19               	movwf	led_matrix_write@c2^(0+1280),c
  1520  003F10  0E0A               	movlw	10
  1521  003F12  EC5D  F026         	call	_led_matrix_write
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;TD4-monitor.c: 453:  led_matrix_write(0x0b, 0x07, 0x0b, 0x07);
  1525  003F16  0E07               	movlw	7
  1526  003F18  6E17               	movwf	led_matrix_write@c1^(0+1280),c
  1527  003F1A  0E0B               	movlw	11
  1528  003F1C  6E18               	movwf	led_matrix_write@r2^(0+1280),c
  1529  003F1E  0E07               	movlw	7
  1530  003F20  6E19               	movwf	led_matrix_write@c2^(0+1280),c
  1531  003F22  0E0B               	movlw	11
  1532  003F24  EC5D  F026         	call	_led_matrix_write
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;TD4-monitor.c: 454:  led_matrix_write(0x0c, 0x01, 0x0c, 0x01);
  1536  003F28  0E01               	movlw	1
  1537  003F2A  6E17               	movwf	led_matrix_write@c1^(0+1280),c
  1538  003F2C  0E0C               	movlw	12
  1539  003F2E  6E18               	movwf	led_matrix_write@r2^(0+1280),c
  1540  003F30  0E01               	movlw	1
  1541  003F32  6E19               	movwf	led_matrix_write@c2^(0+1280),c
  1542  003F34  0E0C               	movlw	12
  1543  003F36  EC5D  F026         	call	_led_matrix_write
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;TD4-monitor.c: 455:  led_matrix_write(0x09, 0x00, 0x09, 0x00);
  1547  003F3A  0E00               	movlw	0
  1548  003F3C  6E17               	movwf	led_matrix_write@c1^(0+1280),c
  1549  003F3E  0E09               	movlw	9
  1550  003F40  6E18               	movwf	led_matrix_write@r2^(0+1280),c
  1551  003F42  0E00               	movlw	0
  1552  003F44  6E19               	movwf	led_matrix_write@c2^(0+1280),c
  1553  003F46  0E09               	movlw	9
  1554  003F48  EC5D  F026         	call	_led_matrix_write
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;TD4-monitor.c: 458:  led_7seg_write(0x0f, 0x00);
  1558  003F4C  0E00               	movlw	0
  1559  003F4E  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1560  003F50  0E0F               	movlw	15
  1561  003F52  EC26  F027         	call	_led_7seg_write
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;TD4-monitor.c: 459:  led_7seg_write(0x0a, 0x00);
  1565  003F56  0E00               	movlw	0
  1566  003F58  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1567  003F5A  0E0A               	movlw	10
  1568  003F5C  EC26  F027         	call	_led_7seg_write
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;TD4-monitor.c: 460:  led_7seg_write(0x0b, 0x07);
  1572  003F60  0E07               	movlw	7
  1573  003F62  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1574  003F64  0E0B               	movlw	11
  1575  003F66  EC26  F027         	call	_led_7seg_write
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;TD4-monitor.c: 461:  led_7seg_write(0x0c, 0x01);
  1579  003F6A  0E01               	movlw	1
  1580  003F6C  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1581  003F6E  0E0C               	movlw	12
  1582  003F70  EC26  F027         	call	_led_7seg_write
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;TD4-monitor.c: 462:  led_7seg_write(0x09, 0x00);
  1586  003F74  0E00               	movlw	0
  1587  003F76  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1588  003F78  0E09               	movlw	9
  1589  003F7A  EC26  F027         	call	_led_7seg_write
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;TD4-monitor.c: 464:  led_7seg_write(0x01,0);
  1593  003F7E  0E00               	movlw	0
  1594  003F80  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1595  003F82  0E01               	movlw	1
  1596  003F84  EC26  F027         	call	_led_7seg_write
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;TD4-monitor.c: 465:  led_7seg_write(0x02,0);
  1600  003F88  0E00               	movlw	0
  1601  003F8A  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1602  003F8C  0E02               	movlw	2
  1603  003F8E  EC26  F027         	call	_led_7seg_write
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;TD4-monitor.c: 466:  led_7seg_write(0x03,0);
  1607  003F92  0E00               	movlw	0
  1608  003F94  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1609  003F96  0E03               	movlw	3
  1610  003F98  EC26  F027         	call	_led_7seg_write
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;TD4-monitor.c: 467:  led_7seg_write(0x04,0);
  1614  003F9C  0E00               	movlw	0
  1615  003F9E  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1616  003FA0  0E04               	movlw	4
  1617  003FA2  EC26  F027         	call	_led_7seg_write
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;TD4-monitor.c: 468:  led_7seg_write(0x05,0);
  1621  003FA6  0E00               	movlw	0
  1622  003FA8  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1623  003FAA  0E05               	movlw	5
  1624  003FAC  EC26  F027         	call	_led_7seg_write
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;TD4-monitor.c: 469:  led_7seg_write(0x06,0);
  1628  003FB0  0E00               	movlw	0
  1629  003FB2  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1630  003FB4  0E06               	movlw	6
  1631  003FB6  EC26  F027         	call	_led_7seg_write
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;TD4-monitor.c: 470:  led_7seg_write(0x07,0);
  1635  003FBA  0E00               	movlw	0
  1636  003FBC  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1637  003FBE  0E07               	movlw	7
  1638  003FC0  EC26  F027         	call	_led_7seg_write
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;TD4-monitor.c: 471:  led_7seg_write(0x08,0);
  1642  003FC4  0E00               	movlw	0
  1643  003FC6  6E17               	movwf	led_7seg_write@c^(0+1280),c
  1644  003FC8  0E08               	movlw	8
  1645  003FCA  EC26  F027         	call	_led_7seg_write
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;TD4-monitor.c: 475:  GIE = 1;
  1649  003FCE  8ED6               	bsf	1238,7,c	;volatile
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;TD4-monitor.c: 476:  U3RXIE = 1;
  1653  003FD0  80A7               	bsf	1191,0,c	;volatile
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;TD4-monitor.c: 477:  TMR0IE = 1;
  1657  003FD2  8EA1               	bsf	1185,7,c	;volatile
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;TD4-monitor.c: 478:  IOCIE = 1;
  1661  003FD4  8E9E               	bsf	1182,7,c	;volatile
  1662  003FD6                     l267:
  1663  003FD6  D7FF               	goto	l267
  1664  003FD8                     __end_of_main:
  1665                           	callstack 0
  1666                           
  1667 ;; *************** function _printf *****************
  1668 ;; Defined at:
  1669 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  fmt             1  109[BANK5 ] PTR const unsigned char 
  1672 ;;		 -> STR_1(41), 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  ap              2  114[BANK5 ] PTR void [1]
  1675 ;;		 -> ?_printf(2), 
  1676 ;;  ret             2    0        int 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  2  109[BANK5 ] int 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 3F/5
  1683 ;;		On exit  : 3F/5
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1686 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1687 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1689 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1690 ;;Total ram usage:        7 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 9
  1693 ;; This function calls:
  1694 ;;		_vfprintf
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text1
  1701  004E98                     __ptext1:
  1702                           	callstack 0
  1703  004E98                     _printf:
  1704                           	callstack 117
  1705                           
  1706                           ; BSR set to: 5
  1707                           
  1708                           ;incstack = 0
  1709  004E98  0ECE               	movlw	low (?_printf+1)
  1710  004E9A  6FD2               	movwf	printf@ap& (0+255),b
  1711  004E9C  0E05               	movlw	high (?_printf+1)
  1712  004E9E  6FD3               	movwf	(printf@ap+1)& (0+255),b
  1713                           
  1714                           ; BSR set to: 5
  1715  004EA0  0E00               	movlw	0
  1716  004EA2  6FC7               	movwf	vfprintf@fp& (0+255),b
  1717  004EA4  0E00               	movlw	0
  1718  004EA6  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  1719  004EA8  C5CD  F5C9         	movff	printf@fmt,vfprintf@fmt
  1720  004EAC  0ED2               	movlw	low printf@ap
  1721  004EAE  6FCA               	movwf	vfprintf@ap& (0+255),b
  1722  004EB0  0E05               	movlw	high printf@ap
  1723  004EB2  6FCB               	movwf	(vfprintf@ap+1)& (0+255),b
  1724  004EB4  ECD3  F025         	call	_vfprintf	;wreg free
  1725                           
  1726                           ; BSR set to: 5
  1727  004EB8  0012               	return		;funcret
  1728  004EBA                     __end_of_printf:
  1729                           	callstack 0
  1730                           
  1731 ;; *************** function _vfprintf *****************
  1732 ;; Defined at:
  1733 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  fp              2  103[BANK5 ] PTR struct _IO_FILE
  1736 ;;		 -> NULL(0), 
  1737 ;;  fmt             1  105[BANK5 ] PTR const unsigned char 
  1738 ;;		 -> STR_1(41), 
  1739 ;;  ap              2  106[BANK5 ] PTR PTR void 
  1740 ;;		 -> printf@ap(2), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  cfmt            1  108[BANK5 ] PTR unsigned char 
  1743 ;;		 -> STR_1(41), 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2  103[BANK5 ] int 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 3F/5
  1750 ;;		On exit  : 3F/5
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1753 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1754 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1756 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1757 ;;Total ram usage:        6 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 8
  1760 ;; This function calls:
  1761 ;;		_vfpfcnvrt
  1762 ;; This function is called by:
  1763 ;;		_printf
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text2
  1768  004BA6                     __ptext2:
  1769                           	callstack 0
  1770  004BA6                     _vfprintf:
  1771                           	callstack 117
  1772                           
  1773                           ; BSR set to: 5
  1774                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1775                           
  1776                           ; BSR set to: 5
  1777                           ;incstack = 0
  1778  004BA6  C5C9  F5CC         	movff	vfprintf@fmt,vfprintf@cfmt
  1779                           
  1780                           ; BSR set to: 5
  1781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1782  004BAA  0E00               	movlw	0
  1783  004BAC  6FE9               	movwf	(_nout+1)& (0+255),b
  1784  004BAE  0E00               	movlw	0
  1785  004BB0  6FE8               	movwf	_nout& (0+255),b
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1788  004BB2  D013               	goto	l5614
  1789  004BB4                     l5612:
  1790                           
  1791                           ; BSR set to: 5
  1792                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1793  004BB4  C5C7  F5B5         	movff	vfprintf@fp,vfpfcnvrt@fp
  1794  004BB8  C5C8  F5B6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1795  004BBC  0ECC               	movlw	low vfprintf@cfmt
  1796  004BBE  6FB7               	movwf	vfpfcnvrt@fmt& (0+255),b
  1797  004BC0  0E05               	movlw	high vfprintf@cfmt
  1798  004BC2  6FB8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1799  004BC4  C5CA  F5B9         	movff	vfprintf@ap,vfpfcnvrt@ap
  1800  004BC8  C5CB  F5BA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1801  004BCC  ECB7  F017         	call	_vfpfcnvrt	;wreg free
  1802  004BD0  0105               	movlb	5	; () banked
  1803  004BD2  51B5               	movf	?_vfpfcnvrt& (0+255),w,b
  1804  004BD4  27E8               	addwf	_nout& (0+255),f,b
  1805  004BD6  51B6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1806  004BD8  23E9               	addwfc	(_nout+1)& (0+255),f,b
  1807  004BDA                     l5614:
  1808                           
  1809                           ; BSR set to: 5
  1810                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1811  004BDA  0061  F730  F4F6   	movff	vfprintf@cfmt,tblptrl
  1812  004BE0                     	if	1	;There is more than 1 active tblptr byte
  1813  004BE0  0E25               	movlw	high __smallconst
  1814  004BE2  6EF7               	movwf	tblptrh,c
  1815  004BE4                     	endif
  1816  004BE4                     	if	0	;tblptru may be non-zero
  1817  004BE4                     	endif
  1818  004BE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1819  004BE4  0E00               	movlw	low (__smallconst shr (0+16))
  1820  004BE6  6EF8               	movwf	tblptru,c
  1821  004BE8                     	endif
  1822  004BE8  0008               	tblrd		*
  1823  004BEA  50F5               	movf	tablat,w,c
  1824  004BEC  0900               	iorlw	0
  1825  004BEE  A4D8               	btfss	status,2,c
  1826  004BF0  D7E1               	goto	l5612
  1827                           
  1828                           ; BSR set to: 5
  1829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1830  004BF2  C5E8  F5C7         	movff	_nout,?_vfprintf
  1831  004BF6  C5E9  F5C8         	movff	_nout+1,?_vfprintf+1
  1832                           
  1833                           ; BSR set to: 5
  1834  004BFA  0012               	return		;funcret
  1835  004BFC                     __end_of_vfprintf:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _vfpfcnvrt *****************
  1839 ;; Defined at:
  1840 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  fp              2   85[BANK5 ] PTR struct _IO_FILE
  1843 ;;		 -> NULL(0), 
  1844 ;;  fmt             2   87[BANK5 ] PTR PTR unsigned char 
  1845 ;;		 -> vfprintf@cfmt(1), 
  1846 ;;  ap              2   89[BANK5 ] PTR PTR void 
  1847 ;;		 -> printf@ap(2), 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  llu             8    0        unsigned long long 
  1850 ;;  ll              8    0        long long 
  1851 ;;  f               4   95[BANK5 ] long long 
  1852 ;;  ct              3   99[BANK5 ] unsigned char [3]
  1853 ;;  vp              3    0        PTR void 
  1854 ;;  cp              3    0        PTR unsigned char 
  1855 ;;  i               2    0        int 
  1856 ;;  done            2    0        int 
  1857 ;;  c               1  102[BANK5 ] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2   85[BANK5 ] int 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 3F/5
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1867 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1868 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1869 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1870 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1871 ;;Total ram usage:       18 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 7
  1874 ;; This function calls:
  1875 ;;		_atoi
  1876 ;;		_efgtoa
  1877 ;;		_fputc
  1878 ;;		_isdigit
  1879 ;;		_isupper
  1880 ;;		_strncmp
  1881 ;;		_tolower
  1882 ;; This function is called by:
  1883 ;;		_vfprintf
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text3
  1888  002F6E                     __ptext3:
  1889                           	callstack 0
  1890  002F6E                     _vfpfcnvrt:
  1891                           	callstack 117
  1892                           
  1893                           ; BSR set to: 5
  1894                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1895                           
  1896                           ; BSR set to: 5
  1897                           ;incstack = 0
  1898  002F6E  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1899  002F74  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1900  002F7A  C4DF F4F6          	movff	indf2,tblptrl
  1901  002F7E                     	if	1	;There is more than 1 active tblptr byte
  1902  002F7E  0E25               	movlw	high __smallconst
  1903  002F80  6EF7               	movwf	tblptrh,c
  1904  002F82                     	endif
  1905  002F82                     	if	0	;tblptru may be non-zero
  1906  002F82                     	endif
  1907  002F82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1908  002F82  0E00               	movlw	low (__smallconst shr (0+16))
  1909  002F84  6EF8               	movwf	tblptru,c
  1910  002F86                     	endif
  1911  002F86  0008               	tblrd		*
  1912  002F88  50F5               	movf	tablat,w,c
  1913  002F8A  0A25               	xorlw	37
  1914  002F8C  A4D8               	btfss	status,2,c
  1915  002F8E  D25A               	goto	l5600
  1916                           
  1917                           ; BSR set to: 5
  1918                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1919  002F90  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1920  002F96  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1921  002F9C  2ADF               	incf	indf2,f,c
  1922                           
  1923                           ; BSR set to: 5
  1924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1925  002F9E  0E00               	movlw	0
  1926  002FA0  6FEB               	movwf	(_width+1)& (0+255),b
  1927  002FA2  0E00               	movlw	0
  1928  002FA4  6FEA               	movwf	_width& (0+255),b
  1929  002FA6  C5EA  F543         	movff	_width,_flags
  1930  002FAA  C5EB  F544         	movff	_width+1,_flags+1
  1931                           
  1932                           ; BSR set to: 5
  1933                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1934  002FAE  69EC               	setf	_prec& (0+255),b
  1935  002FB0  69ED               	setf	(_prec+1)& (0+255),b
  1936                           
  1937                           ; BSR set to: 5
  1938                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1939  002FB2  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1940  002FB8  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1941  002FBE  C4DF F4F6          	movff	indf2,tblptrl
  1942  002FC2                     	if	1	;There is more than 1 active tblptr byte
  1943  002FC2  0E25               	movlw	high __smallconst
  1944  002FC4  6EF7               	movwf	tblptrh,c
  1945  002FC6                     	endif
  1946  002FC6                     	if	0	;tblptru may be non-zero
  1947  002FC6                     	endif
  1948  002FC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1949  002FC6  0E00               	movlw	low (__smallconst shr (0+16))
  1950  002FC8  6EF8               	movwf	tblptru,c
  1951  002FCA                     	endif
  1952  002FCA  0008               	tblrd		*
  1953  002FCC  50F5               	movf	tablat,w,c
  1954  002FCE  0A2A               	xorlw	42
  1955  002FD0  A4D8               	btfss	status,2,c
  1956  002FD2  D02B               	goto	l5516
  1957                           
  1958                           ; BSR set to: 5
  1959                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1960  002FD4  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1961  002FDA  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1962  002FE0  2ADF               	incf	indf2,f,c
  1963                           
  1964                           ; BSR set to: 5
  1965                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1966  002FE2  0061  F6E4  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  1967  002FE8  0061  F6E8  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  1968  002FEE  0061 F37C  F5BB    	movff	indf2,??_vfpfcnvrt
  1969  002FF4  0E02               	movlw	2
  1970  002FF6  26DE               	addwf	postinc2,f,c
  1971  002FF8  0061 F37C  F5BC    	movff	indf2,??_vfpfcnvrt+1
  1972  002FFE  0E00               	movlw	0
  1973  003000  22DD               	addwfc	postdec2,f,c
  1974  003002  0061  F6EC  F4D9   	movff	??_vfpfcnvrt,fsr2l
  1975  003008  0061  F6F0  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  1976  00300E  0061 F378  F5EA    	movff	postinc2,_width
  1977  003014  0061 F374  F5EB    	movff	postdec2,_width+1
  1978                           
  1979                           ; BSR set to: 5
  1980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1981  00301A  AFEB               	btfss	(_width+1)& (0+255),7,b
  1982  00301C  D03B               	goto	u6940
  1983                           
  1984                           ; BSR set to: 5
  1985                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1986  00301E  8043               	bsf	_flags^(0+1280),0,c
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1989  003020  6DEA               	negf	_width& (0+255),b
  1990  003022  1FEB               	comf	(_width+1)& (0+255),f,b
  1991  003024  B0D8               	btfsc	status,0,c
  1992  003026  2BEB               	incf	(_width+1)& (0+255),f,b
  1993  003028  D035               	goto	u6940
  1994  00302A                     l5516:
  1995                           
  1996                           ; BSR set to: 5
  1997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1998  00302A  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1999  003030  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2000  003036  50DF               	movf	indf2,w,c
  2001  003038  6E1E               	movwf	atoi@s^(0+1280),c
  2002  00303A  EC61  F021         	call	_atoi	;wreg free
  2003  00303E  C51E  F5EA         	movff	?_atoi,_width
  2004  003042  C51F  F5EB         	movff	?_atoi+1,_width+1
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2007  003046  D007               	goto	l5522
  2008  003048                     l5518:
  2009                           
  2010                           ; BSR set to: 5
  2011                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2012  003048  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2013  00304E  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2014  003054  2ADF               	incf	indf2,f,c
  2015  003056                     l5522:
  2016  003056  0ED0               	movlw	208
  2017  003058  0105               	movlb	5	; () banked
  2018  00305A  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
  2019  00305C  0EFF               	movlw	255
  2020  00305E  6FBC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2021  003060  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2022  003066  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2023  00306C  C4DF F4F6          	movff	indf2,tblptrl
  2024  003070                     	if	1	;There is more than 1 active tblptr byte
  2025  003070  0E25               	movlw	high __smallconst
  2026  003072  6EF7               	movwf	tblptrh,c
  2027  003074                     	endif
  2028  003074                     	if	0	;tblptru may be non-zero
  2029  003074                     	endif
  2030  003074                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2031  003074  0E00               	movlw	low (__smallconst shr (0+16))
  2032  003076  6EF8               	movwf	tblptru,c
  2033  003078                     	endif
  2034  003078  0008               	tblrd		*
  2035  00307A  50F5               	movf	tablat,w,c
  2036  00307C  6FBD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2037  00307E  6BBE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2038  003080  51BB               	movf	??_vfpfcnvrt& (0+255),w,b
  2039  003082  27BD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2040  003084  51BC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2041  003086  23BE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2042  003088  51BE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2043  00308A  E104               	bnz	u6940
  2044  00308C  0E0A               	movlw	10
  2045  00308E  5DBD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2046  003090  A0D8               	btfss	status,0,c
  2047  003092  D7DA               	goto	l5518
  2048  003094                     u6940:
  2049                           
  2050                           ; BSR set to: 5
  2051                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2052  003094  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2053  00309A  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2054  0030A0  C4DF F4F6          	movff	indf2,tblptrl
  2055  0030A4                     	if	1	;There is more than 1 active tblptr byte
  2056  0030A4  0E25               	movlw	high __smallconst
  2057  0030A6  6EF7               	movwf	tblptrh,c
  2058  0030A8                     	endif
  2059  0030A8                     	if	0	;tblptru may be non-zero
  2060  0030A8                     	endif
  2061  0030A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2062  0030A8  0E00               	movlw	low (__smallconst shr (0+16))
  2063  0030AA  6EF8               	movwf	tblptru,c
  2064  0030AC                     	endif
  2065  0030AC  0008               	tblrd		*
  2066  0030AE  50F5               	movf	tablat,w,c
  2067  0030B0  0A2E               	xorlw	46
  2068  0030B2  A4D8               	btfss	status,2,c
  2069  0030B4  D075               	goto	u6970
  2070                           
  2071                           ; BSR set to: 5
  2072                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2073  0030B6  0E00               	movlw	0
  2074  0030B8  6FED               	movwf	(_prec+1)& (0+255),b
  2075  0030BA  0E00               	movlw	0
  2076  0030BC  6FEC               	movwf	_prec& (0+255),b
  2077                           
  2078                           ; BSR set to: 5
  2079                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2080  0030BE  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2081  0030C4  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2082  0030CA  2ADF               	incf	indf2,f,c
  2083                           
  2084                           ; BSR set to: 5
  2085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2086  0030CC  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2087  0030D2  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2088  0030D8  C4DF F4F6          	movff	indf2,tblptrl
  2089  0030DC                     	if	1	;There is more than 1 active tblptr byte
  2090  0030DC  0E25               	movlw	high __smallconst
  2091  0030DE  6EF7               	movwf	tblptrh,c
  2092  0030E0                     	endif
  2093  0030E0                     	if	0	;tblptru may be non-zero
  2094  0030E0                     	endif
  2095  0030E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2096  0030E0  0E00               	movlw	low (__smallconst shr (0+16))
  2097  0030E2  6EF8               	movwf	tblptru,c
  2098  0030E4                     	endif
  2099  0030E4  0008               	tblrd		*
  2100  0030E6  50F5               	movf	tablat,w,c
  2101  0030E8  0A2A               	xorlw	42
  2102  0030EA  A4D8               	btfss	status,2,c
  2103  0030EC  D024               	goto	l5536
  2104                           
  2105                           ; BSR set to: 5
  2106                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2107  0030EE  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2108  0030F4  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2109  0030FA  2ADF               	incf	indf2,f,c
  2110                           
  2111                           ; BSR set to: 5
  2112                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2113  0030FC  0061  F6E4  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  2114  003102  0061  F6E8  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  2115  003108  0061 F37C  F5BB    	movff	indf2,??_vfpfcnvrt
  2116  00310E  0E02               	movlw	2
  2117  003110  26DE               	addwf	postinc2,f,c
  2118  003112  0061 F37C  F5BC    	movff	indf2,??_vfpfcnvrt+1
  2119  003118  0E00               	movlw	0
  2120  00311A  22DD               	addwfc	postdec2,f,c
  2121  00311C  0061  F6EC  F4D9   	movff	??_vfpfcnvrt,fsr2l
  2122  003122  0061  F6F0  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  2123  003128  0061 F378  F5EC    	movff	postinc2,_prec
  2124  00312E  0061 F374  F5ED    	movff	postdec2,_prec+1
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2127  003134  D035               	goto	u6970
  2128  003136                     l5536:
  2129                           
  2130                           ; BSR set to: 5
  2131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2132  003136  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2133  00313C  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2134  003142  50DF               	movf	indf2,w,c
  2135  003144  6E1E               	movwf	atoi@s^(0+1280),c
  2136  003146  EC61  F021         	call	_atoi	;wreg free
  2137  00314A  C51E  F5EC         	movff	?_atoi,_prec
  2138  00314E  C51F  F5ED         	movff	?_atoi+1,_prec+1
  2139                           
  2140                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2141  003152  D007               	goto	l5542
  2142  003154                     l5538:
  2143                           
  2144                           ; BSR set to: 5
  2145                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2146  003154  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2147  00315A  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2148  003160  2ADF               	incf	indf2,f,c
  2149  003162                     l5542:
  2150  003162  0ED0               	movlw	208
  2151  003164  0105               	movlb	5	; () banked
  2152  003166  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
  2153  003168  0EFF               	movlw	255
  2154  00316A  6FBC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2155  00316C  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2156  003172  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2157  003178  C4DF F4F6          	movff	indf2,tblptrl
  2158  00317C                     	if	1	;There is more than 1 active tblptr byte
  2159  00317C  0E25               	movlw	high __smallconst
  2160  00317E  6EF7               	movwf	tblptrh,c
  2161  003180                     	endif
  2162  003180                     	if	0	;tblptru may be non-zero
  2163  003180                     	endif
  2164  003180                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2165  003180  0E00               	movlw	low (__smallconst shr (0+16))
  2166  003182  6EF8               	movwf	tblptru,c
  2167  003184                     	endif
  2168  003184  0008               	tblrd		*
  2169  003186  50F5               	movf	tablat,w,c
  2170  003188  6FBD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2171  00318A  6BBE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2172  00318C  51BB               	movf	??_vfpfcnvrt& (0+255),w,b
  2173  00318E  27BD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2174  003190  51BC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2175  003192  23BE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2176  003194  51BE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2177  003196  E104               	bnz	u6970
  2178  003198  0E0A               	movlw	10
  2179  00319A  5DBD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2180  00319C  A0D8               	btfss	status,0,c
  2181  00319E  D7DA               	goto	l5538
  2182  0031A0                     u6970:
  2183                           
  2184                           ; BSR set to: 5
  2185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2186  0031A0  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2187  0031A6  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2188  0031AC  C4DF F4F6          	movff	indf2,tblptrl
  2189  0031B0                     	if	1	;There is more than 1 active tblptr byte
  2190  0031B0  0E25               	movlw	high __smallconst
  2191  0031B2  6EF7               	movwf	tblptrh,c
  2192  0031B4                     	endif
  2193  0031B4                     	if	0	;tblptru may be non-zero
  2194  0031B4                     	endif
  2195  0031B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2196  0031B4  0E00               	movlw	low (__smallconst shr (0+16))
  2197  0031B6  6EF8               	movwf	tblptru,c
  2198  0031B8                     	endif
  2199  0031B8  0008               	tblrd		*
  2200  0031BA  50F5               	movf	tablat,w,c
  2201  0031BC  6E1D               	movwf	tolower@c^(0+1280),c
  2202  0031BE  6A1E               	clrf	(tolower@c+1)^(0+1280),c
  2203  0031C0  EC40  F026         	call	_tolower	;wreg free
  2204  0031C4  501D               	movf	?_tolower^(0+1280),w,c
  2205  0031C6  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  2206                           
  2207                           ; BSR set to: 5
  2208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2209  0031C8  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  2210  0031CA  B4D8               	btfsc	status,2,c
  2211  0031CC  D035               	goto	l5554
  2212                           
  2213                           ; BSR set to: 5
  2214                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2215  0031CE  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2216  0031D4  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2217  0031DA  50DF               	movf	indf2,w,c
  2218  0031DC  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
  2219  0031DE  0E01               	movlw	1
  2220  0031E0  27BB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2221  0031E2  0061  F6EC  F4F6   	movff	??_vfpfcnvrt,tblptrl
  2222  0031E8                     	if	1	;There is more than 1 active tblptr byte
  2223  0031E8  0E25               	movlw	high __smallconst
  2224  0031EA  6EF7               	movwf	tblptrh,c
  2225  0031EC                     	endif
  2226  0031EC                     	if	0	;tblptru may be non-zero
  2227  0031EC                     	endif
  2228  0031EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2229  0031EC  0E00               	movlw	low (__smallconst shr (0+16))
  2230  0031EE  6EF8               	movwf	tblptru,c
  2231  0031F0                     	endif
  2232  0031F0  0008               	tblrd		*
  2233  0031F2  50F5               	movf	tablat,w,c
  2234  0031F4  6E1D               	movwf	tolower@c^(0+1280),c
  2235  0031F6  6A1E               	clrf	(tolower@c+1)^(0+1280),c
  2236  0031F8  EC40  F026         	call	_tolower	;wreg free
  2237  0031FC  501D               	movf	?_tolower^(0+1280),w,c
  2238  0031FE  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2239                           
  2240                           ; BSR set to: 5
  2241                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2242  003200  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2243  003202  B4D8               	btfsc	status,2,c
  2244  003204  D019               	goto	l5554
  2245                           
  2246                           ; BSR set to: 5
  2247                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2248  003206  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2249  00320C  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2250  003212  50DF               	movf	indf2,w,c
  2251  003214  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
  2252  003216  0E02               	movlw	2
  2253  003218  27BB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2254  00321A  0061  F6EC  F4F6   	movff	??_vfpfcnvrt,tblptrl
  2255  003220                     	if	1	;There is more than 1 active tblptr byte
  2256  003220  0E25               	movlw	high __smallconst
  2257  003222  6EF7               	movwf	tblptrh,c
  2258  003224                     	endif
  2259  003224                     	if	0	;tblptru may be non-zero
  2260  003224                     	endif
  2261  003224                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2262  003224  0E00               	movlw	low (__smallconst shr (0+16))
  2263  003226  6EF8               	movwf	tblptru,c
  2264  003228                     	endif
  2265  003228  0008               	tblrd		*
  2266  00322A  50F5               	movf	tablat,w,c
  2267  00322C  6E1D               	movwf	tolower@c^(0+1280),c
  2268  00322E  6A1E               	clrf	(tolower@c+1)^(0+1280),c
  2269  003230  EC40  F026         	call	_tolower	;wreg free
  2270  003234  501D               	movf	?_tolower^(0+1280),w,c
  2271  003236  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2272  003238                     l5554:
  2273                           
  2274                           ; BSR set to: 5
  2275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2276  003238  0E66               	movlw	102
  2277  00323A  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2278  00323C  A4D8               	btfss	status,2,c
  2279  00323E  D04E               	goto	l5566
  2280                           
  2281                           ; BSR set to: 5
  2282                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2283  003240  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2284  003246  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2285  00324C  C4DF F4F6          	movff	indf2,tblptrl
  2286  003250                     	if	1	;There is more than 1 active tblptr byte
  2287  003250  0E25               	movlw	high __smallconst
  2288  003252  6EF7               	movwf	tblptrh,c
  2289  003254                     	endif
  2290  003254                     	if	0	;tblptru may be non-zero
  2291  003254                     	endif
  2292  003254                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2293  003254  0E00               	movlw	low (__smallconst shr (0+16))
  2294  003256  6EF8               	movwf	tblptru,c
  2295  003258                     	endif
  2296  003258  0008               	tblrd		*
  2297  00325A  0061 F3D4  F5C6    	movff	tablat,vfpfcnvrt@c
  2298                           
  2299                           ; BSR set to: 5
  2300                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2301  003260  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2302  003266  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2303  00326C  2ADF               	incf	indf2,f,c
  2304                           
  2305                           ; BSR set to: 5
  2306                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2307  00326E  0061  F6E4  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  2308  003274  0061  F6E8  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  2309  00327A  0061 F37C  F5BB    	movff	indf2,??_vfpfcnvrt
  2310  003280  0E04               	movlw	4
  2311  003282  26DE               	addwf	postinc2,f,c
  2312  003284  0061 F37C  F5BC    	movff	indf2,??_vfpfcnvrt+1
  2313  00328A  0E00               	movlw	0
  2314  00328C  22DD               	addwfc	postdec2,f,c
  2315  00328E  0061  F6EC  F4D9   	movff	??_vfpfcnvrt,fsr2l
  2316  003294  0061  F6F0  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  2317  00329A  0061 F378  F5BF    	movff	postinc2,vfpfcnvrt@f
  2318  0032A0  0061 F378  F5C0    	movff	postinc2,vfpfcnvrt@f+1
  2319  0032A6  0061 F378  F5C1    	movff	postinc2,vfpfcnvrt@f+2
  2320  0032AC  0061 F378  F5C2    	movff	postinc2,vfpfcnvrt@f+3
  2321                           
  2322                           ; BSR set to: 5
  2323                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2324  0032B2  C5B5  F577         	movff	vfpfcnvrt@fp,efgtoa@fp
  2325  0032B6  C5B6  F578         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2326  0032BA  C5BF  F579         	movff	vfpfcnvrt@f,efgtoa@f
  2327  0032BE  C5C0  F57A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2328  0032C2  C5C1  F57B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2329  0032C6  C5C2  F57C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2330  0032CA  C5C6  F57D         	movff	vfpfcnvrt@c,efgtoa@c
  2331  0032CE  ECA7  F012         	call	_efgtoa	;wreg free
  2332  0032D2  C577  F5B5         	movff	?_efgtoa,?_vfpfcnvrt
  2333  0032D6  C578  F5B6         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2334  0032DA  0012               	return	
  2335  0032DC                     l5566:
  2336                           
  2337                           ; BSR set to: 5
  2338                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2339  0032DC  0EC3               	movlw	low vfpfcnvrt@ct
  2340  0032DE  6E17               	movwf	strncmp@_l^(0+1280),c
  2341  0032E0  0E05               	movlw	high vfpfcnvrt@ct
  2342  0032E2  6E18               	movwf	(strncmp@_l+1)^(0+1280),c
  2343  0032E4  0E4A               	movlw	low STR_10
  2344  0032E6  6E19               	movwf	strncmp@_r^(0+1280),c
  2345  0032E8  0E00               	movlw	0
  2346  0032EA  6E1B               	movwf	(strncmp@n+1)^(0+1280),c
  2347  0032EC  0E02               	movlw	2
  2348  0032EE  6E1A               	movwf	strncmp@n^(0+1280),c
  2349  0032F0  EC2F  F023         	call	_strncmp	;wreg free
  2350  0032F4  5017               	movf	?_strncmp^(0+1280),w,c
  2351  0032F6  1018               	iorwf	(?_strncmp+1)^(0+1280),w,c
  2352  0032F8  A4D8               	btfss	status,2,c
  2353  0032FA  D070               	goto	l5584
  2354                           
  2355                           ; BSR set to: 5
  2356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2357  0032FC  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2358  003302  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2359  003308  50DF               	movf	indf2,w,c
  2360  00330A  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
  2361  00330C  0E01               	movlw	1
  2362  00330E  27BB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2363  003310  0061  F6EC  F4F6   	movff	??_vfpfcnvrt,tblptrl
  2364  003316                     	if	1	;There is more than 1 active tblptr byte
  2365  003316  0E25               	movlw	high __smallconst
  2366  003318  6EF7               	movwf	tblptrh,c
  2367  00331A                     	endif
  2368  00331A                     	if	0	;tblptru may be non-zero
  2369  00331A                     	endif
  2370  00331A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2371  00331A  0E00               	movlw	low (__smallconst shr (0+16))
  2372  00331C  6EF8               	movwf	tblptru,c
  2373  00331E                     	endif
  2374  00331E  0008               	tblrd		*
  2375  003320  0061 F3D4  F5C6    	movff	tablat,vfpfcnvrt@c
  2376                           
  2377                           ; BSR set to: 5
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 && isupper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2380  003326  0EBF               	movlw	191
  2381  003328  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
  2382  00332A  0EFF               	movlw	255
  2383  00332C  6FBC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2384  00332E  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2385  003334  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2386  00333A  C4DF F4F6          	movff	indf2,tblptrl
  2387  00333E                     	if	1	;There is more than 1 active tblptr byte
  2388  00333E  0E25               	movlw	high __smallconst
  2389  003340  6EF7               	movwf	tblptrh,c
  2390  003342                     	endif
  2391  003342                     	if	0	;tblptru may be non-zero
  2392  003342                     	endif
  2393  003342                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2394  003342  0E00               	movlw	low (__smallconst shr (0+16))
  2395  003344  6EF8               	movwf	tblptru,c
  2396  003346                     	endif
  2397  003346  0008               	tblrd		*
  2398  003348  50F5               	movf	tablat,w,c
  2399  00334A  6FBD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2400  00334C  6BBE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2401  00334E  51BB               	movf	??_vfpfcnvrt& (0+255),w,b
  2402  003350  27BD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2403  003352  51BC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2404  003354  23BE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2405  003356  51BE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2406  003358  E102               	bnz	l5576
  2407  00335A  0E1A               	movlw	26
  2408  00335C  5DBD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2409  00335E                     l5576:
  2410                           
  2411                           ; BSR set to: 5
  2412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2413  00335E  0061  F6E4  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  2414  003364  0061  F6E8  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  2415  00336A  0061 F37C  F5BB    	movff	indf2,??_vfpfcnvrt
  2416  003370  0E04               	movlw	4
  2417  003372  26DE               	addwf	postinc2,f,c
  2418  003374  0061 F37C  F5BC    	movff	indf2,??_vfpfcnvrt+1
  2419  00337A  0E00               	movlw	0
  2420  00337C  22DD               	addwfc	postdec2,f,c
  2421  00337E  0061  F6EC  F4D9   	movff	??_vfpfcnvrt,fsr2l
  2422  003384  0061  F6F0  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  2423  00338A  0061 F378  F5BF    	movff	postinc2,vfpfcnvrt@f
  2424  003390  0061 F378  F5C0    	movff	postinc2,vfpfcnvrt@f+1
  2425  003396  0061 F378  F5C1    	movff	postinc2,vfpfcnvrt@f+2
  2426  00339C  0061 F378  F5C2    	movff	postinc2,vfpfcnvrt@f+3
  2427                           
  2428                           ; BSR set to: 5
  2429                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2430  0033A2  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2431  0033A8  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2432  0033AE  0E02               	movlw	2
  2433  0033B0  26DF               	addwf	indf2,f,c
  2434                           
  2435                           ; BSR set to: 5
  2436                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2437  0033B2  C5B5  F577         	movff	vfpfcnvrt@fp,efgtoa@fp
  2438  0033B6  C5B6  F578         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2439  0033BA  C5BF  F579         	movff	vfpfcnvrt@f,efgtoa@f
  2440  0033BE  C5C0  F57A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2441  0033C2  C5C1  F57B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2442  0033C6  C5C2  F57C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2443  0033CA  C5C6  F57D         	movff	vfpfcnvrt@c,efgtoa@c
  2444  0033CE  ECA7  F012         	call	_efgtoa	;wreg free
  2445  0033D2  C577  F5B5         	movff	?_efgtoa,?_vfpfcnvrt
  2446  0033D6  C578  F5B6         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2447  0033DA  0012               	return	
  2448  0033DC                     l5584:
  2449                           
  2450                           ; BSR set to: 5
  2451                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2452  0033DC  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2453  0033E2  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2454  0033E8  C4DF F4F6          	movff	indf2,tblptrl
  2455  0033EC                     	if	1	;There is more than 1 active tblptr byte
  2456  0033EC  0E25               	movlw	high __smallconst
  2457  0033EE  6EF7               	movwf	tblptrh,c
  2458  0033F0                     	endif
  2459  0033F0                     	if	0	;tblptru may be non-zero
  2460  0033F0                     	endif
  2461  0033F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2462  0033F0  0E00               	movlw	low (__smallconst shr (0+16))
  2463  0033F2  6EF8               	movwf	tblptru,c
  2464  0033F4                     	endif
  2465  0033F4  0008               	tblrd		*
  2466  0033F6  50F5               	movf	tablat,w,c
  2467  0033F8  0A25               	xorlw	37
  2468  0033FA  A4D8               	btfss	status,2,c
  2469  0033FC  D017               	goto	l5594
  2470                           
  2471                           ; BSR set to: 5
  2472                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2473  0033FE  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2474  003404  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2475  00340A  2ADF               	incf	indf2,f,c
  2476                           
  2477                           ; BSR set to: 5
  2478                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2479  00340C  0E00               	movlw	0
  2480  00340E  6E19               	movwf	(fputc@c+1)^(0+1280),c
  2481  003410  0E25               	movlw	37
  2482  003412  6E18               	movwf	fputc@c^(0+1280),c
  2483  003414  C5B5  F51A         	movff	vfpfcnvrt@fp,fputc@fp
  2484  003418  C5B6  F51B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2485  00341C  EC42  F025         	call	_fputc	;wreg free
  2486  003420                     l5590:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2489  003420  0E00               	movlw	0
  2490  003422  0105               	movlb	5	; () banked
  2491  003424  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2492  003426  0E01               	movlw	1
  2493  003428  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  2494  00342A  0012               	return	
  2495  00342C                     l5594:
  2496                           
  2497                           ; BSR set to: 5
  2498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2499  00342C  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2500  003432  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2501  003438  2ADF               	incf	indf2,f,c
  2502                           
  2503                           ; BSR set to: 5
  2504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2505  00343A  0E00               	movlw	0
  2506  00343C  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2507  00343E  0E00               	movlw	0
  2508  003440  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  2509  003442  0012               	return	
  2510  003444                     l5600:
  2511                           
  2512                           ; BSR set to: 5
  2513                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2514  003444  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2515  00344A  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2516  003450  C4DF F4F6          	movff	indf2,tblptrl
  2517  003454                     	if	1	;There is more than 1 active tblptr byte
  2518  003454  0E25               	movlw	high __smallconst
  2519  003456  6EF7               	movwf	tblptrh,c
  2520  003458                     	endif
  2521  003458                     	if	0	;tblptru may be non-zero
  2522  003458                     	endif
  2523  003458                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2524  003458  0E00               	movlw	low (__smallconst shr (0+16))
  2525  00345A  6EF8               	movwf	tblptru,c
  2526  00345C                     	endif
  2527  00345C  0008               	tblrd		*
  2528  00345E  50F5               	movf	tablat,w,c
  2529  003460  6E18               	movwf	fputc@c^(0+1280),c
  2530  003462  6A19               	clrf	(fputc@c+1)^(0+1280),c
  2531  003464  C5B5  F51A         	movff	vfpfcnvrt@fp,fputc@fp
  2532  003468  C5B6  F51B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2533  00346C  EC42  F025         	call	_fputc	;wreg free
  2534                           
  2535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2536  003470  0061  F6DC  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  2537  003476  0061  F6E0  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2538  00347C  2ADF               	incf	indf2,f,c
  2539  00347E  D7D0               	goto	l5590
  2540  003480                     __end_of_vfpfcnvrt:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _strncmp *****************
  2544 ;; Defined at:
  2545 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  _l              2   22[COMRAM] PTR const unsigned char 
  2548 ;;		 -> vfpfcnvrt@ct(3), 
  2549 ;;  _r              1   24[COMRAM] PTR const unsigned char 
  2550 ;;		 -> STR_12(3), 
  2551 ;;  n               2   25[COMRAM] unsigned int 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  l               2   28[COMRAM] PTR const unsigned char 
  2554 ;;		 -> vfpfcnvrt@ct(3), 
  2555 ;;  r               1   30[COMRAM] PTR const unsigned char 
  2556 ;;		 -> STR_12(3), 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  2   22[COMRAM] int 
  2559 ;; Registers used:
  2560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2561 ;; Tracked objects:
  2562 ;;		On entry : 3F/5
  2563 ;;		On exit  : 3F/5
  2564 ;;		Unchanged: 3E/0
  2565 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2566 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2567 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2569 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2570 ;;Total ram usage:        9 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 2
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_vfpfcnvrt
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text4
  2581  00465E                     __ptext4:
  2582                           	callstack 0
  2583  00465E                     _strncmp:
  2584                           	callstack 121
  2585                           
  2586                           ; BSR set to: 5
  2587                           
  2588                           ;incstack = 0
  2589  00465E  C517  F51D         	movff	strncmp@_l,strncmp@l
  2590  004662  C518  F51E         	movff	strncmp@_l+1,strncmp@l+1
  2591  004666  C519  F51F         	movff	strncmp@_r,strncmp@r
  2592  00466A  061A               	decf	strncmp@n^(0+1280),f,c
  2593  00466C  A0D8               	btfss	status,0,c
  2594  00466E  061B               	decf	(strncmp@n+1)^(0+1280),f,c
  2595  004670  281A               	incf	strncmp@n^(0+1280),w,c
  2596  004672  E10E               	bnz	l5486
  2597  004674  281B               	incf	(strncmp@n+1)^(0+1280),w,c
  2598  004676  A4D8               	btfss	status,2,c
  2599  004678  D00B               	goto	l5486
  2600                           
  2601                           ; BSR set to: 5
  2602  00467A  0E00               	movlw	0
  2603  00467C  6E18               	movwf	(?_strncmp+1)^(0+1280),c
  2604  00467E  0E00               	movlw	0
  2605  004680  6E17               	movwf	?_strncmp^(0+1280),c
  2606  004682  0012               	return	
  2607  004684                     l5484:
  2608                           
  2609                           ; BSR set to: 5
  2610  004684  4A1D               	infsnz	strncmp@l^(0+1280),f,c
  2611  004686  2A1E               	incf	(strncmp@l+1)^(0+1280),f,c
  2612  004688  2A1F               	incf	strncmp@r^(0+1280),f,c
  2613  00468A  061A               	decf	strncmp@n^(0+1280),f,c
  2614  00468C  A0D8               	btfss	status,0,c
  2615  00468E  061B               	decf	(strncmp@n+1)^(0+1280),f,c
  2616  004690                     l5486:
  2617                           
  2618                           ; BSR set to: 5
  2619  004690  0061  F474  F4D9   	movff	strncmp@l,fsr2l
  2620  004696  0061  F478  F4DA   	movff	strncmp@l+1,fsr2h
  2621  00469C  50DF               	movf	indf2,w,c
  2622  00469E  B4D8               	btfsc	status,2,c
  2623  0046A0  D024               	goto	u6900
  2624                           
  2625                           ; BSR set to: 5
  2626  0046A2  0061  F47C  F4F6   	movff	strncmp@r,tblptrl
  2627  0046A8                     	if	1	;There is more than 1 active tblptr byte
  2628  0046A8  0E25               	movlw	high __smallconst
  2629  0046AA  6EF7               	movwf	tblptrh,c
  2630  0046AC                     	endif
  2631  0046AC                     	if	0	;tblptru may be non-zero
  2632  0046AC                     	endif
  2633  0046AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2634  0046AC  0E00               	movlw	low (__smallconst shr (0+16))
  2635  0046AE  6EF8               	movwf	tblptru,c
  2636  0046B0                     	endif
  2637  0046B0  0008               	tblrd		*
  2638  0046B2  50F5               	movf	tablat,w,c
  2639  0046B4  0900               	iorlw	0
  2640  0046B6  B4D8               	btfsc	status,2,c
  2641  0046B8  D018               	goto	u6900
  2642                           
  2643                           ; BSR set to: 5
  2644  0046BA  501A               	movf	strncmp@n^(0+1280),w,c
  2645  0046BC  101B               	iorwf	(strncmp@n+1)^(0+1280),w,c
  2646  0046BE  B4D8               	btfsc	status,2,c
  2647  0046C0  D014               	goto	u6900
  2648                           
  2649                           ; BSR set to: 5
  2650  0046C2  0061  F474  F4D9   	movff	strncmp@l,fsr2l
  2651  0046C8  0061  F478  F4DA   	movff	strncmp@l+1,fsr2h
  2652  0046CE  50DF               	movf	indf2,w,c
  2653  0046D0  6E1C               	movwf	??_strncmp^(0+1280),c
  2654  0046D2  0061  F47C  F4F6   	movff	strncmp@r,tblptrl
  2655  0046D8                     	if	1	;There is more than 1 active tblptr byte
  2656  0046D8  0E25               	movlw	high __smallconst
  2657  0046DA  6EF7               	movwf	tblptrh,c
  2658  0046DC                     	endif
  2659  0046DC                     	if	0	;tblptru may be non-zero
  2660  0046DC                     	endif
  2661  0046DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2662  0046DC  0E00               	movlw	low (__smallconst shr (0+16))
  2663  0046DE  6EF8               	movwf	tblptru,c
  2664  0046E0                     	endif
  2665  0046E0  0008               	tblrd		*
  2666  0046E2  50F5               	movf	tablat,w,c
  2667  0046E4  181C               	xorwf	??_strncmp^(0+1280),w,c
  2668  0046E6  B4D8               	btfsc	status,2,c
  2669  0046E8  D7CD               	goto	l5484
  2670  0046EA                     u6900:
  2671                           
  2672                           ; BSR set to: 5
  2673  0046EA  0061  F474  F4D9   	movff	strncmp@l,fsr2l
  2674  0046F0  0061  F478  F4DA   	movff	strncmp@l+1,fsr2h
  2675  0046F6  50DF               	movf	indf2,w,c
  2676  0046F8  6E1C               	movwf	??_strncmp^(0+1280),c
  2677  0046FA  0061  F47C  F4F6   	movff	strncmp@r,tblptrl
  2678  004700                     	if	1	;There is more than 1 active tblptr byte
  2679  004700  0E25               	movlw	high __smallconst
  2680  004702  6EF7               	movwf	tblptrh,c
  2681  004704                     	endif
  2682  004704                     	if	0	;tblptru may be non-zero
  2683  004704                     	endif
  2684  004704                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2685  004704  0E00               	movlw	low (__smallconst shr (0+16))
  2686  004706  6EF8               	movwf	tblptru,c
  2687  004708                     	endif
  2688  004708  0008               	tblrd		*
  2689  00470A  50F5               	movf	tablat,w,c
  2690  00470C  5C1C               	subwf	??_strncmp^(0+1280),w,c
  2691  00470E  6E17               	movwf	?_strncmp^(0+1280),c
  2692  004710  6A18               	clrf	(?_strncmp+1)^(0+1280),c
  2693  004712  A0D8               	btfss	status,0,c
  2694  004714  0618               	decf	(?_strncmp+1)^(0+1280),f,c
  2695                           
  2696                           ; BSR set to: 5
  2697  004716  0012               	return		;funcret
  2698  004718                     __end_of_strncmp:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _efgtoa *****************
  2702 ;; Defined at:
  2703 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  fp              2   23[BANK5 ] PTR struct _IO_FILE
  2706 ;;		 -> NULL(0), 
  2707 ;;  f               4   25[BANK5 ] PTR struct _IO_FILE
  2708 ;;  c               1   29[BANK5 ] unsigned char 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  u               4   81[BANK5 ] unsigned char 
  2711 ;;  g               4   73[BANK5 ] unsigned char 
  2712 ;;  l               4   67[BANK5 ] unsigned char 
  2713 ;;  h               4   63[BANK5 ] unsigned char 
  2714 ;;  ou              4   49[BANK5 ] unsigned char 
  2715 ;;  n               2   79[BANK5 ] int 
  2716 ;;  e               2   77[BANK5 ] int 
  2717 ;;  i               2   71[BANK5 ] int 
  2718 ;;  w               2   59[BANK5 ] int 
  2719 ;;  p               2   57[BANK5 ] int 
  2720 ;;  sign            2   55[BANK5 ] int 
  2721 ;;  d               2   53[BANK5 ] int 
  2722 ;;  m               2   47[BANK5 ] int 
  2723 ;;  ne              2   45[BANK5 ] int 
  2724 ;;  pp              2   43[BANK5 ] int 
  2725 ;;  t               2   41[BANK5 ] int 
  2726 ;;  mode            1   62[BANK5 ] unsigned char 
  2727 ;;  nmode           1   61[BANK5 ] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  2   23[BANK5 ] int 
  2730 ;; Registers used:
  2731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 3F/5
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2737 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2738 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2739 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2740 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2741 ;;Total ram usage:       62 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; Hardware stack levels required when called: 6
  2744 ;; This function calls:
  2745 ;;		___awdiv
  2746 ;;		___awmod
  2747 ;;		___fladd
  2748 ;;		___fldiv
  2749 ;;		___fleq
  2750 ;;		___flge
  2751 ;;		___flmul
  2752 ;;		___flneg
  2753 ;;		___flsub
  2754 ;;		___fltol
  2755 ;;		___fpclassifyf
  2756 ;;		_floorf
  2757 ;;		_isupper
  2758 ;;		_pad
  2759 ;;		_strcpy
  2760 ;;		_tolower
  2761 ;; This function is called by:
  2762 ;;		_vfpfcnvrt
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text5
  2767  00254E                     __ptext5:
  2768                           	callstack 0
  2769  00254E                     _efgtoa:
  2770                           	callstack 117
  2771                           
  2772                           ; BSR set to: 5
  2773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2774                           
  2775                           ; BSR set to: 5
  2776                           ;incstack = 0
  2777  00254E  0E00               	movlw	0
  2778  002550  6F98               	movwf	(efgtoa@sign+1)& (0+255),b
  2779  002552  0E00               	movlw	0
  2780  002554  6F97               	movwf	efgtoa@sign& (0+255),b
  2781                           
  2782                           ; BSR set to: 5
  2783                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2784  002556  C579  F5A9         	movff	efgtoa@f,efgtoa@g
  2785  00255A  C57A  F5AA         	movff	efgtoa@f+1,efgtoa@g+1
  2786  00255E  C57B  F5AB         	movff	efgtoa@f+2,efgtoa@g+2
  2787  002562  C57C  F5AC         	movff	efgtoa@f+3,efgtoa@g+3
  2788                           
  2789                           ; BSR set to: 5
  2790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2791  002566  AFAC               	btfss	(efgtoa@g+3)& (0+255),7,b
  2792  002568  D016               	goto	l5148
  2793                           
  2794                           ; BSR set to: 5
  2795                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2796  00256A  0E00               	movlw	0
  2797  00256C  6F98               	movwf	(efgtoa@sign+1)& (0+255),b
  2798  00256E  0E01               	movlw	1
  2799  002570  6F97               	movwf	efgtoa@sign& (0+255),b
  2800                           
  2801                           ; BSR set to: 5
  2802                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2803  002572  C5A9  F517         	movff	efgtoa@g,___flneg@f1
  2804  002576  C5AA  F518         	movff	efgtoa@g+1,___flneg@f1+1
  2805  00257A  C5AB  F519         	movff	efgtoa@g+2,___flneg@f1+2
  2806  00257E  C5AC  F51A         	movff	efgtoa@g+3,___flneg@f1+3
  2807  002582  ECFA  F026         	call	___flneg	;wreg free
  2808  002586  C517  F5A9         	movff	?___flneg,efgtoa@g
  2809  00258A  C518  F5AA         	movff	?___flneg+1,efgtoa@g+1
  2810  00258E  C519  F5AB         	movff	?___flneg+2,efgtoa@g+2
  2811  002592  C51A  F5AC         	movff	?___flneg+3,efgtoa@g+3
  2812  002596                     l5148:
  2813                           
  2814                           ; BSR set to: 5
  2815                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2816  002596  0E00               	movlw	0
  2817  002598  6FB0               	movwf	(efgtoa@n+1)& (0+255),b
  2818  00259A  0E00               	movlw	0
  2819  00259C  6FAF               	movwf	efgtoa@n& (0+255),b
  2820                           
  2821                           ; BSR set to: 5
  2822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2823  00259E  C5EA  F59B         	movff	_width,efgtoa@w
  2824  0025A2  C5EB  F59C         	movff	_width+1,efgtoa@w+1
  2825                           
  2826                           ; BSR set to: 5
  2827                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2828  0025A6  5197               	movf	efgtoa@sign& (0+255),w,b
  2829  0025A8  1198               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2830  0025AA  A4D8               	btfss	status,2,c
  2831  0025AC  D002               	goto	u6360
  2832                           
  2833                           ; BSR set to: 5
  2834  0025AE  A443               	btfss	_flags^(0+1280),2,c
  2835  0025B0  D013               	goto	l5168
  2836  0025B2                     u6360:
  2837                           
  2838                           ; BSR set to: 5
  2839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2840  0025B2  5197               	movf	efgtoa@sign& (0+255),w,b
  2841  0025B4  1198               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2842  0025B6  A4D8               	btfss	status,2,c
  2843  0025B8  D004               	goto	l5160
  2844                           
  2845                           ; BSR set to: 5
  2846  0025BA  0E00               	movlw	0
  2847  0025BC  6F84               	movwf	(_efgtoa$876+1)& (0+255),b
  2848  0025BE  0E2B               	movlw	43
  2849  0025C0  D003               	goto	L1
  2850  0025C2                     l5160:
  2851                           
  2852                           ; BSR set to: 5
  2853  0025C2  0E00               	movlw	0
  2854  0025C4  6F84               	movwf	(_efgtoa$876+1)& (0+255),b
  2855  0025C6  0E2D               	movlw	45
  2856  0025C8                     L1:
  2857  0025C8  6F83               	movwf	_efgtoa$876& (0+255),b
  2858                           
  2859                           ; BSR set to: 5
  2860  0025CA  C583  F600         	movff	_efgtoa$876,_dbuf
  2861                           
  2862                           ; BSR set to: 5
  2863                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2864  0025CE  4BAF               	infsnz	efgtoa@n& (0+255),f,b
  2865  0025D0  2BB0               	incf	(efgtoa@n+1)& (0+255),f,b
  2866                           
  2867                           ; BSR set to: 5
  2868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2869  0025D2  079B               	decf	efgtoa@w& (0+255),f,b
  2870  0025D4  A0D8               	btfss	status,0,c
  2871  0025D6  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  2872  0025D8                     l5168:
  2873                           
  2874                           ; BSR set to: 5
  2875                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2876  0025D8  C5A9  F517         	movff	efgtoa@g,___fpclassifyf@x
  2877  0025DC  C5AA  F518         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2878  0025E0  C5AB  F519         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2879  0025E4  C5AC  F51A         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2880  0025E8  EC63  F022         	call	___fpclassifyf	;wreg free
  2881  0025EC  0417               	decf	?___fpclassifyf^(0+1280),w,c
  2882  0025EE  1018               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  2883  0025F0  A4D8               	btfss	status,2,c
  2884  0025F2  D047               	goto	l5186
  2885  0025F4  0EBF               	movlw	191
  2886  0025F6  0105               	movlb	5	; () banked
  2887  0025F8  6F7E               	movwf	??_efgtoa& (0+255),b
  2888  0025FA  0EFF               	movlw	255
  2889  0025FC  6F7F               	movwf	(??_efgtoa+1)& (0+255),b
  2890  0025FE  517D               	movf	efgtoa@c& (0+255),w,b
  2891  002600  6F80               	movwf	(??_efgtoa+2)& (0+255),b
  2892  002602  6B81               	clrf	(??_efgtoa+3)& (0+255),b
  2893  002604  517E               	movf	??_efgtoa& (0+255),w,b
  2894  002606  2780               	addwf	(??_efgtoa+2)& (0+255),f,b
  2895  002608  517F               	movf	(??_efgtoa+1)& (0+255),w,b
  2896  00260A  2381               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2897  00260C  5181               	movf	(??_efgtoa+3)& (0+255),w,b
  2898  00260E  E113               	bnz	l5178
  2899  002610  0E1A               	movlw	26
  2900  002612  5D80               	subwf	(??_efgtoa+2)& (0+255),w,b
  2901  002614  B0D8               	btfsc	status,0,c
  2902  002616  D00F               	goto	l5178
  2903                           
  2904                           ; BSR set to: 5
  2905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2906  002618  0E00               	movlw	low _dbuf
  2907  00261A  25AF               	addwf	efgtoa@n& (0+255),w,b
  2908  00261C  6E17               	movwf	strcpy@dest^(0+1280),c
  2909  00261E  0E06               	movlw	high _dbuf
  2910  002620  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2911  002622  6E18               	movwf	(strcpy@dest+1)^(0+1280),c
  2912  002624  0E3A               	movlw	low STR_2
  2913  002626  6E19               	movwf	strcpy@src^(0+1280),c
  2914  002628  5019               	movf	strcpy@src^(0+1280),w,c
  2915  00262A  A4D8               	btfss	status,2,c
  2916  00262C  0E25               	movlw	high __smallconst
  2917  00262E  6E1A               	movwf	(strcpy@src+1)^(0+1280),c
  2918  002630  EC78  F025         	call	_strcpy	;wreg free
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2921  002634  D00E               	goto	l5180
  2922  002636                     l5178:
  2923                           
  2924                           ; BSR set to: 5
  2925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2926  002636  0E00               	movlw	low _dbuf
  2927  002638  25AF               	addwf	efgtoa@n& (0+255),w,b
  2928  00263A  6E17               	movwf	strcpy@dest^(0+1280),c
  2929  00263C  0E06               	movlw	high _dbuf
  2930  00263E  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2931  002640  6E18               	movwf	(strcpy@dest+1)^(0+1280),c
  2932  002642  0E42               	movlw	low STR_3
  2933  002644  6E19               	movwf	strcpy@src^(0+1280),c
  2934  002646  5019               	movf	strcpy@src^(0+1280),w,c
  2935  002648  A4D8               	btfss	status,2,c
  2936  00264A  0E25               	movlw	high __smallconst
  2937  00264C  6E1A               	movwf	(strcpy@src+1)^(0+1280),c
  2938  00264E  EC78  F025         	call	_strcpy	;wreg free
  2939  002652                     l5180:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2942  002652  0105               	movlb	5	; () banked
  2943  002654  0EFD               	movlw	253
  2944  002656  279B               	addwf	efgtoa@w& (0+255),f,b
  2945  002658  0EFF               	movlw	255
  2946  00265A  239C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2947                           
  2948                           ; BSR set to: 5
  2949                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2950  00265C  C577  F528         	movff	efgtoa@fp,pad@fp
  2951  002660  C578  F529         	movff	efgtoa@fp+1,pad@fp+1
  2952  002664  0E00               	movlw	low _dbuf
  2953  002666  6E2A               	movwf	pad@buf^(0+1280),c
  2954  002668  0E06               	movlw	high _dbuf
  2955  00266A  6E2B               	movwf	(pad@buf+1)^(0+1280),c
  2956  00266C  C59B  F52C         	movff	efgtoa@w,pad@p
  2957  002670  C59C  F52D         	movff	efgtoa@w+1,pad@p+1
  2958  002674  EC38  F024         	call	_pad	;wreg free
  2959  002678  C528  F577         	movff	?_pad,?_efgtoa
  2960  00267C  C529  F578         	movff	?_pad+1,?_efgtoa+1
  2961  002680  0012               	return	
  2962  002682                     l5186:
  2963                           
  2964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2965  002682  C5A9  F517         	movff	efgtoa@g,___fpclassifyf@x
  2966  002686  C5AA  F518         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2967  00268A  C5AB  F519         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2968  00268E  C5AC  F51A         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2969  002692  EC63  F022         	call	___fpclassifyf	;wreg free
  2970  002696  5017               	movf	?___fpclassifyf^(0+1280),w,c
  2971  002698  1018               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  2972  00269A  A4D8               	btfss	status,2,c
  2973  00269C  D047               	goto	l5204
  2974  00269E  0EBF               	movlw	191
  2975  0026A0  0105               	movlb	5	; () banked
  2976  0026A2  6F7E               	movwf	??_efgtoa& (0+255),b
  2977  0026A4  0EFF               	movlw	255
  2978  0026A6  6F7F               	movwf	(??_efgtoa+1)& (0+255),b
  2979  0026A8  517D               	movf	efgtoa@c& (0+255),w,b
  2980  0026AA  6F80               	movwf	(??_efgtoa+2)& (0+255),b
  2981  0026AC  6B81               	clrf	(??_efgtoa+3)& (0+255),b
  2982  0026AE  517E               	movf	??_efgtoa& (0+255),w,b
  2983  0026B0  2780               	addwf	(??_efgtoa+2)& (0+255),f,b
  2984  0026B2  517F               	movf	(??_efgtoa+1)& (0+255),w,b
  2985  0026B4  2381               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2986  0026B6  5181               	movf	(??_efgtoa+3)& (0+255),w,b
  2987  0026B8  E113               	bnz	l5196
  2988  0026BA  0E1A               	movlw	26
  2989  0026BC  5D80               	subwf	(??_efgtoa+2)& (0+255),w,b
  2990  0026BE  B0D8               	btfsc	status,0,c
  2991  0026C0  D00F               	goto	l5196
  2992                           
  2993                           ; BSR set to: 5
  2994                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2995  0026C2  0E00               	movlw	low _dbuf
  2996  0026C4  25AF               	addwf	efgtoa@n& (0+255),w,b
  2997  0026C6  6E17               	movwf	strcpy@dest^(0+1280),c
  2998  0026C8  0E06               	movlw	high _dbuf
  2999  0026CA  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3000  0026CC  6E18               	movwf	(strcpy@dest+1)^(0+1280),c
  3001  0026CE  0E3E               	movlw	low STR_6
  3002  0026D0  6E19               	movwf	strcpy@src^(0+1280),c
  3003  0026D2  5019               	movf	strcpy@src^(0+1280),w,c
  3004  0026D4  A4D8               	btfss	status,2,c
  3005  0026D6  0E25               	movlw	high __smallconst
  3006  0026D8  6E1A               	movwf	(strcpy@src+1)^(0+1280),c
  3007  0026DA  EC78  F025         	call	_strcpy	;wreg free
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3010  0026DE  D00E               	goto	l5198
  3011  0026E0                     l5196:
  3012                           
  3013                           ; BSR set to: 5
  3014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3015  0026E0  0E00               	movlw	low _dbuf
  3016  0026E2  25AF               	addwf	efgtoa@n& (0+255),w,b
  3017  0026E4  6E17               	movwf	strcpy@dest^(0+1280),c
  3018  0026E6  0E06               	movlw	high _dbuf
  3019  0026E8  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3020  0026EA  6E18               	movwf	(strcpy@dest+1)^(0+1280),c
  3021  0026EC  0E46               	movlw	low STR_7
  3022  0026EE  6E19               	movwf	strcpy@src^(0+1280),c
  3023  0026F0  5019               	movf	strcpy@src^(0+1280),w,c
  3024  0026F2  A4D8               	btfss	status,2,c
  3025  0026F4  0E25               	movlw	high __smallconst
  3026  0026F6  6E1A               	movwf	(strcpy@src+1)^(0+1280),c
  3027  0026F8  EC78  F025         	call	_strcpy	;wreg free
  3028  0026FC                     l5198:
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3031  0026FC  0105               	movlb	5	; () banked
  3032  0026FE  0EFD               	movlw	253
  3033  002700  279B               	addwf	efgtoa@w& (0+255),f,b
  3034  002702  0EFF               	movlw	255
  3035  002704  239C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3036                           
  3037                           ; BSR set to: 5
  3038                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3039  002706  C577  F528         	movff	efgtoa@fp,pad@fp
  3040  00270A  C578  F529         	movff	efgtoa@fp+1,pad@fp+1
  3041  00270E  0E00               	movlw	low _dbuf
  3042  002710  6E2A               	movwf	pad@buf^(0+1280),c
  3043  002712  0E06               	movlw	high _dbuf
  3044  002714  6E2B               	movwf	(pad@buf+1)^(0+1280),c
  3045  002716  C59B  F52C         	movff	efgtoa@w,pad@p
  3046  00271A  C59C  F52D         	movff	efgtoa@w+1,pad@p+1
  3047  00271E  EC38  F024         	call	_pad	;wreg free
  3048  002722  C528  F577         	movff	?_pad,?_efgtoa
  3049  002726  C529  F578         	movff	?_pad+1,?_efgtoa+1
  3050  00272A  0012               	return	
  3051  00272C                     l5204:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3054  00272C  0E00               	movlw	0
  3055  00272E  0105               	movlb	5	; () banked
  3056  002730  6FB1               	movwf	efgtoa@u& (0+255),b
  3057  002732  0E00               	movlw	0
  3058  002734  6FB2               	movwf	(efgtoa@u+1)& (0+255),b
  3059  002736  0E80               	movlw	128
  3060  002738  6FB3               	movwf	(efgtoa@u+2)& (0+255),b
  3061  00273A  0E3F               	movlw	63
  3062  00273C  6FB4               	movwf	(efgtoa@u+3)& (0+255),b
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3065  00273E  0E00               	movlw	0
  3066  002740  6FAE               	movwf	(efgtoa@e+1)& (0+255),b
  3067  002742  0E00               	movlw	0
  3068  002744  6FAD               	movwf	efgtoa@e& (0+255),b
  3069                           
  3070                           ; BSR set to: 5
  3071                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3072  002746  C5A9  F517         	movff	efgtoa@g,___fleq@ff1
  3073  00274A  C5AA  F518         	movff	efgtoa@g+1,___fleq@ff1+1
  3074  00274E  C5AB  F519         	movff	efgtoa@g+2,___fleq@ff1+2
  3075  002752  C5AC  F51A         	movff	efgtoa@g+3,___fleq@ff1+3
  3076  002756  0E00               	movlw	0
  3077  002758  6E1B               	movwf	___fleq@ff2^(0+1280),c
  3078  00275A  0E00               	movlw	0
  3079  00275C  6E1C               	movwf	(___fleq@ff2+1)^(0+1280),c
  3080  00275E  0E00               	movlw	0
  3081  002760  6E1D               	movwf	(___fleq@ff2+2)^(0+1280),c
  3082  002762  0E00               	movlw	0
  3083  002764  6E1E               	movwf	(___fleq@ff2+3)^(0+1280),c
  3084  002766  EC83  F024         	call	___fleq	;wreg free
  3085  00276A  A0D8               	btfss	status,0,c
  3086  00276C  D01E               	goto	l5214
  3087  00276E  D075               	goto	u6440
  3088  002770                     l5210:
  3089                           
  3090                           ; BSR set to: 5
  3091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3092  002770  C5B1  F517         	movff	efgtoa@u,___flmul@b
  3093  002774  C5B2  F518         	movff	efgtoa@u+1,___flmul@b+1
  3094  002778  C5B3  F519         	movff	efgtoa@u+2,___flmul@b+2
  3095  00277C  C5B4  F51A         	movff	efgtoa@u+3,___flmul@b+3
  3096  002780  0E00               	movlw	0
  3097  002782  6E1B               	movwf	___flmul@a^(0+1280),c
  3098  002784  0E00               	movlw	0
  3099  002786  6E1C               	movwf	(___flmul@a+1)^(0+1280),c
  3100  002788  0E20               	movlw	32
  3101  00278A  6E1D               	movwf	(___flmul@a+2)^(0+1280),c
  3102  00278C  0E41               	movlw	65
  3103  00278E  6E1E               	movwf	(___flmul@a+3)^(0+1280),c
  3104  002790  EC40  F01A         	call	___flmul	;wreg free
  3105  002794  C517  F5B1         	movff	?___flmul,efgtoa@u
  3106  002798  C518  F5B2         	movff	?___flmul+1,efgtoa@u+1
  3107  00279C  C519  F5B3         	movff	?___flmul+2,efgtoa@u+2
  3108  0027A0  C51A  F5B4         	movff	?___flmul+3,efgtoa@u+3
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3111  0027A4  0105               	movlb	5	; () banked
  3112  0027A6  4BAD               	infsnz	efgtoa@e& (0+255),f,b
  3113  0027A8  2BAE               	incf	(efgtoa@e+1)& (0+255),f,b
  3114  0027AA                     l5214:
  3115                           
  3116                           ; BSR set to: 5
  3117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3118  0027AA  C5A9  F530         	movff	efgtoa@g,___flge@ff1
  3119  0027AE  C5AA  F531         	movff	efgtoa@g+1,___flge@ff1+1
  3120  0027B2  C5AB  F532         	movff	efgtoa@g+2,___flge@ff1+2
  3121  0027B6  C5AC  F533         	movff	efgtoa@g+3,___flge@ff1+3
  3122  0027BA  0E00               	movlw	0
  3123  0027BC  6E1B               	movwf	___flmul@a^(0+1280),c
  3124  0027BE  0E00               	movlw	0
  3125  0027C0  6E1C               	movwf	(___flmul@a+1)^(0+1280),c
  3126  0027C2  0E20               	movlw	32
  3127  0027C4  6E1D               	movwf	(___flmul@a+2)^(0+1280),c
  3128  0027C6  0E41               	movlw	65
  3129  0027C8  6E1E               	movwf	(___flmul@a+3)^(0+1280),c
  3130  0027CA  C5B1  F517         	movff	efgtoa@u,___flmul@b
  3131  0027CE  C5B2  F518         	movff	efgtoa@u+1,___flmul@b+1
  3132  0027D2  C5B3  F519         	movff	efgtoa@u+2,___flmul@b+2
  3133  0027D6  C5B4  F51A         	movff	efgtoa@u+3,___flmul@b+3
  3134  0027DA  EC40  F01A         	call	___flmul	;wreg free
  3135  0027DE  C517  F534         	movff	?___flmul,___flge@ff2
  3136  0027E2  C518  F535         	movff	?___flmul+1,___flge@ff2+1
  3137  0027E6  C519  F536         	movff	?___flmul+2,___flge@ff2+2
  3138  0027EA  C51A  F537         	movff	?___flmul+3,___flge@ff2+3
  3139  0027EE  ECFA  F021         	call	___flge	;wreg free
  3140  0027F2  A0D8               	btfss	status,0,c
  3141  0027F4  D01E               	goto	l5220
  3142  0027F6  D7BC               	goto	l5210
  3143  0027F8                     l5216:
  3144                           
  3145                           ; BSR set to: 5
  3146                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3147  0027F8  C5B1  F525         	movff	efgtoa@u,___fldiv@b
  3148  0027FC  C5B2  F526         	movff	efgtoa@u+1,___fldiv@b+1
  3149  002800  C5B3  F527         	movff	efgtoa@u+2,___fldiv@b+2
  3150  002804  C5B4  F528         	movff	efgtoa@u+3,___fldiv@b+3
  3151  002808  0E00               	movlw	0
  3152  00280A  6E29               	movwf	___fldiv@a^(0+1280),c
  3153  00280C  0E00               	movlw	0
  3154  00280E  6E2A               	movwf	(___fldiv@a+1)^(0+1280),c
  3155  002810  0E20               	movlw	32
  3156  002812  6E2B               	movwf	(___fldiv@a+2)^(0+1280),c
  3157  002814  0E41               	movlw	65
  3158  002816  6E2C               	movwf	(___fldiv@a+3)^(0+1280),c
  3159  002818  EC6E  F01D         	call	___fldiv	;wreg free
  3160  00281C  C525  F5B1         	movff	?___fldiv,efgtoa@u
  3161  002820  C526  F5B2         	movff	?___fldiv+1,efgtoa@u+1
  3162  002824  C527  F5B3         	movff	?___fldiv+2,efgtoa@u+2
  3163  002828  C528  F5B4         	movff	?___fldiv+3,efgtoa@u+3
  3164                           
  3165                           ; BSR set to: 5
  3166                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3167  00282C  07AD               	decf	efgtoa@e& (0+255),f,b
  3168  00282E  A0D8               	btfss	status,0,c
  3169  002830  07AE               	decf	(efgtoa@e+1)& (0+255),f,b
  3170  002832                     l5220:
  3171                           
  3172                           ; BSR set to: 5
  3173                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3174  002832  C5A9  F530         	movff	efgtoa@g,___flge@ff1
  3175  002836  C5AA  F531         	movff	efgtoa@g+1,___flge@ff1+1
  3176  00283A  C5AB  F532         	movff	efgtoa@g+2,___flge@ff1+2
  3177  00283E  C5AC  F533         	movff	efgtoa@g+3,___flge@ff1+3
  3178  002842  C5B1  F534         	movff	efgtoa@u,___flge@ff2
  3179  002846  C5B2  F535         	movff	efgtoa@u+1,___flge@ff2+1
  3180  00284A  C5B3  F536         	movff	efgtoa@u+2,___flge@ff2+2
  3181  00284E  C5B4  F537         	movff	efgtoa@u+3,___flge@ff2+3
  3182  002852  ECFA  F021         	call	___flge	;wreg free
  3183  002856  A0D8               	btfss	status,0,c
  3184  002858  D7CF               	goto	l5216
  3185  00285A                     u6440:
  3186                           
  3187                           ; BSR set to: 5
  3188                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3189  00285A  C57D  F51D         	movff	efgtoa@c,tolower@c
  3190  00285E  6A1E               	clrf	(tolower@c+1)^(0+1280),c
  3191  002860  EC40  F026         	call	_tolower	;wreg free
  3192  002864  501D               	movf	?_tolower^(0+1280),w,c
  3193  002866  6F9E               	movwf	efgtoa@mode& (0+255),b
  3194                           
  3195                           ; BSR set to: 5
  3196                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3197  002868  C59E  F59D         	movff	efgtoa@mode,efgtoa@nmode
  3198                           
  3199                           ; BSR set to: 5
  3200                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3201  00286C  0E67               	movlw	103
  3202  00286E  199E               	xorwf	efgtoa@mode& (0+255),w,b
  3203  002870  A4D8               	btfss	status,2,c
  3204  002872  D019               	goto	l5236
  3205                           
  3206                           ; BSR set to: 5
  3207                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3208  002874  51EC               	movf	_prec& (0+255),w,b
  3209  002876  11ED               	iorwf	(_prec+1)& (0+255),w,b
  3210  002878  A4D8               	btfss	status,2,c
  3211  00287A  D004               	goto	l5232
  3212                           
  3213                           ; BSR set to: 5
  3214                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3215  00287C  0E00               	movlw	0
  3216  00287E  6FED               	movwf	(_prec+1)& (0+255),b
  3217  002880  0E01               	movlw	1
  3218  002882  6FEC               	movwf	_prec& (0+255),b
  3219  002884                     l5232:
  3220                           
  3221                           ; BSR set to: 5
  3222                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3223  002884  BFED               	btfsc	(_prec+1)& (0+255),7,b
  3224  002886  D005               	goto	u6470
  3225  002888  51ED               	movf	(_prec+1)& (0+255),w,b
  3226  00288A  E108               	bnz	l1029
  3227  00288C  05EC               	decf	_prec& (0+255),w,b
  3228  00288E  B0D8               	btfsc	status,0,c
  3229  002890  D005               	goto	l1029
  3230  002892                     u6470:
  3231                           
  3232                           ; BSR set to: 5
  3233  002892  0E00               	movlw	0
  3234  002894  6F9A               	movwf	(efgtoa@p+1)& (0+255),b
  3235  002896  0E06               	movlw	6
  3236  002898  6F99               	movwf	efgtoa@p& (0+255),b
  3237  00289A  D008               	goto	l5242
  3238  00289C                     l1029:
  3239                           
  3240                           ; BSR set to: 5
  3241  00289C  C5EC  F599         	movff	_prec,efgtoa@p
  3242  0028A0  C5ED  F59A         	movff	_prec+1,efgtoa@p+1
  3243  0028A4  D003               	goto	l5242
  3244  0028A6                     l5236:
  3245                           
  3246                           ; BSR set to: 5
  3247                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3248  0028A6  AFED               	btfss	(_prec+1)& (0+255),7,b
  3249  0028A8  D7F9               	goto	l1029
  3250  0028AA  D7F3               	goto	u6470
  3251  0028AC                     l5242:
  3252                           
  3253                           ; BSR set to: 5
  3254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3255  0028AC  0E67               	movlw	103
  3256  0028AE  199E               	xorwf	efgtoa@mode& (0+255),w,b
  3257  0028B0  A4D8               	btfss	status,2,c
  3258  0028B2  D022               	goto	l5252
  3259                           
  3260                           ; BSR set to: 5
  3261                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3262  0028B4  AFAE               	btfss	(efgtoa@e+1)& (0+255),7,b
  3263  0028B6  D006               	goto	u6500
  3264  0028B8  0EFC               	movlw	252
  3265  0028BA  5DAD               	subwf	efgtoa@e& (0+255),w,b
  3266  0028BC  0EFF               	movlw	255
  3267  0028BE  59AE               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3268  0028C0  A0D8               	btfss	status,0,c
  3269  0028C2  D018               	goto	l5250
  3270  0028C4                     u6500:
  3271                           
  3272                           ; BSR set to: 5
  3273  0028C4  0EFF               	movlw	255
  3274  0028C6  6F7E               	movwf	??_efgtoa& (0+255),b
  3275  0028C8  0EFF               	movlw	255
  3276  0028CA  6F7F               	movwf	(??_efgtoa+1)& (0+255),b
  3277  0028CC  C599  F580         	movff	efgtoa@p,??_efgtoa+2
  3278  0028D0  C59A  F581         	movff	efgtoa@p+1,??_efgtoa+3
  3279  0028D4  517E               	movf	??_efgtoa& (0+255),w,b
  3280  0028D6  2780               	addwf	(??_efgtoa+2)& (0+255),f,b
  3281  0028D8  517F               	movf	(??_efgtoa+1)& (0+255),w,b
  3282  0028DA  2381               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3283  0028DC  51AD               	movf	efgtoa@e& (0+255),w,b
  3284  0028DE  5D80               	subwf	(??_efgtoa+2)& (0+255),w,b
  3285  0028E0  5181               	movf	(??_efgtoa+3)& (0+255),w,b
  3286  0028E2  0A80               	xorlw	128
  3287  0028E4  6F82               	movwf	(??_efgtoa+4)& (0+255),b
  3288  0028E6  51AE               	movf	(efgtoa@e+1)& (0+255),w,b
  3289  0028E8  0A80               	xorlw	128
  3290  0028EA  5982               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3291  0028EC  A0D8               	btfss	status,0,c
  3292  0028EE  D002               	goto	l5250
  3293                           
  3294                           ; BSR set to: 5
  3295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3296  0028F0  0E66               	movlw	102
  3297  0028F2  D001               	goto	L2
  3298  0028F4                     l5250:
  3299                           
  3300                           ; BSR set to: 5
  3301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3302  0028F4  0E65               	movlw	101
  3303  0028F6                     L2:
  3304  0028F6  6F9D               	movwf	efgtoa@nmode& (0+255),b
  3305  0028F8                     l5252:
  3306                           
  3307                           ; BSR set to: 5
  3308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3309  0028F8  C599  F58F         	movff	efgtoa@p,efgtoa@m
  3310  0028FC  C59A  F590         	movff	efgtoa@p+1,efgtoa@m+1
  3311                           
  3312                           ; BSR set to: 5
  3313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3314  002900  0E67               	movlw	103
  3315  002902  199E               	xorwf	efgtoa@mode& (0+255),w,b
  3316  002904  A4D8               	btfss	status,2,c
  3317  002906  D005               	goto	u6540
  3318                           
  3319                           ; BSR set to: 5
  3320  002908  0E66               	movlw	102
  3321  00290A  199D               	xorwf	efgtoa@nmode& (0+255),w,b
  3322  00290C  B4D8               	btfsc	status,2,c
  3323                           
  3324                           ; BSR set to: 5
  3325  00290E  AFAE               	btfss	(efgtoa@e+1)& (0+255),7,b
  3326  002910  D002               	goto	l5262
  3327  002912                     u6540:
  3328                           
  3329                           ; BSR set to: 5
  3330                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3331  002912  4B8F               	infsnz	efgtoa@m& (0+255),f,b
  3332  002914  2B90               	incf	(efgtoa@m+1)& (0+255),f,b
  3333  002916                     l5262:
  3334                           
  3335                           ; BSR set to: 5
  3336                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3337  002916  0E66               	movlw	102
  3338  002918  199D               	xorwf	efgtoa@nmode& (0+255),w,b
  3339  00291A  A4D8               	btfss	status,2,c
  3340  00291C  D016               	goto	l5272
  3341                           
  3342                           ; BSR set to: 5
  3343                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3344  00291E  AFAE               	btfss	(efgtoa@e+1)& (0+255),7,b
  3345  002920  D00C               	goto	l5268
  3346                           
  3347                           ; BSR set to: 5
  3348                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3349  002922  0E00               	movlw	0
  3350  002924  6FB1               	movwf	efgtoa@u& (0+255),b
  3351  002926  0E00               	movlw	0
  3352  002928  6FB2               	movwf	(efgtoa@u+1)& (0+255),b
  3353  00292A  0E80               	movlw	128
  3354  00292C  6FB3               	movwf	(efgtoa@u+2)& (0+255),b
  3355  00292E  0E3F               	movlw	63
  3356  002930  6FB4               	movwf	(efgtoa@u+3)& (0+255),b
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3359  002932  0E00               	movlw	0
  3360  002934  6FAE               	movwf	(efgtoa@e+1)& (0+255),b
  3361  002936  0E00               	movlw	0
  3362  002938  6FAD               	movwf	efgtoa@e& (0+255),b
  3363  00293A                     l5268:
  3364                           
  3365                           ; BSR set to: 5
  3366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3367  00293A  0E67               	movlw	103
  3368  00293C  199E               	xorwf	efgtoa@mode& (0+255),w,b
  3369  00293E  B4D8               	btfsc	status,2,c
  3370  002940  D004               	goto	l5272
  3371                           
  3372                           ; BSR set to: 5
  3373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3374  002942  51AD               	movf	efgtoa@e& (0+255),w,b
  3375  002944  278F               	addwf	efgtoa@m& (0+255),f,b
  3376  002946  51AE               	movf	(efgtoa@e+1)& (0+255),w,b
  3377  002948  2390               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3378  00294A                     l5272:
  3379                           
  3380                           ; BSR set to: 5
  3381                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3382  00294A  0E00               	movlw	0
  3383  00294C  6FA8               	movwf	(efgtoa@i+1)& (0+255),b
  3384  00294E  0E00               	movlw	0
  3385  002950  6FA7               	movwf	efgtoa@i& (0+255),b
  3386                           
  3387                           ; BSR set to: 5
  3388                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3389  002952  C5A9  F59F         	movff	efgtoa@g,efgtoa@h
  3390  002956  C5AA  F5A0         	movff	efgtoa@g+1,efgtoa@h+1
  3391  00295A  C5AB  F5A1         	movff	efgtoa@g+2,efgtoa@h+2
  3392  00295E  C5AC  F5A2         	movff	efgtoa@g+3,efgtoa@h+3
  3393                           
  3394                           ; BSR set to: 5
  3395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3396  002962  C5B1  F591         	movff	efgtoa@u,efgtoa@ou
  3397  002966  C5B2  F592         	movff	efgtoa@u+1,efgtoa@ou+1
  3398  00296A  C5B3  F593         	movff	efgtoa@u+2,efgtoa@ou+2
  3399  00296E  C5B4  F594         	movff	efgtoa@u+3,efgtoa@ou+3
  3400                           
  3401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3402  002972  D07A               	goto	l5286
  3403  002974                     l5278:
  3404                           
  3405                           ; BSR set to: 5
  3406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3407  002974  C59F  F525         	movff	efgtoa@h,___fldiv@b
  3408  002978  C5A0  F526         	movff	efgtoa@h+1,___fldiv@b+1
  3409  00297C  C5A1  F527         	movff	efgtoa@h+2,___fldiv@b+2
  3410  002980  C5A2  F528         	movff	efgtoa@h+3,___fldiv@b+3
  3411  002984  C5B1  F529         	movff	efgtoa@u,___fldiv@a
  3412  002988  C5B2  F52A         	movff	efgtoa@u+1,___fldiv@a+1
  3413  00298C  C5B3  F52B         	movff	efgtoa@u+2,___fldiv@a+2
  3414  002990  C5B4  F52C         	movff	efgtoa@u+3,___fldiv@a+3
  3415  002994  EC6E  F01D         	call	___fldiv	;wreg free
  3416  002998  C525  F531         	movff	?___fldiv,floorf@x
  3417  00299C  C526  F532         	movff	?___fldiv+1,floorf@x+1
  3418  0029A0  C527  F533         	movff	?___fldiv+2,floorf@x+2
  3419  0029A4  C528  F534         	movff	?___fldiv+3,floorf@x+3
  3420  0029A8  ECEC  F01F         	call	_floorf	;wreg free
  3421  0029AC  C531  F5A3         	movff	?_floorf,efgtoa@l
  3422  0029B0  C532  F5A4         	movff	?_floorf+1,efgtoa@l+1
  3423  0029B4  C533  F5A5         	movff	?_floorf+2,efgtoa@l+2
  3424  0029B8  C534  F5A6         	movff	?_floorf+3,efgtoa@l+3
  3425                           
  3426                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3427  0029BC  C5A3  F517         	movff	efgtoa@l,___fltol@f1
  3428  0029C0  C5A4  F518         	movff	efgtoa@l+1,___fltol@f1+1
  3429  0029C4  C5A5  F519         	movff	efgtoa@l+2,___fltol@f1+2
  3430  0029C8  C5A6  F51A         	movff	efgtoa@l+3,___fltol@f1+3
  3431  0029CC  EC8C  F023         	call	___fltol	;wreg free
  3432  0029D0  C517  F595         	movff	?___fltol,efgtoa@d
  3433  0029D4  C518  F596         	movff	?___fltol+1,efgtoa@d+1
  3434                           
  3435                           ; BSR set to: 5
  3436                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3437  0029D8  C59F  F530         	movff	efgtoa@h,___flsub@b
  3438  0029DC  C5A0  F531         	movff	efgtoa@h+1,___flsub@b+1
  3439  0029E0  C5A1  F532         	movff	efgtoa@h+2,___flsub@b+2
  3440  0029E4  C5A2  F533         	movff	efgtoa@h+3,___flsub@b+3
  3441  0029E8  C5B1  F51B         	movff	efgtoa@u,___flmul@a
  3442  0029EC  C5B2  F51C         	movff	efgtoa@u+1,___flmul@a+1
  3443  0029F0  C5B3  F51D         	movff	efgtoa@u+2,___flmul@a+2
  3444  0029F4  C5B4  F51E         	movff	efgtoa@u+3,___flmul@a+3
  3445  0029F8  C5A3  F517         	movff	efgtoa@l,___flmul@b
  3446  0029FC  C5A4  F518         	movff	efgtoa@l+1,___flmul@b+1
  3447  002A00  C5A5  F519         	movff	efgtoa@l+2,___flmul@b+2
  3448  002A04  C5A6  F51A         	movff	efgtoa@l+3,___flmul@b+3
  3449  002A08  EC40  F01A         	call	___flmul	;wreg free
  3450  002A0C  C517  F534         	movff	?___flmul,___flsub@a
  3451  002A10  C518  F535         	movff	?___flmul+1,___flsub@a+1
  3452  002A14  C519  F536         	movff	?___flmul+2,___flsub@a+2
  3453  002A18  C51A  F537         	movff	?___flmul+3,___flsub@a+3
  3454  002A1C  ECFE  F025         	call	___flsub	;wreg free
  3455  002A20  C530  F59F         	movff	?___flsub,efgtoa@h
  3456  002A24  C531  F5A0         	movff	?___flsub+1,efgtoa@h+1
  3457  002A28  C532  F5A1         	movff	?___flsub+2,efgtoa@h+2
  3458  002A2C  C533  F5A2         	movff	?___flsub+3,efgtoa@h+3
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3461  002A30  C5B1  F525         	movff	efgtoa@u,___fldiv@b
  3462  002A34  C5B2  F526         	movff	efgtoa@u+1,___fldiv@b+1
  3463  002A38  C5B3  F527         	movff	efgtoa@u+2,___fldiv@b+2
  3464  002A3C  C5B4  F528         	movff	efgtoa@u+3,___fldiv@b+3
  3465  002A40  0E00               	movlw	0
  3466  002A42  6E29               	movwf	___fldiv@a^(0+1280),c
  3467  002A44  0E00               	movlw	0
  3468  002A46  6E2A               	movwf	(___fldiv@a+1)^(0+1280),c
  3469  002A48  0E20               	movlw	32
  3470  002A4A  6E2B               	movwf	(___fldiv@a+2)^(0+1280),c
  3471  002A4C  0E41               	movlw	65
  3472  002A4E  6E2C               	movwf	(___fldiv@a+3)^(0+1280),c
  3473  002A50  EC6E  F01D         	call	___fldiv	;wreg free
  3474  002A54  C525  F5B1         	movff	?___fldiv,efgtoa@u
  3475  002A58  C526  F5B2         	movff	?___fldiv+1,efgtoa@u+1
  3476  002A5C  C527  F5B3         	movff	?___fldiv+2,efgtoa@u+2
  3477  002A60  C528  F5B4         	movff	?___fldiv+3,efgtoa@u+3
  3478                           
  3479                           ; BSR set to: 5
  3480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3481  002A64  4BA7               	infsnz	efgtoa@i& (0+255),f,b
  3482  002A66  2BA8               	incf	(efgtoa@i+1)& (0+255),f,b
  3483  002A68                     l5286:
  3484                           
  3485                           ; BSR set to: 5
  3486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3487  002A68  518F               	movf	efgtoa@m& (0+255),w,b
  3488  002A6A  5DA7               	subwf	efgtoa@i& (0+255),w,b
  3489  002A6C  51A8               	movf	(efgtoa@i+1)& (0+255),w,b
  3490  002A6E  0A80               	xorlw	128
  3491  002A70  6F7E               	movwf	??_efgtoa& (0+255),b
  3492  002A72  5190               	movf	(efgtoa@m+1)& (0+255),w,b
  3493  002A74  0A80               	xorlw	128
  3494  002A76  597E               	subwfb	??_efgtoa& (0+255),w,b
  3495  002A78  A0D8               	btfss	status,0,c
  3496  002A7A  D77C               	goto	l5278
  3497                           
  3498                           ; BSR set to: 5
  3499                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3500  002A7C  C5B1  F517         	movff	efgtoa@u,___flmul@b
  3501  002A80  C5B2  F518         	movff	efgtoa@u+1,___flmul@b+1
  3502  002A84  C5B3  F519         	movff	efgtoa@u+2,___flmul@b+2
  3503  002A88  C5B4  F51A         	movff	efgtoa@u+3,___flmul@b+3
  3504  002A8C  0E00               	movlw	0
  3505  002A8E  6E1B               	movwf	___flmul@a^(0+1280),c
  3506  002A90  0E00               	movlw	0
  3507  002A92  6E1C               	movwf	(___flmul@a+1)^(0+1280),c
  3508  002A94  0EA0               	movlw	160
  3509  002A96  6E1D               	movwf	(___flmul@a+2)^(0+1280),c
  3510  002A98  0E40               	movlw	64
  3511  002A9A  6E1E               	movwf	(___flmul@a+3)^(0+1280),c
  3512  002A9C  EC40  F01A         	call	___flmul	;wreg free
  3513  002AA0  C517  F5A3         	movff	?___flmul,efgtoa@l
  3514  002AA4  C518  F5A4         	movff	?___flmul+1,efgtoa@l+1
  3515  002AA8  C519  F5A5         	movff	?___flmul+2,efgtoa@l+2
  3516  002AAC  C51A  F5A6         	movff	?___flmul+3,efgtoa@l+3
  3517                           
  3518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3519  002AB0  C59F  F530         	movff	efgtoa@h,___flge@ff1
  3520  002AB4  C5A0  F531         	movff	efgtoa@h+1,___flge@ff1+1
  3521  002AB8  C5A1  F532         	movff	efgtoa@h+2,___flge@ff1+2
  3522  002ABC  C5A2  F533         	movff	efgtoa@h+3,___flge@ff1+3
  3523  002AC0  C5A3  F534         	movff	efgtoa@l,___flge@ff2
  3524  002AC4  C5A4  F535         	movff	efgtoa@l+1,___flge@ff2+1
  3525  002AC8  C5A5  F536         	movff	efgtoa@l+2,___flge@ff2+2
  3526  002ACC  C5A6  F537         	movff	efgtoa@l+3,___flge@ff2+3
  3527  002AD0  ECFA  F021         	call	___flge	;wreg free
  3528  002AD4  A0D8               	btfss	status,0,c
  3529  002AD6  D015               	goto	u6610
  3530                           
  3531                           ; BSR set to: 5
  3532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3535                           
  3536                           ; BSR set to: 5
  3537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3538  002AD8  C59F  F517         	movff	efgtoa@h,___fleq@ff1
  3539  002ADC  C5A0  F518         	movff	efgtoa@h+1,___fleq@ff1+1
  3540  002AE0  C5A1  F519         	movff	efgtoa@h+2,___fleq@ff1+2
  3541  002AE4  C5A2  F51A         	movff	efgtoa@h+3,___fleq@ff1+3
  3542  002AE8  C5A3  F51B         	movff	efgtoa@l,___fleq@ff2
  3543  002AEC  C5A4  F51C         	movff	efgtoa@l+1,___fleq@ff2+1
  3544  002AF0  C5A5  F51D         	movff	efgtoa@l+2,___fleq@ff2+2
  3545  002AF4  C5A6  F51E         	movff	efgtoa@l+3,___fleq@ff2+3
  3546  002AF8  EC83  F024         	call	___fleq	;wreg free
  3547  002AFC  B0D8               	btfsc	status,0,c
  3548                           
  3549                           ; BSR set to: 5
  3550  002AFE  B195               	btfsc	efgtoa@d& (0+255),0,b
  3551  002B00  D008               	goto	l5300
  3552  002B02                     u6610:
  3553                           
  3554                           ; BSR set to: 5
  3555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3556  002B02  0E00               	movlw	0
  3557  002B04  6FA3               	movwf	efgtoa@l& (0+255),b
  3558  002B06  0E00               	movlw	0
  3559  002B08  6FA4               	movwf	(efgtoa@l+1)& (0+255),b
  3560  002B0A  0E00               	movlw	0
  3561  002B0C  6FA5               	movwf	(efgtoa@l+2)& (0+255),b
  3562  002B0E  0E00               	movlw	0
  3563  002B10  6FA6               	movwf	(efgtoa@l+3)& (0+255),b
  3564  002B12                     l5300:
  3565                           
  3566                           ; BSR set to: 5
  3567                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3568  002B12  C5A9  F517         	movff	efgtoa@g,___fladd@b
  3569  002B16  C5AA  F518         	movff	efgtoa@g+1,___fladd@b+1
  3570  002B1A  C5AB  F519         	movff	efgtoa@g+2,___fladd@b+2
  3571  002B1E  C5AC  F51A         	movff	efgtoa@g+3,___fladd@b+3
  3572  002B22  C5A3  F51B         	movff	efgtoa@l,___fladd@a
  3573  002B26  C5A4  F51C         	movff	efgtoa@l+1,___fladd@a+1
  3574  002B2A  C5A5  F51D         	movff	efgtoa@l+2,___fladd@a+2
  3575  002B2E  C5A6  F51E         	movff	efgtoa@l+3,___fladd@a+3
  3576  002B32  ECE8  F01B         	call	___fladd	;wreg free
  3577  002B36  C517  F59F         	movff	?___fladd,efgtoa@h
  3578  002B3A  C518  F5A0         	movff	?___fladd+1,efgtoa@h+1
  3579  002B3E  C519  F5A1         	movff	?___fladd+2,efgtoa@h+2
  3580  002B42  C51A  F5A2         	movff	?___fladd+3,efgtoa@h+3
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3583  002B46  C59F  F530         	movff	efgtoa@h,___flge@ff1
  3584  002B4A  C5A0  F531         	movff	efgtoa@h+1,___flge@ff1+1
  3585  002B4E  C5A1  F532         	movff	efgtoa@h+2,___flge@ff1+2
  3586  002B52  C5A2  F533         	movff	efgtoa@h+3,___flge@ff1+3
  3587  002B56  0E00               	movlw	0
  3588  002B58  6E1B               	movwf	___flmul@a^(0+1280),c
  3589  002B5A  0E00               	movlw	0
  3590  002B5C  6E1C               	movwf	(___flmul@a+1)^(0+1280),c
  3591  002B5E  0E20               	movlw	32
  3592  002B60  6E1D               	movwf	(___flmul@a+2)^(0+1280),c
  3593  002B62  0E41               	movlw	65
  3594  002B64  6E1E               	movwf	(___flmul@a+3)^(0+1280),c
  3595  002B66  C591  F517         	movff	efgtoa@ou,___flmul@b
  3596  002B6A  C592  F518         	movff	efgtoa@ou+1,___flmul@b+1
  3597  002B6E  C593  F519         	movff	efgtoa@ou+2,___flmul@b+2
  3598  002B72  C594  F51A         	movff	efgtoa@ou+3,___flmul@b+3
  3599  002B76  EC40  F01A         	call	___flmul	;wreg free
  3600  002B7A  C517  F534         	movff	?___flmul,___flge@ff2
  3601  002B7E  C518  F535         	movff	?___flmul+1,___flge@ff2+1
  3602  002B82  C519  F536         	movff	?___flmul+2,___flge@ff2+2
  3603  002B86  C51A  F537         	movff	?___flmul+3,___flge@ff2+3
  3604  002B8A  ECFA  F021         	call	___flge	;wreg free
  3605  002B8E  A0D8               	btfss	status,0,c
  3606  002B90  D023               	goto	l5312
  3607                           
  3608                           ; BSR set to: 5
  3609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3610  002B92  4BAD               	infsnz	efgtoa@e& (0+255),f,b
  3611  002B94  2BAE               	incf	(efgtoa@e+1)& (0+255),f,b
  3612                           
  3613                           ; BSR set to: 5
  3614                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3615  002B96  C591  F517         	movff	efgtoa@ou,___flmul@b
  3616  002B9A  C592  F518         	movff	efgtoa@ou+1,___flmul@b+1
  3617  002B9E  C593  F519         	movff	efgtoa@ou+2,___flmul@b+2
  3618  002BA2  C594  F51A         	movff	efgtoa@ou+3,___flmul@b+3
  3619  002BA6  0E00               	movlw	0
  3620  002BA8  6E1B               	movwf	___flmul@a^(0+1280),c
  3621  002BAA  0E00               	movlw	0
  3622  002BAC  6E1C               	movwf	(___flmul@a+1)^(0+1280),c
  3623  002BAE  0E20               	movlw	32
  3624  002BB0  6E1D               	movwf	(___flmul@a+2)^(0+1280),c
  3625  002BB2  0E41               	movlw	65
  3626  002BB4  6E1E               	movwf	(___flmul@a+3)^(0+1280),c
  3627  002BB6  EC40  F01A         	call	___flmul	;wreg free
  3628  002BBA  C517  F591         	movff	?___flmul,efgtoa@ou
  3629  002BBE  C518  F592         	movff	?___flmul+1,efgtoa@ou+1
  3630  002BC2  C519  F593         	movff	?___flmul+2,efgtoa@ou+2
  3631  002BC6  C51A  F594         	movff	?___flmul+3,efgtoa@ou+3
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3634  002BCA  0E66               	movlw	102
  3635  002BCC  0105               	movlb	5	; () banked
  3636  002BCE  199D               	xorwf	efgtoa@nmode& (0+255),w,b
  3637  002BD0  A4D8               	btfss	status,2,c
  3638  002BD2  D002               	goto	l5312
  3639                           
  3640                           ; BSR set to: 5
  3641                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3642  002BD4  4B8F               	infsnz	efgtoa@m& (0+255),f,b
  3643  002BD6  2B90               	incf	(efgtoa@m+1)& (0+255),f,b
  3644  002BD8                     l5312:
  3645                           
  3646                           ; BSR set to: 5
  3647                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3648  002BD8  C591  F5B1         	movff	efgtoa@ou,efgtoa@u
  3649  002BDC  C592  F5B2         	movff	efgtoa@ou+1,efgtoa@u+1
  3650  002BE0  C593  F5B3         	movff	efgtoa@ou+2,efgtoa@u+2
  3651  002BE4  C594  F5B4         	movff	efgtoa@ou+3,efgtoa@u+3
  3652                           
  3653                           ; BSR set to: 5
  3654                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3655  002BE8  0E65               	movlw	101
  3656  002BEA  199D               	xorwf	efgtoa@nmode& (0+255),w,b
  3657  002BEC  B4D8               	btfsc	status,2,c
  3658  002BEE  D005               	goto	l5318
  3659                           
  3660                           ; BSR set to: 5
  3661  002BF0  C5AD  F58D         	movff	efgtoa@e,efgtoa@ne
  3662  002BF4  C5AE  F58E         	movff	efgtoa@e+1,efgtoa@ne+1
  3663  002BF8  D004               	goto	l1057
  3664  002BFA                     l5318:
  3665                           
  3666                           ; BSR set to: 5
  3667  002BFA  0E00               	movlw	0
  3668  002BFC  6F8E               	movwf	(efgtoa@ne+1)& (0+255),b
  3669  002BFE  0E00               	movlw	0
  3670  002C00  6F8D               	movwf	efgtoa@ne& (0+255),b
  3671  002C02                     l1057:
  3672                           
  3673                           ; BSR set to: 5
  3674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3675  002C02  0E00               	movlw	0
  3676  002C04  6F8C               	movwf	(efgtoa@pp+1)& (0+255),b
  3677  002C06  0E00               	movlw	0
  3678  002C08  6F8B               	movwf	efgtoa@pp& (0+255),b
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3681  002C0A  0E00               	movlw	0
  3682  002C0C  6F8A               	movwf	(efgtoa@t+1)& (0+255),b
  3683  002C0E  0E00               	movlw	0
  3684  002C10  6F89               	movwf	efgtoa@t& (0+255),b
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3687  002C12  0E00               	movlw	0
  3688  002C14  6FA8               	movwf	(efgtoa@i+1)& (0+255),b
  3689  002C16  0E00               	movlw	0
  3690  002C18  6FA7               	movwf	efgtoa@i& (0+255),b
  3691                           
  3692                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3693  002C1A  D0C4               	goto	l5368
  3694  002C1C                     l5320:
  3695                           
  3696                           ; BSR set to: 5
  3697                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3698  002C1C  C59F  F525         	movff	efgtoa@h,___fldiv@b
  3699  002C20  C5A0  F526         	movff	efgtoa@h+1,___fldiv@b+1
  3700  002C24  C5A1  F527         	movff	efgtoa@h+2,___fldiv@b+2
  3701  002C28  C5A2  F528         	movff	efgtoa@h+3,___fldiv@b+3
  3702  002C2C  C5B1  F529         	movff	efgtoa@u,___fldiv@a
  3703  002C30  C5B2  F52A         	movff	efgtoa@u+1,___fldiv@a+1
  3704  002C34  C5B3  F52B         	movff	efgtoa@u+2,___fldiv@a+2
  3705  002C38  C5B4  F52C         	movff	efgtoa@u+3,___fldiv@a+3
  3706  002C3C  EC6E  F01D         	call	___fldiv	;wreg free
  3707  002C40  C525  F531         	movff	?___fldiv,floorf@x
  3708  002C44  C526  F532         	movff	?___fldiv+1,floorf@x+1
  3709  002C48  C527  F533         	movff	?___fldiv+2,floorf@x+2
  3710  002C4C  C528  F534         	movff	?___fldiv+3,floorf@x+3
  3711  002C50  ECEC  F01F         	call	_floorf	;wreg free
  3712  002C54  C531  F5A3         	movff	?_floorf,efgtoa@l
  3713  002C58  C532  F5A4         	movff	?_floorf+1,efgtoa@l+1
  3714  002C5C  C533  F5A5         	movff	?_floorf+2,efgtoa@l+2
  3715  002C60  C534  F5A6         	movff	?_floorf+3,efgtoa@l+3
  3716                           
  3717                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3718  002C64  C5A3  F517         	movff	efgtoa@l,___fltol@f1
  3719  002C68  C5A4  F518         	movff	efgtoa@l+1,___fltol@f1+1
  3720  002C6C  C5A5  F519         	movff	efgtoa@l+2,___fltol@f1+2
  3721  002C70  C5A6  F51A         	movff	efgtoa@l+3,___fltol@f1+3
  3722  002C74  EC8C  F023         	call	___fltol	;wreg free
  3723  002C78  C517  F595         	movff	?___fltol,efgtoa@d
  3724  002C7C  C518  F596         	movff	?___fltol+1,efgtoa@d+1
  3725                           
  3726                           ; BSR set to: 5
  3727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3728  002C80  B843               	btfsc	_flags^(0+1280),4,c
  3729  002C82  D00C               	goto	l5332
  3730                           
  3731                           ; BSR set to: 5
  3732  002C84  5195               	movf	efgtoa@d& (0+255),w,b
  3733  002C86  1196               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3734  002C88  A4D8               	btfss	status,2,c
  3735  002C8A  D008               	goto	l5332
  3736                           
  3737                           ; BSR set to: 5
  3738  002C8C  0E67               	movlw	103
  3739  002C8E  199E               	xorwf	efgtoa@mode& (0+255),w,b
  3740  002C90  B4D8               	btfsc	status,2,c
  3741                           
  3742                           ; BSR set to: 5
  3743  002C92  AF8E               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3744  002C94  D003               	goto	l5332
  3745                           
  3746                           ; BSR set to: 5
  3747                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3748  002C96  4B89               	infsnz	efgtoa@t& (0+255),f,b
  3749  002C98  2B8A               	incf	(efgtoa@t+1)& (0+255),f,b
  3750                           
  3751                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3752  002C9A  D039               	goto	l5360
  3753  002C9C                     l5332:
  3754                           
  3755                           ; BSR set to: 5
  3756                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3757  002C9C  518B               	movf	efgtoa@pp& (0+255),w,b
  3758  002C9E  118C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3759  002CA0  B4D8               	btfsc	status,2,c
  3760                           
  3761                           ; BSR set to: 5
  3762  002CA2  AF8E               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3763  002CA4  D022               	goto	l5352
  3764                           
  3765                           ; BSR set to: 5
  3766                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3767  002CA6  0E00               	movlw	low _dbuf
  3768  002CA8  25AF               	addwf	efgtoa@n& (0+255),w,b
  3769  002CAA  6ED9               	movwf	fsr2l,c
  3770  002CAC  0E06               	movlw	high _dbuf
  3771  002CAE  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3772  002CB0  6EDA               	movwf	fsr2h,c
  3773  002CB2  0E2E               	movlw	46
  3774  002CB4  6EDF               	movwf	indf2,c
  3775                           
  3776                           ; BSR set to: 5
  3777  002CB6  4BAF               	infsnz	efgtoa@n& (0+255),f,b
  3778  002CB8  2BB0               	incf	(efgtoa@n+1)& (0+255),f,b
  3779                           
  3780                           ; BSR set to: 5
  3781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3782  002CBA  079B               	decf	efgtoa@w& (0+255),f,b
  3783  002CBC  A0D8               	btfss	status,0,c
  3784  002CBE  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  3785                           
  3786                           ; BSR set to: 5
  3787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3788  002CC0  0E00               	movlw	0
  3789  002CC2  6F8C               	movwf	(efgtoa@pp+1)& (0+255),b
  3790  002CC4  0E01               	movlw	1
  3791  002CC6  6F8B               	movwf	efgtoa@pp& (0+255),b
  3792  002CC8  D010               	goto	l5352
  3793  002CCA                     l5344:
  3794                           
  3795                           ; BSR set to: 5
  3796                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3797  002CCA  0E00               	movlw	low _dbuf
  3798  002CCC  25AF               	addwf	efgtoa@n& (0+255),w,b
  3799  002CCE  6ED9               	movwf	fsr2l,c
  3800  002CD0  0E06               	movlw	high _dbuf
  3801  002CD2  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3802  002CD4  6EDA               	movwf	fsr2h,c
  3803  002CD6  0E30               	movlw	48
  3804  002CD8  6EDF               	movwf	indf2,c
  3805                           
  3806                           ; BSR set to: 5
  3807  002CDA  4BAF               	infsnz	efgtoa@n& (0+255),f,b
  3808  002CDC  2BB0               	incf	(efgtoa@n+1)& (0+255),f,b
  3809                           
  3810                           ; BSR set to: 5
  3811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3812  002CDE  079B               	decf	efgtoa@w& (0+255),f,b
  3813  002CE0  A0D8               	btfss	status,0,c
  3814  002CE2  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  3815                           
  3816                           ; BSR set to: 5
  3817                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3818  002CE4  0789               	decf	efgtoa@t& (0+255),f,b
  3819  002CE6  A0D8               	btfss	status,0,c
  3820  002CE8  078A               	decf	(efgtoa@t+1)& (0+255),f,b
  3821  002CEA                     l5352:
  3822                           
  3823                           ; BSR set to: 5
  3824                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3825  002CEA  5189               	movf	efgtoa@t& (0+255),w,b
  3826  002CEC  118A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3827  002CEE  A4D8               	btfss	status,2,c
  3828  002CF0  D7EC               	goto	l5344
  3829                           
  3830                           ; BSR set to: 5
  3831                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3832  002CF2  0E00               	movlw	low _dbuf
  3833  002CF4  25AF               	addwf	efgtoa@n& (0+255),w,b
  3834  002CF6  6ED9               	movwf	fsr2l,c
  3835  002CF8  0E06               	movlw	high _dbuf
  3836  002CFA  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3837  002CFC  6EDA               	movwf	fsr2h,c
  3838  002CFE  5195               	movf	efgtoa@d& (0+255),w,b
  3839  002D00  0F30               	addlw	48
  3840  002D02  6EDF               	movwf	indf2,c
  3841                           
  3842                           ; BSR set to: 5
  3843  002D04  4BAF               	infsnz	efgtoa@n& (0+255),f,b
  3844  002D06  2BB0               	incf	(efgtoa@n+1)& (0+255),f,b
  3845                           
  3846                           ; BSR set to: 5
  3847                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3848  002D08  079B               	decf	efgtoa@w& (0+255),f,b
  3849  002D0A  A0D8               	btfss	status,0,c
  3850  002D0C  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  3851  002D0E                     l5360:
  3852                           
  3853                           ; BSR set to: 5
  3854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3855  002D0E  C59F  F530         	movff	efgtoa@h,___flsub@b
  3856  002D12  C5A0  F531         	movff	efgtoa@h+1,___flsub@b+1
  3857  002D16  C5A1  F532         	movff	efgtoa@h+2,___flsub@b+2
  3858  002D1A  C5A2  F533         	movff	efgtoa@h+3,___flsub@b+3
  3859  002D1E  C5B1  F51B         	movff	efgtoa@u,___flmul@a
  3860  002D22  C5B2  F51C         	movff	efgtoa@u+1,___flmul@a+1
  3861  002D26  C5B3  F51D         	movff	efgtoa@u+2,___flmul@a+2
  3862  002D2A  C5B4  F51E         	movff	efgtoa@u+3,___flmul@a+3
  3863  002D2E  C5A3  F517         	movff	efgtoa@l,___flmul@b
  3864  002D32  C5A4  F518         	movff	efgtoa@l+1,___flmul@b+1
  3865  002D36  C5A5  F519         	movff	efgtoa@l+2,___flmul@b+2
  3866  002D3A  C5A6  F51A         	movff	efgtoa@l+3,___flmul@b+3
  3867  002D3E  EC40  F01A         	call	___flmul	;wreg free
  3868  002D42  C517  F534         	movff	?___flmul,___flsub@a
  3869  002D46  C518  F535         	movff	?___flmul+1,___flsub@a+1
  3870  002D4A  C519  F536         	movff	?___flmul+2,___flsub@a+2
  3871  002D4E  C51A  F537         	movff	?___flmul+3,___flsub@a+3
  3872  002D52  ECFE  F025         	call	___flsub	;wreg free
  3873  002D56  C530  F59F         	movff	?___flsub,efgtoa@h
  3874  002D5A  C531  F5A0         	movff	?___flsub+1,efgtoa@h+1
  3875  002D5E  C532  F5A1         	movff	?___flsub+2,efgtoa@h+2
  3876  002D62  C533  F5A2         	movff	?___flsub+3,efgtoa@h+3
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3879  002D66  C5B1  F525         	movff	efgtoa@u,___fldiv@b
  3880  002D6A  C5B2  F526         	movff	efgtoa@u+1,___fldiv@b+1
  3881  002D6E  C5B3  F527         	movff	efgtoa@u+2,___fldiv@b+2
  3882  002D72  C5B4  F528         	movff	efgtoa@u+3,___fldiv@b+3
  3883  002D76  0E00               	movlw	0
  3884  002D78  6E29               	movwf	___fldiv@a^(0+1280),c
  3885  002D7A  0E00               	movlw	0
  3886  002D7C  6E2A               	movwf	(___fldiv@a+1)^(0+1280),c
  3887  002D7E  0E20               	movlw	32
  3888  002D80  6E2B               	movwf	(___fldiv@a+2)^(0+1280),c
  3889  002D82  0E41               	movlw	65
  3890  002D84  6E2C               	movwf	(___fldiv@a+3)^(0+1280),c
  3891  002D86  EC6E  F01D         	call	___fldiv	;wreg free
  3892  002D8A  C525  F5B1         	movff	?___fldiv,efgtoa@u
  3893  002D8E  C526  F5B2         	movff	?___fldiv+1,efgtoa@u+1
  3894  002D92  C527  F5B3         	movff	?___fldiv+2,efgtoa@u+2
  3895  002D96  C528  F5B4         	movff	?___fldiv+3,efgtoa@u+3
  3896                           
  3897                           ; BSR set to: 5
  3898                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3899  002D9A  078D               	decf	efgtoa@ne& (0+255),f,b
  3900  002D9C  A0D8               	btfss	status,0,c
  3901  002D9E  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
  3902                           
  3903                           ; BSR set to: 5
  3904                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3905  002DA0  4BA7               	infsnz	efgtoa@i& (0+255),f,b
  3906  002DA2  2BA8               	incf	(efgtoa@i+1)& (0+255),f,b
  3907  002DA4                     l5368:
  3908                           
  3909                           ; BSR set to: 5
  3910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3911  002DA4  518F               	movf	efgtoa@m& (0+255),w,b
  3912  002DA6  5DA7               	subwf	efgtoa@i& (0+255),w,b
  3913  002DA8  51A8               	movf	(efgtoa@i+1)& (0+255),w,b
  3914  002DAA  0A80               	xorlw	128
  3915  002DAC  6F7E               	movwf	??_efgtoa& (0+255),b
  3916  002DAE  5190               	movf	(efgtoa@m+1)& (0+255),w,b
  3917  002DB0  0A80               	xorlw	128
  3918  002DB2  597E               	subwfb	??_efgtoa& (0+255),w,b
  3919  002DB4  B0D8               	btfsc	status,0,c
  3920  002DB6  D008               	goto	u6730
  3921                           
  3922                           ; BSR set to: 5
  3923  002DB8  BFB0               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3924  002DBA  D730               	goto	l5320
  3925  002DBC  51B0               	movf	(efgtoa@n+1)& (0+255),w,b
  3926  002DBE  E104               	bnz	u6730
  3927  002DC0  0E4B               	movlw	75
  3928  002DC2  5DAF               	subwf	efgtoa@n& (0+255),w,b
  3929  002DC4  A0D8               	btfss	status,0,c
  3930  002DC6  D72A               	goto	l5320
  3931  002DC8                     u6730:
  3932                           
  3933                           ; BSR set to: 5
  3934                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3935  002DC8  518B               	movf	efgtoa@pp& (0+255),w,b
  3936  002DCA  118C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3937  002DCC  B4D8               	btfsc	status,2,c
  3938                           
  3939                           ; BSR set to: 5
  3940  002DCE  A843               	btfss	_flags^(0+1280),4,c
  3941  002DD0  D00A               	goto	l5380
  3942                           
  3943                           ; BSR set to: 5
  3944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3945  002DD2  0E00               	movlw	low _dbuf
  3946  002DD4  25AF               	addwf	efgtoa@n& (0+255),w,b
  3947  002DD6  6ED9               	movwf	fsr2l,c
  3948  002DD8  0E06               	movlw	high _dbuf
  3949  002DDA  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3950  002DDC  6EDA               	movwf	fsr2h,c
  3951  002DDE  0E2E               	movlw	46
  3952  002DE0  6EDF               	movwf	indf2,c
  3953                           
  3954                           ; BSR set to: 5
  3955  002DE2  4BAF               	infsnz	efgtoa@n& (0+255),f,b
  3956  002DE4  2BB0               	incf	(efgtoa@n+1)& (0+255),f,b
  3957  002DE6                     l5380:
  3958                           
  3959                           ; BSR set to: 5
  3960                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3961  002DE6  0E00               	movlw	low _dbuf
  3962  002DE8  25AF               	addwf	efgtoa@n& (0+255),w,b
  3963  002DEA  6ED9               	movwf	fsr2l,c
  3964  002DEC  0E06               	movlw	high _dbuf
  3965  002DEE  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3966  002DF0  6EDA               	movwf	fsr2h,c
  3967  002DF2  0E00               	movlw	0
  3968  002DF4  6EDF               	movwf	indf2,c
  3969                           
  3970                           ; BSR set to: 5
  3971                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3972  002DF6  0E65               	movlw	101
  3973  002DF8  199D               	xorwf	efgtoa@nmode& (0+255),w,b
  3974  002DFA  A4D8               	btfss	status,2,c
  3975  002DFC  D0A5               	goto	l5440
  3976                           
  3977                           ; BSR set to: 5
  3978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3979  002DFE  0E00               	movlw	0
  3980  002E00  6FA8               	movwf	(efgtoa@i+1)& (0+255),b
  3981  002E02  0E4F               	movlw	79
  3982  002E04  6FA7               	movwf	efgtoa@i& (0+255),b
  3983                           
  3984                           ; BSR set to: 5
  3985                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3986  002E06  0E00               	movlw	low _dbuf
  3987  002E08  25A7               	addwf	efgtoa@i& (0+255),w,b
  3988  002E0A  6ED9               	movwf	fsr2l,c
  3989  002E0C  0E06               	movlw	high _dbuf
  3990  002E0E  21A8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3991  002E10  6EDA               	movwf	fsr2h,c
  3992  002E12  0E00               	movlw	0
  3993  002E14  6EDF               	movwf	indf2,c
  3994                           
  3995                           ; BSR set to: 5
  3996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3997  002E16  0E00               	movlw	0
  3998  002E18  6F98               	movwf	(efgtoa@sign+1)& (0+255),b
  3999  002E1A  0E00               	movlw	0
  4000  002E1C  6F97               	movwf	efgtoa@sign& (0+255),b
  4001                           
  4002                           ; BSR set to: 5
  4003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4004  002E1E  AFAE               	btfss	(efgtoa@e+1)& (0+255),7,b
  4005  002E20  D008               	goto	l5396
  4006                           
  4007                           ; BSR set to: 5
  4008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4009  002E22  0E00               	movlw	0
  4010  002E24  6F98               	movwf	(efgtoa@sign+1)& (0+255),b
  4011  002E26  0E01               	movlw	1
  4012  002E28  6F97               	movwf	efgtoa@sign& (0+255),b
  4013                           
  4014                           ; BSR set to: 5
  4015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4016  002E2A  6DAD               	negf	efgtoa@e& (0+255),b
  4017  002E2C  1FAE               	comf	(efgtoa@e+1)& (0+255),f,b
  4018  002E2E  B0D8               	btfsc	status,0,c
  4019  002E30  2BAE               	incf	(efgtoa@e+1)& (0+255),f,b
  4020  002E32                     l5396:
  4021                           
  4022                           ; BSR set to: 5
  4023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4024  002E32  0E00               	movlw	0
  4025  002E34  6F9A               	movwf	(efgtoa@p+1)& (0+255),b
  4026  002E36  0E02               	movlw	2
  4027  002E38  6F99               	movwf	efgtoa@p& (0+255),b
  4028                           
  4029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4030  002E3A  D02A               	goto	l5408
  4031  002E3C                     l5398:
  4032                           
  4033                           ; BSR set to: 5
  4034                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4035  002E3C  07A7               	decf	efgtoa@i& (0+255),f,b
  4036  002E3E  A0D8               	btfss	status,0,c
  4037  002E40  07A8               	decf	(efgtoa@i+1)& (0+255),f,b
  4038                           
  4039                           ; BSR set to: 5
  4040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4041  002E42  0E00               	movlw	low _dbuf
  4042  002E44  25A7               	addwf	efgtoa@i& (0+255),w,b
  4043  002E46  6ED9               	movwf	fsr2l,c
  4044  002E48  0E06               	movlw	high _dbuf
  4045  002E4A  21A8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4046  002E4C  6EDA               	movwf	fsr2h,c
  4047  002E4E  C5AD  F517         	movff	efgtoa@e,___awmod@dividend
  4048  002E52  C5AE  F518         	movff	efgtoa@e+1,___awmod@dividend+1
  4049  002E56  0E00               	movlw	0
  4050  002E58  6E1A               	movwf	(___awmod@divisor+1)^(0+1280),c
  4051  002E5A  0E0A               	movlw	10
  4052  002E5C  6E19               	movwf	___awmod@divisor^(0+1280),c
  4053  002E5E  EC0A  F025         	call	___awmod	;wreg free
  4054  002E62  5017               	movf	?___awmod^(0+1280),w,c
  4055  002E64  0F30               	addlw	48
  4056  002E66  6EDF               	movwf	indf2,c
  4057                           
  4058                           ; BSR set to: 5
  4059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4060  002E68  C5AD  F517         	movff	efgtoa@e,___awdiv@dividend
  4061  002E6C  C5AE  F518         	movff	efgtoa@e+1,___awdiv@dividend+1
  4062  002E70  0E00               	movlw	0
  4063  002E72  6E1A               	movwf	(___awdiv@divisor+1)^(0+1280),c
  4064  002E74  0E0A               	movlw	10
  4065  002E76  6E19               	movwf	___awdiv@divisor^(0+1280),c
  4066  002E78  ECC8  F024         	call	___awdiv	;wreg free
  4067  002E7C  C517  F5AD         	movff	?___awdiv,efgtoa@e
  4068  002E80  C518  F5AE         	movff	?___awdiv+1,efgtoa@e+1
  4069                           
  4070                           ; BSR set to: 5
  4071                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4072  002E84  0799               	decf	efgtoa@p& (0+255),f,b
  4073  002E86  A0D8               	btfss	status,0,c
  4074  002E88  079A               	decf	(efgtoa@p+1)& (0+255),f,b
  4075                           
  4076                           ; BSR set to: 5
  4077                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4078  002E8A  079B               	decf	efgtoa@w& (0+255),f,b
  4079  002E8C  A0D8               	btfss	status,0,c
  4080  002E8E  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  4081  002E90                     l5408:
  4082                           
  4083                           ; BSR set to: 5
  4084                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4085  002E90  51AD               	movf	efgtoa@e& (0+255),w,b
  4086  002E92  11AE               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4087  002E94  A4D8               	btfss	status,2,c
  4088  002E96  D7D2               	goto	l5398
  4089                           
  4090                           ; BSR set to: 5
  4091  002E98  BF9A               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4092  002E9A  D005               	goto	u6790
  4093  002E9C  519A               	movf	(efgtoa@p+1)& (0+255),w,b
  4094  002E9E  E1CE               	bnz	l5398
  4095  002EA0  0599               	decf	efgtoa@p& (0+255),w,b
  4096  002EA2  B0D8               	btfsc	status,0,c
  4097  002EA4  D7CB               	goto	l5398
  4098  002EA6                     u6790:
  4099                           
  4100                           ; BSR set to: 5
  4101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  4102  002EA6  07A7               	decf	efgtoa@i& (0+255),f,b
  4103  002EA8  A0D8               	btfss	status,0,c
  4104  002EAA  07A8               	decf	(efgtoa@i+1)& (0+255),f,b
  4105                           
  4106                           ; BSR set to: 5
  4107                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4108  002EAC  5197               	movf	efgtoa@sign& (0+255),w,b
  4109  002EAE  1198               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4110  002EB0  A4D8               	btfss	status,2,c
  4111  002EB2  D004               	goto	l5418
  4112                           
  4113                           ; BSR set to: 5
  4114  002EB4  0E00               	movlw	0
  4115  002EB6  6F86               	movwf	(_efgtoa$884+1)& (0+255),b
  4116  002EB8  0E2B               	movlw	43
  4117  002EBA  D003               	goto	L3
  4118  002EBC                     l5418:
  4119                           
  4120                           ; BSR set to: 5
  4121  002EBC  0E00               	movlw	0
  4122  002EBE  6F86               	movwf	(_efgtoa$884+1)& (0+255),b
  4123  002EC0  0E2D               	movlw	45
  4124  002EC2                     L3:
  4125  002EC2  6F85               	movwf	_efgtoa$884& (0+255),b
  4126                           
  4127                           ; BSR set to: 5
  4128  002EC4  0E00               	movlw	low _dbuf
  4129  002EC6  25A7               	addwf	efgtoa@i& (0+255),w,b
  4130  002EC8  6ED9               	movwf	fsr2l,c
  4131  002ECA  0E06               	movlw	high _dbuf
  4132  002ECC  21A8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4133  002ECE  6EDA               	movwf	fsr2h,c
  4134  002ED0  0061  F614  F4DF   	movff	_efgtoa$884,indf2
  4135                           
  4136                           ; BSR set to: 5
  4137                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4138  002ED6  079B               	decf	efgtoa@w& (0+255),f,b
  4139  002ED8  A0D8               	btfss	status,0,c
  4140  002EDA  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  4141                           
  4142                           ; BSR set to: 5
  4143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4144  002EDC  07A7               	decf	efgtoa@i& (0+255),f,b
  4145  002EDE  A0D8               	btfss	status,0,c
  4146  002EE0  07A8               	decf	(efgtoa@i+1)& (0+255),f,b
  4147                           
  4148                           ; BSR set to: 5
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 && isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4151  002EE2  0EBF               	movlw	191
  4152  002EE4  6F7E               	movwf	??_efgtoa& (0+255),b
  4153  002EE6  0EFF               	movlw	255
  4154  002EE8  6F7F               	movwf	(??_efgtoa+1)& (0+255),b
  4155  002EEA  517D               	movf	efgtoa@c& (0+255),w,b
  4156  002EEC  6F80               	movwf	(??_efgtoa+2)& (0+255),b
  4157  002EEE  6B81               	clrf	(??_efgtoa+3)& (0+255),b
  4158  002EF0  517E               	movf	??_efgtoa& (0+255),w,b
  4159  002EF2  2780               	addwf	(??_efgtoa+2)& (0+255),f,b
  4160  002EF4  517F               	movf	(??_efgtoa+1)& (0+255),w,b
  4161  002EF6  2381               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4162  002EF8  5181               	movf	(??_efgtoa+3)& (0+255),w,b
  4163  002EFA  E104               	bnz	u6810
  4164  002EFC  0E1A               	movlw	26
  4165  002EFE  5D80               	subwf	(??_efgtoa+2)& (0+255),w,b
  4166  002F00  A0D8               	btfss	status,0,c
  4167  002F02  D004               	goto	l5432
  4168  002F04                     u6810:
  4169                           
  4170                           ; BSR set to: 5
  4171  002F04  0E00               	movlw	0
  4172  002F06  6F88               	movwf	(_efgtoa$885+1)& (0+255),b
  4173  002F08  0E65               	movlw	101
  4174  002F0A  D003               	goto	L4
  4175  002F0C                     l5432:
  4176                           
  4177                           ; BSR set to: 5
  4178  002F0C  0E00               	movlw	0
  4179  002F0E  6F88               	movwf	(_efgtoa$885+1)& (0+255),b
  4180  002F10  0E45               	movlw	69
  4181  002F12                     L4:
  4182  002F12  6F87               	movwf	_efgtoa$885& (0+255),b
  4183                           
  4184                           ; BSR set to: 5
  4185  002F14  0E00               	movlw	low _dbuf
  4186  002F16  25A7               	addwf	efgtoa@i& (0+255),w,b
  4187  002F18  6ED9               	movwf	fsr2l,c
  4188  002F1A  0E06               	movlw	high _dbuf
  4189  002F1C  21A8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4190  002F1E  6EDA               	movwf	fsr2h,c
  4191  002F20  0061  F61C  F4DF   	movff	_efgtoa$885,indf2
  4192                           
  4193                           ; BSR set to: 5
  4194                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4195  002F26  079B               	decf	efgtoa@w& (0+255),f,b
  4196  002F28  A0D8               	btfss	status,0,c
  4197  002F2A  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  4198                           
  4199                           ; BSR set to: 5
  4200                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4201  002F2C  0E00               	movlw	low _dbuf
  4202  002F2E  25AF               	addwf	efgtoa@n& (0+255),w,b
  4203  002F30  6E17               	movwf	strcpy@dest^(0+1280),c
  4204  002F32  0E06               	movlw	high _dbuf
  4205  002F34  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4206  002F36  6E18               	movwf	(strcpy@dest+1)^(0+1280),c
  4207  002F38  0E00               	movlw	low _dbuf
  4208  002F3A  25A7               	addwf	efgtoa@i& (0+255),w,b
  4209  002F3C  6E19               	movwf	strcpy@src^(0+1280),c
  4210  002F3E  0E06               	movlw	high _dbuf
  4211  002F40  21A8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4212  002F42  6E1A               	movwf	(strcpy@src+1)^(0+1280),c
  4213  002F44  EC78  F025         	call	_strcpy	;wreg free
  4214  002F48                     l5440:
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  4217  002F48  C577  F528         	movff	efgtoa@fp,pad@fp
  4218  002F4C  C578  F529         	movff	efgtoa@fp+1,pad@fp+1
  4219  002F50  0E00               	movlw	low _dbuf
  4220  002F52  6E2A               	movwf	pad@buf^(0+1280),c
  4221  002F54  0E06               	movlw	high _dbuf
  4222  002F56  6E2B               	movwf	(pad@buf+1)^(0+1280),c
  4223  002F58  C59B  F52C         	movff	efgtoa@w,pad@p
  4224  002F5C  C59C  F52D         	movff	efgtoa@w+1,pad@p+1
  4225  002F60  EC38  F024         	call	_pad	;wreg free
  4226  002F64  C528  F577         	movff	?_pad,?_efgtoa
  4227  002F68  C529  F578         	movff	?_pad+1,?_efgtoa+1
  4228  002F6C  0012               	return		;funcret
  4229  002F6E                     __end_of_efgtoa:
  4230                           	callstack 0
  4231                           
  4232 ;; *************** function _tolower *****************
  4233 ;; Defined at:
  4234 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  c               2   28[COMRAM] int 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2   28[COMRAM] int 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 3F/5
  4245 ;;		On exit  : 3F/5
  4246 ;;		Unchanged: 3E/0
  4247 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4250 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4252 ;;Total ram usage:        6 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 3
  4255 ;; This function calls:
  4256 ;;		_isupper
  4257 ;; This function is called by:
  4258 ;;		_efgtoa
  4259 ;;		_vfpfcnvrt
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text6
  4264  004C80                     __ptext6:
  4265                           	callstack 0
  4266  004C80                     _tolower:
  4267                           	callstack 120
  4268                           
  4269                           ; BSR set to: 5
  4270                           
  4271                           ; BSR set to: 5
  4272                           
  4273                           ;incstack = 0
  4274  004C80  0EBF               	movlw	191
  4275  004C82  6E1F               	movwf	??_tolower^(0+1280),c
  4276  004C84  0EFF               	movlw	255
  4277  004C86  6E20               	movwf	(??_tolower+1)^(0+1280),c
  4278  004C88  C51D  F521         	movff	tolower@c,??_tolower+2
  4279  004C8C  C51E  F522         	movff	tolower@c+1,??_tolower+3
  4280  004C90  501F               	movf	??_tolower^(0+1280),w,c
  4281  004C92  2621               	addwf	(??_tolower+2)^(0+1280),f,c
  4282  004C94  5020               	movf	(??_tolower+1)^(0+1280),w,c
  4283  004C96  2222               	addwfc	(??_tolower+3)^(0+1280),f,c
  4284  004C98  5022               	movf	(??_tolower+3)^(0+1280),w,c
  4285  004C9A  E10A               	bnz	l1234
  4286  004C9C  0E1A               	movlw	26
  4287  004C9E  5C21               	subwf	(??_tolower+2)^(0+1280),w,c
  4288  004CA0  B0D8               	btfsc	status,0,c
  4289  004CA2  D006               	goto	l1234
  4290                           
  4291                           ; BSR set to: 5
  4292  004CA4  0E20               	movlw	32
  4293  004CA6  101D               	iorwf	tolower@c^(0+1280),w,c
  4294  004CA8  6E1D               	movwf	?_tolower^(0+1280),c
  4295  004CAA  501E               	movf	(tolower@c+1)^(0+1280),w,c
  4296  004CAC  6E1E               	movwf	(?_tolower+1)^(0+1280),c
  4297  004CAE  0012               	return	
  4298  004CB0                     l1234:
  4299                           
  4300                           ; BSR set to: 5
  4301  004CB0  C51D  F51D         	movff	tolower@c,?_tolower
  4302  004CB4  C51E  F51E         	movff	tolower@c+1,?_tolower+1
  4303                           
  4304                           ; BSR set to: 5
  4305  004CB8  0012               	return		;funcret
  4306  004CBA                     __end_of_tolower:
  4307                           	callstack 0
  4308                           
  4309 ;; *************** function _isupper *****************
  4310 ;; Defined at:
  4311 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  c               2   22[COMRAM] int 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  2   22[COMRAM] int 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4328 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4329 ;;Total ram usage:        6 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; Hardware stack levels required when called: 2
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_efgtoa
  4336 ;;		_vfpfcnvrt
  4337 ;;		_tolower
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text7
  4342  004D66                     __ptext7:
  4343                           	callstack 0
  4344  004D66                     _isupper:
  4345                           	callstack 120
  4346                           
  4347                           ; BSR set to: 5
  4348                           ;incstack = 0
  4349  004D66  0EBF               	movlw	191
  4350  004D68  6E19               	movwf	??_isupper^(0+1280),c
  4351  004D6A  0EFF               	movlw	255
  4352  004D6C  6E1A               	movwf	(??_isupper+1)^(0+1280),c
  4353  004D6E  C517  F51B         	movff	isupper@c,??_isupper+2
  4354  004D72  C518  F51C         	movff	isupper@c+1,??_isupper+3
  4355  004D76  5019               	movf	??_isupper^(0+1280),w,c
  4356  004D78  261B               	addwf	(??_isupper+2)^(0+1280),f,c
  4357  004D7A  501A               	movf	(??_isupper+1)^(0+1280),w,c
  4358  004D7C  221C               	addwfc	(??_isupper+3)^(0+1280),f,c
  4359  004D7E  501C               	movf	(??_isupper+3)^(0+1280),w,c
  4360  004D80  E106               	bnz	u5350
  4361  004D82  0E1A               	movlw	26
  4362  004D84  5C1B               	subwf	(??_isupper+2)^(0+1280),w,c
  4363  004D86  B0D8               	btfsc	status,0,c
  4364  004D88  D002               	goto	u5350
  4365  004D8A  0E01               	movlw	1
  4366  004D8C  D001               	goto	u5360
  4367  004D8E                     u5350:
  4368  004D8E  0E00               	movlw	0
  4369  004D90                     u5360:
  4370  004D90  6E17               	movwf	?_isupper^(0+1280),c
  4371  004D92  6A18               	clrf	(?_isupper+1)^(0+1280),c
  4372  004D94  0012               	return		;funcret
  4373  004D96                     __end_of_isupper:
  4374                           	callstack 0
  4375                           
  4376 ;; *************** function _strcpy *****************
  4377 ;; Defined at:
  4378 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  dest            2   22[COMRAM] PTR unsigned char 
  4381 ;;		 -> dbuf(80), 
  4382 ;;  src             2   24[COMRAM] PTR const unsigned char 
  4383 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4384 ;;		 -> dbuf(80), 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  d               2   30[COMRAM] PTR unsigned char 
  4387 ;;		 -> dbuf(80), 
  4388 ;;  s               2   28[COMRAM] PTR const unsigned char 
  4389 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4390 ;;		 -> dbuf(80), 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  2   22[COMRAM] PTR unsigned char 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4395 ;; Tracked objects:
  4396 ;;		On entry : 3F/5
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4401 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4403 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4404 ;;Total ram usage:       10 bytes
  4405 ;; Hardware stack levels used: 1
  4406 ;; Hardware stack levels required when called: 2
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_efgtoa
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text8
  4415  004AF0                     __ptext8:
  4416                           	callstack 0
  4417  004AF0                     _strcpy:
  4418                           	callstack 120
  4419                           
  4420                           ; BSR set to: 5
  4421                           
  4422                           ;incstack = 0
  4423  004AF0  C519  F51D         	movff	strcpy@src,strcpy@s
  4424  004AF4  C51A  F51E         	movff	strcpy@src+1,strcpy@s+1
  4425  004AF8  C517  F51F         	movff	strcpy@dest,strcpy@d
  4426  004AFC  C518  F520         	movff	strcpy@dest+1,strcpy@d+1
  4427  004B00                     l5082:
  4428  004B00  501D               	movf	strcpy@s^(0+1280),w,c
  4429  004B02  6E1B               	movwf	??_strcpy^(0+1280),c
  4430  004B04  501E               	movf	(strcpy@s+1)^(0+1280),w,c
  4431  004B06  6E1C               	movwf	(??_strcpy+1)^(0+1280),c
  4432  004B08  4A1D               	infsnz	strcpy@s^(0+1280),f,c
  4433  004B0A  2A1E               	incf	(strcpy@s+1)^(0+1280),f,c
  4434  004B0C  0061  F46C  F4F6   	movff	??_strcpy,tblptrl
  4435  004B12  0061  F470  F4F7   	movff	??_strcpy+1,tblptrh
  4436  004B18  0E00               	movlw	low (__smallconst shr (0+16))
  4437  004B1A  6EF8               	movwf	tblptru,c
  4438  004B1C  0061  F47C  F4D9   	movff	strcpy@d,fsr2l
  4439  004B22  0061  F480  F4DA   	movff	strcpy@d+1,fsr2h
  4440  004B28  4A1F               	infsnz	strcpy@d^(0+1280),f,c
  4441  004B2A  2A20               	incf	(strcpy@d+1)^(0+1280),f,c
  4442  004B2C  0E24               	movlw	(high __ramtop+-1)
  4443  004B2E  64F7               	cpfsgt	tblptrh,c
  4444  004B30  D003               	bra	u6177
  4445  004B32  0008               	tblrd		*
  4446  004B34  50F5               	movf	tablat,w,c
  4447  004B36  D005               	bra	u6170
  4448  004B38                     u6177:
  4449  004B38  C4F6 F4E1          	movff	tblptrl,fsr1l
  4450  004B3C  C4F7 F4E2          	movff	tblptrh,fsr1h
  4451  004B40  50E7               	movf	indf1,w,c
  4452  004B42                     u6170:
  4453  004B42  6EDF               	movwf	indf2,c
  4454  004B44  50DF               	movf	indf2,w,c
  4455  004B46  B4D8               	btfsc	status,2,c
  4456  004B48  0012               	return	
  4457  004B4A  D7DA               	goto	l5082
  4458  004B4C                     __end_of_strcpy:
  4459                           	callstack 0
  4460                           
  4461 ;; *************** function _pad *****************
  4462 ;; Defined at:
  4463 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  4466 ;;		 -> NULL(0), 
  4467 ;;  buf             2   41[COMRAM] PTR unsigned char 
  4468 ;;		 -> dbuf(80), 
  4469 ;;  p               2   43[COMRAM] int 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  w               2   48[COMRAM] int 
  4472 ;;  i               2   46[COMRAM] int 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  2   39[COMRAM] int 
  4475 ;; Registers used:
  4476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/5
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4482 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4483 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4485 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4486 ;;Total ram usage:       11 bytes
  4487 ;; Hardware stack levels used: 1
  4488 ;; Hardware stack levels required when called: 5
  4489 ;; This function calls:
  4490 ;;		_fputc
  4491 ;;		_fputs
  4492 ;;		_strlen
  4493 ;; This function is called by:
  4494 ;;		_efgtoa
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text9
  4499  004870                     __ptext9:
  4500                           	callstack 0
  4501  004870                     _pad:
  4502                           	callstack 117
  4503                           
  4504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4505                           
  4506                           ;incstack = 0
  4507  004870  A043               	btfss	_flags^(0+1280),0,c
  4508  004872  D00A               	goto	l5040
  4509                           
  4510                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4511  004874  C52A  F521         	movff	pad@buf,fputs@s
  4512  004878  C52B  F522         	movff	pad@buf+1,fputs@s+1
  4513  00487C  C528  F523         	movff	pad@fp,fputs@fp
  4514  004880  C529  F524         	movff	pad@fp+1,fputs@fp+1
  4515  004884  EC97  F026         	call	_fputs	;wreg free
  4516  004888                     l5040:
  4517                           
  4518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4519  004888  BE2D               	btfsc	(pad@p+1)^(0+1280),7,c
  4520  00488A  D005               	goto	l5044
  4521  00488C  C52C  F531         	movff	pad@p,pad@w
  4522  004890  C52D  F532         	movff	pad@p+1,pad@w+1
  4523  004894  D004               	goto	l992
  4524  004896                     l5044:
  4525  004896  0E00               	movlw	0
  4526  004898  6E32               	movwf	(pad@w+1)^(0+1280),c
  4527  00489A  0E00               	movlw	0
  4528  00489C  6E31               	movwf	pad@w^(0+1280),c
  4529  00489E                     l992:
  4530                           
  4531                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4532  00489E  0E00               	movlw	0
  4533  0048A0  6E30               	movwf	(pad@i+1)^(0+1280),c
  4534  0048A2  0E00               	movlw	0
  4535  0048A4  6E2F               	movwf	pad@i^(0+1280),c
  4536                           
  4537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4538  0048A6  D00C               	goto	l5050
  4539  0048A8                     l5046:
  4540                           
  4541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4542  0048A8  0E00               	movlw	0
  4543  0048AA  6E19               	movwf	(fputc@c+1)^(0+1280),c
  4544  0048AC  0E20               	movlw	32
  4545  0048AE  6E18               	movwf	fputc@c^(0+1280),c
  4546  0048B0  C528  F51A         	movff	pad@fp,fputc@fp
  4547  0048B4  C529  F51B         	movff	pad@fp+1,fputc@fp+1
  4548  0048B8  EC42  F025         	call	_fputc	;wreg free
  4549                           
  4550                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4551  0048BC  4A2F               	infsnz	pad@i^(0+1280),f,c
  4552  0048BE  2A30               	incf	(pad@i+1)^(0+1280),f,c
  4553  0048C0                     l5050:
  4554                           
  4555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4556  0048C0  5031               	movf	pad@w^(0+1280),w,c
  4557  0048C2  5C2F               	subwf	pad@i^(0+1280),w,c
  4558  0048C4  5030               	movf	(pad@i+1)^(0+1280),w,c
  4559  0048C6  0A80               	xorlw	128
  4560  0048C8  6E2E               	movwf	??_pad^(0+1280),c
  4561  0048CA  5032               	movf	(pad@w+1)^(0+1280),w,c
  4562  0048CC  0A80               	xorlw	128
  4563  0048CE  582E               	subwfb	??_pad^(0+1280),w,c
  4564  0048D0  A0D8               	btfss	status,0,c
  4565  0048D2  D7EA               	goto	l5046
  4566                           
  4567                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4568  0048D4  B043               	btfsc	_flags^(0+1280),0,c
  4569  0048D6  D00A               	goto	l5054
  4570                           
  4571                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4572  0048D8  C52A  F521         	movff	pad@buf,fputs@s
  4573  0048DC  C52B  F522         	movff	pad@buf+1,fputs@s+1
  4574  0048E0  C528  F523         	movff	pad@fp,fputs@fp
  4575  0048E4  C529  F524         	movff	pad@fp+1,fputs@fp+1
  4576  0048E8  EC97  F026         	call	_fputs	;wreg free
  4577  0048EC                     l5054:
  4578                           
  4579                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4580  0048EC  C52A  F517         	movff	pad@buf,strlen@s
  4581  0048F0  C52B  F518         	movff	pad@buf+1,strlen@s+1
  4582  0048F4  ECE3  F026         	call	_strlen	;wreg free
  4583  0048F8  5031               	movf	pad@w^(0+1280),w,c
  4584  0048FA  2417               	addwf	?_strlen^(0+1280),w,c
  4585  0048FC  6E28               	movwf	?_pad^(0+1280),c
  4586  0048FE  5032               	movf	(pad@w+1)^(0+1280),w,c
  4587  004900  2018               	addwfc	(?_strlen+1)^(0+1280),w,c
  4588  004902  6E29               	movwf	(?_pad+1)^(0+1280),c
  4589  004904  0012               	return		;funcret
  4590  004906                     __end_of_pad:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _strlen *****************
  4594 ;; Defined at:
  4595 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  s               2   22[COMRAM] PTR const unsigned char 
  4598 ;;		 -> dbuf(80), 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  a               2   24[COMRAM] PTR const unsigned char 
  4601 ;;		 -> dbuf(80), 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  2   22[COMRAM] unsigned int 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/5
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4614 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4615 ;;Total ram usage:        4 bytes
  4616 ;; Hardware stack levels used: 1
  4617 ;; Hardware stack levels required when called: 2
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_pad
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text10
  4626  004DC6                     __ptext10:
  4627                           	callstack 0
  4628  004DC6                     _strlen:
  4629                           	callstack 119
  4630                           
  4631                           ;incstack = 0
  4632  004DC6  C517  F519         	movff	strlen@s,strlen@a
  4633  004DCA  C518  F51A         	movff	strlen@s+1,strlen@a+1
  4634  004DCE  D002               	goto	l4576
  4635  004DD0                     l4574:
  4636  004DD0  4A17               	infsnz	strlen@s^(0+1280),f,c
  4637  004DD2  2A18               	incf	(strlen@s+1)^(0+1280),f,c
  4638  004DD4                     l4576:
  4639  004DD4  0061  F45C  F4D9   	movff	strlen@s,fsr2l
  4640  004DDA  0061  F460  F4DA   	movff	strlen@s+1,fsr2h
  4641  004DE0  50DF               	movf	indf2,w,c
  4642  004DE2  A4D8               	btfss	status,2,c
  4643  004DE4  D7F5               	goto	l4574
  4644  004DE6  5019               	movf	strlen@a^(0+1280),w,c
  4645  004DE8  5C17               	subwf	strlen@s^(0+1280),w,c
  4646  004DEA  6E17               	movwf	?_strlen^(0+1280),c
  4647  004DEC  501A               	movf	(strlen@a+1)^(0+1280),w,c
  4648  004DEE  5818               	subwfb	(strlen@s+1)^(0+1280),w,c
  4649  004DF0  6E18               	movwf	(?_strlen+1)^(0+1280),c
  4650  004DF2  0012               	return		;funcret
  4651  004DF4                     __end_of_strlen:
  4652                           	callstack 0
  4653                           
  4654 ;; *************** function _fputs *****************
  4655 ;; Defined at:
  4656 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  s               2   32[COMRAM] PTR const unsigned char 
  4659 ;;		 -> dbuf(80), 
  4660 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  4661 ;;		 -> NULL(0), 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  i               2   37[COMRAM] int 
  4664 ;;  c               1   36[COMRAM] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  2   32[COMRAM] int 
  4667 ;; Registers used:
  4668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/5
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4675 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4677 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4678 ;;Total ram usage:        7 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; Hardware stack levels required when called: 4
  4681 ;; This function calls:
  4682 ;;		_fputc
  4683 ;; This function is called by:
  4684 ;;		_pad
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text11
  4689  004D2E                     __ptext11:
  4690                           	callstack 0
  4691  004D2E                     _fputs:
  4692                           	callstack 117
  4693                           
  4694                           ;incstack = 0
  4695  004D2E  0E00               	movlw	0
  4696  004D30  6E27               	movwf	(fputs@i+1)^(0+1280),c
  4697  004D32  0E00               	movlw	0
  4698  004D34  6E26               	movwf	fputs@i^(0+1280),c
  4699  004D36  D00B               	goto	l4570
  4700  004D38                     l4566:
  4701  004D38  C525  F518         	movff	fputs@c,fputc@c
  4702  004D3C  6A19               	clrf	(fputc@c+1)^(0+1280),c
  4703  004D3E  C523  F51A         	movff	fputs@fp,fputc@fp
  4704  004D42  C524  F51B         	movff	fputs@fp+1,fputc@fp+1
  4705  004D46  EC42  F025         	call	_fputc	;wreg free
  4706  004D4A  4A26               	infsnz	fputs@i^(0+1280),f,c
  4707  004D4C  2A27               	incf	(fputs@i+1)^(0+1280),f,c
  4708  004D4E                     l4570:
  4709  004D4E  5026               	movf	fputs@i^(0+1280),w,c
  4710  004D50  2421               	addwf	fputs@s^(0+1280),w,c
  4711  004D52  6ED9               	movwf	fsr2l,c
  4712  004D54  5027               	movf	(fputs@i+1)^(0+1280),w,c
  4713  004D56  2022               	addwfc	(fputs@s+1)^(0+1280),w,c
  4714  004D58  6EDA               	movwf	fsr2h,c
  4715  004D5A  50DF               	movf	indf2,w,c
  4716  004D5C  6E25               	movwf	fputs@c^(0+1280),c
  4717  004D5E  5025               	movf	fputs@c^(0+1280),w,c
  4718  004D60  B4D8               	btfsc	status,2,c
  4719  004D62  0012               	return	
  4720  004D64  D7E9               	goto	l4566
  4721  004D66                     __end_of_fputs:
  4722                           	callstack 0
  4723                           
  4724 ;; *************** function _fputc *****************
  4725 ;; Defined at:
  4726 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  c               2   23[COMRAM] int 
  4729 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  4730 ;;		 -> NULL(0), 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  2   23[COMRAM] int 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/5
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4744 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4745 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4746 ;;Total ram usage:        9 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; Hardware stack levels required when called: 3
  4749 ;; This function calls:
  4750 ;;		_putch
  4751 ;; This function is called by:
  4752 ;;		_pad
  4753 ;;		_vfpfcnvrt
  4754 ;;		_fputs
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text12
  4759  004A84                     __ptext12:
  4760                           	callstack 0
  4761  004A84                     _fputc:
  4762                           	callstack 120
  4763                           
  4764                           ;incstack = 0
  4765  004A84  501A               	movf	fputc@fp^(0+1280),w,c
  4766  004A86  101B               	iorwf	(fputc@fp+1)^(0+1280),w,c
  4767  004A88  B4D8               	btfsc	status,2,c
  4768  004A8A  D004               	goto	u4910
  4769  004A8C  501A               	movf	fputc@fp^(0+1280),w,c
  4770  004A8E  101B               	iorwf	(fputc@fp+1)^(0+1280),w,c
  4771  004A90  A4D8               	btfss	status,2,c
  4772  004A92  D004               	goto	l4354
  4773  004A94                     u4910:
  4774  004A94  5018               	movf	fputc@c^(0+1280),w,c
  4775  004A96  EC65  F027         	call	_putch
  4776  004A9A  0012               	return	
  4777  004A9C                     l4354:
  4778  004A9C  EE20 F009          	lfsr	2,9
  4779  004AA0  501A               	movf	fputc@fp^(0+1280),w,c
  4780  004AA2  26D9               	addwf	fsr2l,f,c
  4781  004AA4  501B               	movf	(fputc@fp+1)^(0+1280),w,c
  4782  004AA6  22DA               	addwfc	fsr2h,f,c
  4783  004AA8  50DE               	movf	postinc2,w,c
  4784  004AAA  10DE               	iorwf	postinc2,w,c
  4785  004AAC  B4D8               	btfsc	status,2,c
  4786  004AAE  D016               	goto	u4930
  4787  004AB0  EE20 F009          	lfsr	2,9
  4788  004AB4  501A               	movf	fputc@fp^(0+1280),w,c
  4789  004AB6  26D9               	addwf	fsr2l,f,c
  4790  004AB8  501B               	movf	(fputc@fp+1)^(0+1280),w,c
  4791  004ABA  22DA               	addwfc	fsr2h,f,c
  4792  004ABC  EE10 F003          	lfsr	1,3
  4793  004AC0  501A               	movf	fputc@fp^(0+1280),w,c
  4794  004AC2  26E1               	addwf	fsr1l,f,c
  4795  004AC4  501B               	movf	(fputc@fp+1)^(0+1280),w,c
  4796  004AC6  22E2               	addwfc	fsr1h,f,c
  4797  004AC8  50DE               	movf	postinc2,w,c
  4798  004ACA  5CE6               	subwf	postinc1,w,c
  4799  004ACC  50E6               	movf	postinc1,w,c
  4800  004ACE  0A80               	xorlw	128
  4801  004AD0  6E20               	movwf	(??_fputc+4)^(0+1280),c
  4802  004AD2  50DE               	movf	postinc2,w,c
  4803  004AD4  0A80               	xorlw	128
  4804  004AD6  5820               	subwfb	(??_fputc+4)^(0+1280),w,c
  4805  004AD8  B0D8               	btfsc	status,0,c
  4806  004ADA  0012               	return	
  4807  004ADC                     u4930:
  4808  004ADC  EE20 F003          	lfsr	2,3
  4809  004AE0  501A               	movf	fputc@fp^(0+1280),w,c
  4810  004AE2  26D9               	addwf	fsr2l,f,c
  4811  004AE4  501B               	movf	(fputc@fp+1)^(0+1280),w,c
  4812  004AE6  22DA               	addwfc	fsr2h,f,c
  4813  004AE8  2ADE               	incf	postinc2,f,c
  4814  004AEA  0E00               	movlw	0
  4815  004AEC  22DD               	addwfc	postdec2,f,c
  4816  004AEE  0012               	return		;funcret
  4817  004AF0                     __end_of_fputc:
  4818                           	callstack 0
  4819                           
  4820 ;; *************** function _putch *****************
  4821 ;; Defined at:
  4822 ;;		line 223 in file "TD4-monitor.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  c               1    wreg     unsigned char 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  c               1   22[COMRAM] unsigned char 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/5
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4840 ;;Total ram usage:        1 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 2
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_fputc
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text13
  4851  004ECA                     __ptext13:
  4852                           	callstack 0
  4853  004ECA                     _putch:
  4854                           	callstack 120
  4855                           
  4856                           ;incstack = 0
  4857                           ;putch@c stored from wreg
  4858  004ECA  6E17               	movwf	putch@c^(0+1280),c
  4859  004ECC                     
  4860                           ;TD4-monitor.c: 224:  while(!U3TXIF);
  4861  004ECC  A2B7               	btfss	1207,1,c	;volatile
  4862  004ECE  D7FE               	goto	l4344
  4863                           
  4864                           ;TD4-monitor.c: 225:  U3TXB = c;
  4865  004ED0  0061  F45C  F2C9   	movff	putch@c,713	;volatile
  4866  004ED6  0012               	return		;funcret
  4867  004ED8                     __end_of_putch:
  4868                           	callstack 0
  4869                           
  4870 ;; *************** function _floorf *****************
  4871 ;; Defined at:
  4872 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  x               4   48[COMRAM] float 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  u               4   19[BANK5 ] struct .
  4877 ;;  m               4   13[BANK5 ] unsigned long 
  4878 ;;  e               2   17[BANK5 ] int 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  4   48[COMRAM] float 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0
  4883 ;; Tracked objects:
  4884 ;;		On entry : 3F/5
  4885 ;;		On exit  : 3F/5
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4889 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4890 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4891 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4892 ;;Total ram usage:       20 bytes
  4893 ;; Hardware stack levels used: 1
  4894 ;; Hardware stack levels required when called: 2
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_efgtoa
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text14
  4903  003FD8                     __ptext14:
  4904                           	callstack 0
  4905  003FD8                     _floorf:
  4906                           	callstack 120
  4907                           
  4908                           ; BSR set to: 5
  4909                           
  4910                           ;incstack = 0
  4911  003FD8  C53B  F573         	movff	floorf@F526,floorf@u
  4912  003FDC  C53C  F574         	movff	floorf@F526+1,floorf@u+1
  4913  003FE0  C53D  F575         	movff	floorf@F526+2,floorf@u+2
  4914  003FE4  C53E  F576         	movff	floorf@F526+3,floorf@u+3
  4915  003FE8  C531  F573         	movff	floorf@x,floorf@u
  4916  003FEC  C532  F574         	movff	floorf@x+1,floorf@u+1
  4917  003FF0  C533  F575         	movff	floorf@x+2,floorf@u+2
  4918  003FF4  C534  F576         	movff	floorf@x+3,floorf@u+3
  4919                           
  4920                           ; BSR set to: 5
  4921  003FF8  0E81               	movlw	129
  4922  003FFA  6E35               	movwf	??_floorf^(0+1280),c
  4923  003FFC  0EFF               	movlw	255
  4924  003FFE  6E36               	movwf	(??_floorf+1)^(0+1280),c
  4925  004000  C573  F537         	movff	floorf@u,??_floorf+2
  4926  004004  C574  F538         	movff	floorf@u+1,??_floorf+3
  4927  004008  C575  F539         	movff	floorf@u+2,??_floorf+4
  4928  00400C  C576  F53A         	movff	floorf@u+3,??_floorf+5
  4929  004010  0E18               	movlw	24
  4930  004012  D005               	goto	u6200
  4931  004014                     u6205:
  4932  004014  90D8               	bcf	status,0,c
  4933  004016  323A               	rrcf	(??_floorf+5)^(0+1280),f,c
  4934  004018  3239               	rrcf	(??_floorf+4)^(0+1280),f,c
  4935  00401A  3238               	rrcf	(??_floorf+3)^(0+1280),f,c
  4936  00401C  3237               	rrcf	(??_floorf+2)^(0+1280),f,c
  4937  00401E                     u6200:
  4938  00401E  2EE8               	decfsz	wreg,f,c
  4939  004020  D7F9               	goto	u6205
  4940  004022  5037               	movf	(??_floorf+2)^(0+1280),w,c
  4941  004024  2435               	addwf	??_floorf^(0+1280),w,c
  4942  004026  6F71               	movwf	floorf@e& (0+255),b
  4943  004028  0E00               	movlw	0
  4944  00402A  2036               	addwfc	(??_floorf+1)^(0+1280),w,c
  4945  00402C  6F72               	movwf	(floorf@e+1)& (0+255),b
  4946  00402E  BF72               	btfsc	(floorf@e+1)& (0+255),7,b
  4947  004030  D00F               	goto	l5100
  4948  004032  5172               	movf	(floorf@e+1)& (0+255),w,b
  4949  004034  E104               	bnz	u6210
  4950  004036  0E17               	movlw	23
  4951  004038  5D71               	subwf	floorf@e& (0+255),w,b
  4952  00403A  A0D8               	btfss	status,0,c
  4953  00403C  D009               	goto	l5100
  4954  00403E                     u6210:
  4955                           
  4956                           ; BSR set to: 5
  4957  00403E  C531  F531         	movff	floorf@x,?_floorf
  4958  004042  C532  F532         	movff	floorf@x+1,?_floorf+1
  4959  004046  C533  F533         	movff	floorf@x+2,?_floorf+2
  4960  00404A  C534  F534         	movff	floorf@x+3,?_floorf+3
  4961  00404E  0012               	return	
  4962  004050                     l5100:
  4963                           
  4964                           ; BSR set to: 5
  4965  004050  BF72               	btfsc	(floorf@e+1)& (0+255),7,b
  4966  004052  D05C               	goto	l5110
  4967                           
  4968                           ; BSR set to: 5
  4969  004054  C571  F535         	movff	floorf@e,??_floorf
  4970  004058  0EFF               	movlw	255
  4971  00405A  6E36               	movwf	(??_floorf+1)^(0+1280),c
  4972  00405C  0EFF               	movlw	255
  4973  00405E  6E37               	movwf	(??_floorf+2)^(0+1280),c
  4974  004060  0E7F               	movlw	127
  4975  004062  6E38               	movwf	(??_floorf+3)^(0+1280),c
  4976  004064  0E00               	movlw	0
  4977  004066  6E39               	movwf	(??_floorf+4)^(0+1280),c
  4978  004068                     u6235:
  4979  004068  6635               	tstfsz	??_floorf^(0+1280),c
  4980  00406A  D001               	goto	u6236
  4981  00406C  D007               	goto	u6237
  4982  00406E                     u6236:
  4983  00406E  3439               	rlcf	(??_floorf+4)^(0+1280),w,c
  4984  004070  3239               	rrcf	(??_floorf+4)^(0+1280),f,c
  4985  004072  3238               	rrcf	(??_floorf+3)^(0+1280),f,c
  4986  004074  3237               	rrcf	(??_floorf+2)^(0+1280),f,c
  4987  004076  3236               	rrcf	(??_floorf+1)^(0+1280),f,c
  4988  004078  2E35               	decfsz	??_floorf^(0+1280),f,c
  4989  00407A  D7F6               	goto	u6235
  4990  00407C                     u6237:
  4991  00407C  C536  F56D         	movff	??_floorf+1,floorf@m
  4992  004080  C537  F56E         	movff	??_floorf+2,floorf@m+1
  4993  004084  C538  F56F         	movff	??_floorf+3,floorf@m+2
  4994  004088  C539  F570         	movff	??_floorf+4,floorf@m+3
  4995  00408C  0105               	movlb	5	; () banked
  4996  00408E  516D               	movf	floorf@m& (0+255),w,b
  4997  004090  1573               	andwf	floorf@u& (0+255),w,b
  4998  004092  6E35               	movwf	??_floorf^(0+1280),c
  4999  004094  516E               	movf	(floorf@m+1)& (0+255),w,b
  5000  004096  1574               	andwf	(floorf@u+1)& (0+255),w,b
  5001  004098  6E36               	movwf	(??_floorf+1)^(0+1280),c
  5002  00409A  516F               	movf	(floorf@m+2)& (0+255),w,b
  5003  00409C  1575               	andwf	(floorf@u+2)& (0+255),w,b
  5004  00409E  6E37               	movwf	(??_floorf+2)^(0+1280),c
  5005  0040A0  5170               	movf	(floorf@m+3)& (0+255),w,b
  5006  0040A2  1576               	andwf	(floorf@u+3)& (0+255),w,b
  5007  0040A4  6E38               	movwf	(??_floorf+3)^(0+1280),c
  5008  0040A6  5035               	movf	??_floorf^(0+1280),w,c
  5009  0040A8  1036               	iorwf	(??_floorf+1)^(0+1280),w,c
  5010  0040AA  1037               	iorwf	(??_floorf+2)^(0+1280),w,c
  5011  0040AC  1038               	iorwf	(??_floorf+3)^(0+1280),w,c
  5012  0040AE  B4D8               	btfsc	status,2,c
  5013  0040B0  D7C6               	goto	u6210
  5014                           
  5015                           ; BSR set to: 5
  5016  0040B2  C573  F535         	movff	floorf@u,??_floorf
  5017  0040B6  C574  F536         	movff	floorf@u+1,??_floorf+1
  5018  0040BA  C575  F537         	movff	floorf@u+2,??_floorf+2
  5019  0040BE  C576  F538         	movff	floorf@u+3,??_floorf+3
  5020  0040C2  0E20               	movlw	32
  5021  0040C4  D005               	goto	u6250
  5022  0040C6                     u6255:
  5023  0040C6  90D8               	bcf	status,0,c
  5024  0040C8  3238               	rrcf	(??_floorf+3)^(0+1280),f,c
  5025  0040CA  3237               	rrcf	(??_floorf+2)^(0+1280),f,c
  5026  0040CC  3236               	rrcf	(??_floorf+1)^(0+1280),f,c
  5027  0040CE  3235               	rrcf	??_floorf^(0+1280),f,c
  5028  0040D0                     u6250:
  5029  0040D0  2EE8               	decfsz	wreg,f,c
  5030  0040D2  D7F9               	goto	u6255
  5031  0040D4  5035               	movf	??_floorf^(0+1280),w,c
  5032  0040D6  B4D8               	btfsc	status,2,c
  5033  0040D8  D008               	goto	l1164
  5034                           
  5035                           ; BSR set to: 5
  5036  0040DA  516D               	movf	floorf@m& (0+255),w,b
  5037  0040DC  2773               	addwf	floorf@u& (0+255),f,b
  5038  0040DE  516E               	movf	(floorf@m+1)& (0+255),w,b
  5039  0040E0  2374               	addwfc	(floorf@u+1)& (0+255),f,b
  5040  0040E2  516F               	movf	(floorf@m+2)& (0+255),w,b
  5041  0040E4  2375               	addwfc	(floorf@u+2)& (0+255),f,b
  5042  0040E6  5170               	movf	(floorf@m+3)& (0+255),w,b
  5043  0040E8  2376               	addwfc	(floorf@u+3)& (0+255),f,b
  5044  0040EA                     l1164:
  5045                           
  5046                           ; BSR set to: 5
  5047  0040EA  1D6D               	comf	floorf@m& (0+255),w,b
  5048  0040EC  6E35               	movwf	??_floorf^(0+1280),c
  5049  0040EE  1D6E               	comf	(floorf@m+1)& (0+255),w,b
  5050  0040F0  6E36               	movwf	(??_floorf+1)^(0+1280),c
  5051  0040F2  1D6F               	comf	(floorf@m+2)& (0+255),w,b
  5052  0040F4  6E37               	movwf	(??_floorf+2)^(0+1280),c
  5053  0040F6  1D70               	comf	(floorf@m+3)& (0+255),w,b
  5054  0040F8  6E38               	movwf	(??_floorf+3)^(0+1280),c
  5055  0040FA  5035               	movf	??_floorf^(0+1280),w,c
  5056  0040FC  1773               	andwf	floorf@u& (0+255),f,b
  5057  0040FE  5036               	movf	(??_floorf+1)^(0+1280),w,c
  5058  004100  1774               	andwf	(floorf@u+1)& (0+255),f,b
  5059  004102  5037               	movf	(??_floorf+2)^(0+1280),w,c
  5060  004104  1775               	andwf	(floorf@u+2)& (0+255),f,b
  5061  004106  5038               	movf	(??_floorf+3)^(0+1280),w,c
  5062  004108  1776               	andwf	(floorf@u+3)& (0+255),f,b
  5063  00410A  D032               	goto	l5118
  5064  00410C                     l5110:
  5065                           
  5066                           ; BSR set to: 5
  5067  00410C  C573  F535         	movff	floorf@u,??_floorf
  5068  004110  C574  F536         	movff	floorf@u+1,??_floorf+1
  5069  004114  C575  F537         	movff	floorf@u+2,??_floorf+2
  5070  004118  C576  F538         	movff	floorf@u+3,??_floorf+3
  5071  00411C  0E20               	movlw	32
  5072  00411E  D005               	goto	u6270
  5073  004120                     u6275:
  5074  004120  90D8               	bcf	status,0,c
  5075  004122  3238               	rrcf	(??_floorf+3)^(0+1280),f,c
  5076  004124  3237               	rrcf	(??_floorf+2)^(0+1280),f,c
  5077  004126  3236               	rrcf	(??_floorf+1)^(0+1280),f,c
  5078  004128  3235               	rrcf	??_floorf^(0+1280),f,c
  5079  00412A                     u6270:
  5080  00412A  2EE8               	decfsz	wreg,f,c
  5081  00412C  D7F9               	goto	u6275
  5082  00412E  6635               	tstfsz	??_floorf^(0+1280),c
  5083  004130  D008               	goto	l5114
  5084                           
  5085                           ; BSR set to: 5
  5086  004132  0E00               	movlw	0
  5087  004134  6F73               	movwf	floorf@u& (0+255),b
  5088  004136  0E00               	movlw	0
  5089  004138  6F74               	movwf	(floorf@u+1)& (0+255),b
  5090  00413A  0E00               	movlw	0
  5091  00413C  6F75               	movwf	(floorf@u+2)& (0+255),b
  5092  00413E  0E00               	movlw	0
  5093  004140  D016               	goto	L5
  5094  004142                     l5114:
  5095                           
  5096                           ; BSR set to: 5
  5097  004142  90D8               	bcf	status,0,c
  5098  004144  3573               	rlcf	floorf@u& (0+255),w,b
  5099  004146  6E35               	movwf	??_floorf^(0+1280),c
  5100  004148  3574               	rlcf	(floorf@u+1)& (0+255),w,b
  5101  00414A  6E36               	movwf	(??_floorf+1)^(0+1280),c
  5102  00414C  3575               	rlcf	(floorf@u+2)& (0+255),w,b
  5103  00414E  6E37               	movwf	(??_floorf+2)^(0+1280),c
  5104  004150  3576               	rlcf	(floorf@u+3)& (0+255),w,b
  5105  004152  6E38               	movwf	(??_floorf+3)^(0+1280),c
  5106  004154  5035               	movf	??_floorf^(0+1280),w,c
  5107  004156  1036               	iorwf	(??_floorf+1)^(0+1280),w,c
  5108  004158  1037               	iorwf	(??_floorf+2)^(0+1280),w,c
  5109  00415A  1038               	iorwf	(??_floorf+3)^(0+1280),w,c
  5110  00415C  B4D8               	btfsc	status,2,c
  5111  00415E  D008               	goto	l5118
  5112                           
  5113                           ; BSR set to: 5
  5114  004160  0E00               	movlw	0
  5115  004162  6F73               	movwf	floorf@u& (0+255),b
  5116  004164  0E00               	movlw	0
  5117  004166  6F74               	movwf	(floorf@u+1)& (0+255),b
  5118  004168  0E80               	movlw	128
  5119  00416A  6F75               	movwf	(floorf@u+2)& (0+255),b
  5120  00416C  0EBF               	movlw	191
  5121  00416E                     L5:
  5122  00416E  6F76               	movwf	(floorf@u+3)& (0+255),b
  5123  004170                     l5118:
  5124                           
  5125                           ; BSR set to: 5
  5126  004170  C573  F531         	movff	floorf@u,?_floorf
  5127  004174  C574  F532         	movff	floorf@u+1,?_floorf+1
  5128  004178  C575  F533         	movff	floorf@u+2,?_floorf+2
  5129  00417C  C576  F534         	movff	floorf@u+3,?_floorf+3
  5130                           
  5131                           ; BSR set to: 5
  5132  004180  0012               	return		;funcret
  5133  004182                     __end_of_floorf:
  5134                           	callstack 0
  5135                           
  5136 ;; *************** function ___fpclassifyf *****************
  5137 ;; Defined at:
  5138 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  x               4   22[COMRAM] float 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  u               4   32[COMRAM] struct .
  5143 ;;  e               2   30[COMRAM] int 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  2   22[COMRAM] int 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/5
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5154 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5155 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5156 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5157 ;;Total ram usage:       14 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; Hardware stack levels required when called: 2
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_efgtoa
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text15
  5168  0044C6                     __ptext15:
  5169                           	callstack 0
  5170  0044C6                     ___fpclassifyf:
  5171                           	callstack 120
  5172                           
  5173                           ; BSR set to: 5
  5174                           ;incstack = 0
  5175  0044C6  C53F  F521         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5176  0044CA  C540  F522         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5177  0044CE  C541  F523         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5178  0044D2  C542  F524         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5179  0044D6  C517  F521         	movff	___fpclassifyf@x,___fpclassifyf@u
  5180  0044DA  C518  F522         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5181  0044DE  C519  F523         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5182  0044E2  C51A  F524         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5183  0044E6  C521  F51B         	movff	___fpclassifyf@u,??___fpclassifyf
  5184  0044EA  C522  F51C         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5185  0044EE  C523  F51D         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5186  0044F2  C524  F51E         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5187  0044F6  0E18               	movlw	24
  5188  0044F8  D005               	goto	u6100
  5189  0044FA                     u6105:
  5190  0044FA  90D8               	bcf	status,0,c
  5191  0044FC  321E               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
  5192  0044FE  321D               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
  5193  004500  321C               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
  5194  004502  321B               	rrcf	??___fpclassifyf^(0+1280),f,c
  5195  004504                     u6100:
  5196  004504  2EE8               	decfsz	wreg,f,c
  5197  004506  D7F9               	goto	u6105
  5198  004508  501B               	movf	??___fpclassifyf^(0+1280),w,c
  5199  00450A  6E1F               	movwf	___fpclassifyf@e^(0+1280),c
  5200  00450C  6A20               	clrf	(___fpclassifyf@e+1)^(0+1280),c
  5201  00450E  501F               	movf	___fpclassifyf@e^(0+1280),w,c
  5202  004510  1020               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
  5203  004512  A4D8               	btfss	status,2,c
  5204  004514  D019               	goto	l5070
  5205  004516  90D8               	bcf	status,0,c
  5206  004518  3421               	rlcf	___fpclassifyf@u^(0+1280),w,c
  5207  00451A  6E1B               	movwf	??___fpclassifyf^(0+1280),c
  5208  00451C  3422               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
  5209  00451E  6E1C               	movwf	(??___fpclassifyf+1)^(0+1280),c
  5210  004520  3423               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
  5211  004522  6E1D               	movwf	(??___fpclassifyf+2)^(0+1280),c
  5212  004524  3424               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
  5213  004526  6E1E               	movwf	(??___fpclassifyf+3)^(0+1280),c
  5214  004528  501B               	movf	??___fpclassifyf^(0+1280),w,c
  5215  00452A  101C               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
  5216  00452C  101D               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
  5217  00452E  101E               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
  5218  004530  A4D8               	btfss	status,2,c
  5219  004532  D005               	goto	l5066
  5220  004534  0E00               	movlw	0
  5221  004536  6E18               	movwf	(?___fpclassifyf+1)^(0+1280),c
  5222  004538  0E02               	movlw	2
  5223  00453A  6E17               	movwf	?___fpclassifyf^(0+1280),c
  5224  00453C  0012               	return	
  5225  00453E                     l5066:
  5226  00453E  0E00               	movlw	0
  5227  004540  6E18               	movwf	(?___fpclassifyf+1)^(0+1280),c
  5228  004542  0E03               	movlw	3
  5229  004544  6E17               	movwf	?___fpclassifyf^(0+1280),c
  5230  004546  0012               	return	
  5231  004548                     l5070:
  5232  004548  281F               	incf	___fpclassifyf@e^(0+1280),w,c
  5233  00454A  1020               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
  5234  00454C  A4D8               	btfss	status,2,c
  5235  00454E  D01C               	goto	l5076
  5236  004550  C521  F51B         	movff	___fpclassifyf@u,??___fpclassifyf
  5237  004554  C522  F51C         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5238  004558  C523  F51D         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5239  00455C  C524  F51E         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5240  004560  0E09               	movlw	9
  5241  004562                     u6145:
  5242  004562  90D8               	bcf	status,0,c
  5243  004564  361B               	rlcf	??___fpclassifyf^(0+1280),f,c
  5244  004566  361C               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
  5245  004568  361D               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
  5246  00456A  361E               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
  5247  00456C  2EE8               	decfsz	wreg,f,c
  5248  00456E  D7F9               	goto	u6145
  5249  004570  501B               	movf	??___fpclassifyf^(0+1280),w,c
  5250  004572  101C               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
  5251  004574  101D               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
  5252  004576  101E               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
  5253  004578  A4D8               	btfss	status,2,c
  5254  00457A  D002               	goto	u6150
  5255  00457C  0E01               	movlw	1
  5256  00457E  D001               	goto	u6160
  5257  004580                     u6150:
  5258  004580  0E00               	movlw	0
  5259  004582                     u6160:
  5260  004582  6E17               	movwf	?___fpclassifyf^(0+1280),c
  5261  004584  6A18               	clrf	(?___fpclassifyf+1)^(0+1280),c
  5262  004586  0012               	return	
  5263  004588                     l5076:
  5264  004588  0E00               	movlw	0
  5265  00458A  6E18               	movwf	(?___fpclassifyf+1)^(0+1280),c
  5266  00458C  0E04               	movlw	4
  5267  00458E  6E17               	movwf	?___fpclassifyf^(0+1280),c
  5268  004590  0012               	return		;funcret
  5269  004592                     __end_of___fpclassifyf:
  5270                           	callstack 0
  5271                           
  5272 ;; *************** function ___fltol *****************
  5273 ;; Defined at:
  5274 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  f1              4   22[COMRAM] int 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  exp1            1   31[COMRAM] unsigned char 
  5279 ;;  sign1           1   30[COMRAM] unsigned char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  4   22[COMRAM] long 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0
  5284 ;; Tracked objects:
  5285 ;;		On entry : 3F/5
  5286 ;;		On exit  : 3F/5
  5287 ;;		Unchanged: 3E/0
  5288 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5291 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5292 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5293 ;;Total ram usage:       10 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; Hardware stack levels required when called: 2
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_efgtoa
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text16
  5304  004718                     __ptext16:
  5305                           	callstack 0
  5306  004718                     ___fltol:
  5307                           	callstack 120
  5308                           
  5309                           ; BSR set to: 5
  5310                           
  5311                           ;incstack = 0
  5312  004718  3419               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  5313  00471A  341A               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  5314  00471C  6E20               	movwf	___fltol@exp1^(0+1280),c
  5315  00471E  5020               	movf	___fltol@exp1^(0+1280),w,c
  5316  004720  A4D8               	btfss	status,2,c
  5317  004722  D009               	goto	l4998
  5318  004724                     u5990:
  5319                           
  5320                           ; BSR set to: 5
  5321  004724  0E00               	movlw	0
  5322  004726  6E17               	movwf	?___fltol^(0+1280),c
  5323  004728  0E00               	movlw	0
  5324  00472A  6E18               	movwf	(?___fltol+1)^(0+1280),c
  5325  00472C  0E00               	movlw	0
  5326  00472E  6E19               	movwf	(?___fltol+2)^(0+1280),c
  5327  004730  0E00               	movlw	0
  5328  004732  6E1A               	movwf	(?___fltol+3)^(0+1280),c
  5329  004734  0012               	return	
  5330  004736                     l4998:
  5331                           
  5332                           ; BSR set to: 5
  5333  004736  C517  F51B         	movff	___fltol@f1,??___fltol
  5334  00473A  C518  F51C         	movff	___fltol@f1+1,??___fltol+1
  5335  00473E  C519  F51D         	movff	___fltol@f1+2,??___fltol+2
  5336  004742  C51A  F51E         	movff	___fltol@f1+3,??___fltol+3
  5337  004746  0E20               	movlw	32
  5338  004748  D005               	goto	u6000
  5339  00474A                     u6005:
  5340  00474A  90D8               	bcf	status,0,c
  5341  00474C  321E               	rrcf	(??___fltol+3)^(0+1280),f,c
  5342  00474E  321D               	rrcf	(??___fltol+2)^(0+1280),f,c
  5343  004750  321C               	rrcf	(??___fltol+1)^(0+1280),f,c
  5344  004752  321B               	rrcf	??___fltol^(0+1280),f,c
  5345  004754                     u6000:
  5346  004754  2EE8               	decfsz	wreg,f,c
  5347  004756  D7F9               	goto	u6005
  5348  004758  501B               	movf	??___fltol^(0+1280),w,c
  5349  00475A  6E1F               	movwf	___fltol@sign1^(0+1280),c
  5350                           
  5351                           ; BSR set to: 5
  5352  00475C  8E19               	bsf	(___fltol@f1+2)^(0+1280),7,c
  5353                           
  5354                           ; BSR set to: 5
  5355  00475E  0EFF               	movlw	255
  5356  004760  1617               	andwf	___fltol@f1^(0+1280),f,c
  5357  004762  0EFF               	movlw	255
  5358  004764  1618               	andwf	(___fltol@f1+1)^(0+1280),f,c
  5359  004766  0EFF               	movlw	255
  5360  004768  1619               	andwf	(___fltol@f1+2)^(0+1280),f,c
  5361  00476A  0E00               	movlw	0
  5362  00476C  161A               	andwf	(___fltol@f1+3)^(0+1280),f,c
  5363                           
  5364                           ; BSR set to: 5
  5365  00476E  0E96               	movlw	150
  5366  004770  5E20               	subwf	___fltol@exp1^(0+1280),f,c
  5367                           
  5368                           ; BSR set to: 5
  5369  004772  AE20               	btfss	___fltol@exp1^(0+1280),7,c
  5370  004774  D00D               	goto	l5018
  5371                           
  5372                           ; BSR set to: 5
  5373  004776  5020               	movf	___fltol@exp1^(0+1280),w,c
  5374  004778  0A80               	xorlw	128
  5375  00477A  0F97               	addlw	151
  5376  00477C  A0D8               	btfss	status,0,c
  5377  00477E  D7D2               	goto	u5990
  5378  004780                     l5014:
  5379                           
  5380                           ; BSR set to: 5
  5381  004780  90D8               	bcf	status,0,c
  5382  004782  321A               	rrcf	(___fltol@f1+3)^(0+1280),f,c
  5383  004784  3219               	rrcf	(___fltol@f1+2)^(0+1280),f,c
  5384  004786  3218               	rrcf	(___fltol@f1+1)^(0+1280),f,c
  5385  004788  3217               	rrcf	___fltol@f1^(0+1280),f,c
  5386                           
  5387                           ; BSR set to: 5
  5388  00478A  3E20               	incfsz	___fltol@exp1^(0+1280),f,c
  5389  00478C  D7F9               	goto	l5014
  5390  00478E  D00D               	goto	u6040
  5391  004790                     l5018:
  5392                           
  5393                           ; BSR set to: 5
  5394  004790  0E1F               	movlw	31
  5395  004792  6420               	cpfsgt	___fltol@exp1^(0+1280),c
  5396  004794  D007               	goto	l5026
  5397  004796  D7C6               	goto	u5990
  5398  004798                     l5024:
  5399                           
  5400                           ; BSR set to: 5
  5401  004798  90D8               	bcf	status,0,c
  5402  00479A  3617               	rlcf	___fltol@f1^(0+1280),f,c
  5403  00479C  3618               	rlcf	(___fltol@f1+1)^(0+1280),f,c
  5404  00479E  3619               	rlcf	(___fltol@f1+2)^(0+1280),f,c
  5405  0047A0  361A               	rlcf	(___fltol@f1+3)^(0+1280),f,c
  5406  0047A2  0620               	decf	___fltol@exp1^(0+1280),f,c
  5407  0047A4                     l5026:
  5408                           
  5409                           ; BSR set to: 5
  5410  0047A4  5020               	movf	___fltol@exp1^(0+1280),w,c
  5411  0047A6  A4D8               	btfss	status,2,c
  5412  0047A8  D7F7               	goto	l5024
  5413  0047AA                     u6040:
  5414                           
  5415                           ; BSR set to: 5
  5416  0047AA  501F               	movf	___fltol@sign1^(0+1280),w,c
  5417  0047AC  B4D8               	btfsc	status,2,c
  5418  0047AE  D008               	goto	l5032
  5419                           
  5420                           ; BSR set to: 5
  5421  0047B0  1E1A               	comf	(___fltol@f1+3)^(0+1280),f,c
  5422  0047B2  1E19               	comf	(___fltol@f1+2)^(0+1280),f,c
  5423  0047B4  1E18               	comf	(___fltol@f1+1)^(0+1280),f,c
  5424  0047B6  6C17               	negf	___fltol@f1^(0+1280),c
  5425  0047B8  0E00               	movlw	0
  5426  0047BA  2218               	addwfc	(___fltol@f1+1)^(0+1280),f,c
  5427  0047BC  2219               	addwfc	(___fltol@f1+2)^(0+1280),f,c
  5428  0047BE  221A               	addwfc	(___fltol@f1+3)^(0+1280),f,c
  5429  0047C0                     l5032:
  5430                           
  5431                           ; BSR set to: 5
  5432  0047C0  C517  F517         	movff	___fltol@f1,?___fltol
  5433  0047C4  C518  F518         	movff	___fltol@f1+1,?___fltol+1
  5434  0047C8  C519  F519         	movff	___fltol@f1+2,?___fltol+2
  5435  0047CC  C51A  F51A         	movff	___fltol@f1+3,?___fltol+3
  5436                           
  5437                           ; BSR set to: 5
  5438  0047D0  0012               	return		;funcret
  5439  0047D2                     __end_of___fltol:
  5440                           	callstack 0
  5441                           
  5442 ;; *************** function ___flsub *****************
  5443 ;; Defined at:
  5444 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  b               4   47[COMRAM] long 
  5447 ;;  a               4   51[COMRAM] long 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  4   47[COMRAM] long 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/5
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5459 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5462 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5463 ;;Total ram usage:        8 bytes
  5464 ;; Hardware stack levels used: 1
  5465 ;; Hardware stack levels required when called: 3
  5466 ;; This function calls:
  5467 ;;		___fladd
  5468 ;; This function is called by:
  5469 ;;		_efgtoa
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text17
  5474  004BFC                     __ptext17:
  5475                           	callstack 0
  5476  004BFC                     ___flsub:
  5477                           	callstack 119
  5478                           
  5479                           ; BSR set to: 5
  5480                           ;incstack = 0
  5481  004BFC  0E00               	movlw	0
  5482  004BFE  1A34               	xorwf	___flsub@a^(0+1280),f,c
  5483  004C00  0E00               	movlw	0
  5484  004C02  1A35               	xorwf	(___flsub@a+1)^(0+1280),f,c
  5485  004C04  0E00               	movlw	0
  5486  004C06  1A36               	xorwf	(___flsub@a+2)^(0+1280),f,c
  5487  004C08  0E80               	movlw	128
  5488  004C0A  1A37               	xorwf	(___flsub@a+3)^(0+1280),f,c
  5489  004C0C  C530  F517         	movff	___flsub@b,___fladd@b
  5490  004C10  C531  F518         	movff	___flsub@b+1,___fladd@b+1
  5491  004C14  C532  F519         	movff	___flsub@b+2,___fladd@b+2
  5492  004C18  C533  F51A         	movff	___flsub@b+3,___fladd@b+3
  5493  004C1C  C534  F51B         	movff	___flsub@a,___fladd@a
  5494  004C20  C535  F51C         	movff	___flsub@a+1,___fladd@a+1
  5495  004C24  C536  F51D         	movff	___flsub@a+2,___fladd@a+2
  5496  004C28  C537  F51E         	movff	___flsub@a+3,___fladd@a+3
  5497  004C2C  ECE8  F01B         	call	___fladd	;wreg free
  5498  004C30  C517  F530         	movff	?___fladd,?___flsub
  5499  004C34  C518  F531         	movff	?___fladd+1,?___flsub+1
  5500  004C38  C519  F532         	movff	?___fladd+2,?___flsub+2
  5501  004C3C  C51A  F533         	movff	?___fladd+3,?___flsub+3
  5502  004C40  0012               	return		;funcret
  5503  004C42                     __end_of___flsub:
  5504                           	callstack 0
  5505                           
  5506 ;; *************** function ___fladd *****************
  5507 ;; Defined at:
  5508 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  b               4   22[COMRAM] long 
  5511 ;;  a               4   26[COMRAM] long 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  grs             1   37[COMRAM] unsigned char 
  5514 ;;  bexp            1   36[COMRAM] unsigned char 
  5515 ;;  aexp            1   35[COMRAM] unsigned char 
  5516 ;;  signs           1   34[COMRAM] unsigned char 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  4   22[COMRAM] unsigned char 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/5
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5526 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5527 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5528 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5529 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5530 ;;Total ram usage:       16 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; Hardware stack levels required when called: 2
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		___flsub
  5537 ;;		_efgtoa
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text18
  5542  0037D0                     __ptext18:
  5543                           	callstack 0
  5544  0037D0                     ___fladd:
  5545                           	callstack 119
  5546                           
  5547                           ;incstack = 0
  5548  0037D0  501A               	movf	(___fladd@b+3)^(0+1280),w,c
  5549  0037D2  0B80               	andlw	128
  5550  0037D4  6E23               	movwf	___fladd@signs^(0+1280),c
  5551  0037D6  501A               	movf	(___fladd@b+3)^(0+1280),w,c
  5552  0037D8  241A               	addwf	(___fladd@b+3)^(0+1280),w,c
  5553  0037DA  6E25               	movwf	___fladd@bexp^(0+1280),c
  5554  0037DC  BE19               	btfsc	(___fladd@b+2)^(0+1280),7,c
  5555  0037DE  8025               	bsf	___fladd@bexp^(0+1280),0,c
  5556  0037E0  5025               	movf	___fladd@bexp^(0+1280),w,c
  5557  0037E2  B4D8               	btfsc	status,2,c
  5558  0037E4  D00D               	goto	l4378
  5559  0037E6  2825               	incf	___fladd@bexp^(0+1280),w,c
  5560  0037E8  A4D8               	btfss	status,2,c
  5561  0037EA  D008               	goto	l4374
  5562  0037EC  0E00               	movlw	0
  5563  0037EE  6E17               	movwf	___fladd@b^(0+1280),c
  5564  0037F0  0E00               	movlw	0
  5565  0037F2  6E18               	movwf	(___fladd@b+1)^(0+1280),c
  5566  0037F4  0E00               	movlw	0
  5567  0037F6  6E19               	movwf	(___fladd@b+2)^(0+1280),c
  5568  0037F8  0E00               	movlw	0
  5569  0037FA  6E1A               	movwf	(___fladd@b+3)^(0+1280),c
  5570  0037FC                     l4374:
  5571  0037FC  8E19               	bsf	(___fladd@b+2)^(0+1280),7,c
  5572  0037FE  D006               	goto	L6
  5573  003800                     l4378:
  5574  003800  0E00               	movlw	0
  5575  003802  6E17               	movwf	___fladd@b^(0+1280),c
  5576  003804  0E00               	movlw	0
  5577  003806  6E18               	movwf	(___fladd@b+1)^(0+1280),c
  5578  003808  0E00               	movlw	0
  5579  00380A  6E19               	movwf	(___fladd@b+2)^(0+1280),c
  5580  00380C                     L6:
  5581  00380C  0E00               	movlw	0
  5582  00380E  6E1A               	movwf	(___fladd@b+3)^(0+1280),c
  5583  003810  501E               	movf	(___fladd@a+3)^(0+1280),w,c
  5584  003812  0B80               	andlw	128
  5585  003814  6E24               	movwf	___fladd@aexp^(0+1280),c
  5586  003816  5023               	movf	___fladd@signs^(0+1280),w,c
  5587  003818  1824               	xorwf	___fladd@aexp^(0+1280),w,c
  5588  00381A  A4D8               	btfss	status,2,c
  5589  00381C  8C23               	bsf	___fladd@signs^(0+1280),6,c
  5590  00381E  501E               	movf	(___fladd@a+3)^(0+1280),w,c
  5591  003820  241E               	addwf	(___fladd@a+3)^(0+1280),w,c
  5592  003822  6E24               	movwf	___fladd@aexp^(0+1280),c
  5593  003824  BE1D               	btfsc	(___fladd@a+2)^(0+1280),7,c
  5594  003826  8024               	bsf	___fladd@aexp^(0+1280),0,c
  5595  003828  5024               	movf	___fladd@aexp^(0+1280),w,c
  5596  00382A  B4D8               	btfsc	status,2,c
  5597  00382C  D00D               	goto	l4402
  5598  00382E  2824               	incf	___fladd@aexp^(0+1280),w,c
  5599  003830  A4D8               	btfss	status,2,c
  5600  003832  D008               	goto	l4398
  5601  003834  0E00               	movlw	0
  5602  003836  6E1B               	movwf	___fladd@a^(0+1280),c
  5603  003838  0E00               	movlw	0
  5604  00383A  6E1C               	movwf	(___fladd@a+1)^(0+1280),c
  5605  00383C  0E00               	movlw	0
  5606  00383E  6E1D               	movwf	(___fladd@a+2)^(0+1280),c
  5607  003840  0E00               	movlw	0
  5608  003842  6E1E               	movwf	(___fladd@a+3)^(0+1280),c
  5609  003844                     l4398:
  5610  003844  8E1D               	bsf	(___fladd@a+2)^(0+1280),7,c
  5611  003846  D006               	goto	L7
  5612  003848                     l4402:
  5613  003848  0E00               	movlw	0
  5614  00384A  6E1B               	movwf	___fladd@a^(0+1280),c
  5615  00384C  0E00               	movlw	0
  5616  00384E  6E1C               	movwf	(___fladd@a+1)^(0+1280),c
  5617  003850  0E00               	movlw	0
  5618  003852  6E1D               	movwf	(___fladd@a+2)^(0+1280),c
  5619  003854                     L7:
  5620  003854  0E00               	movlw	0
  5621  003856  6E1E               	movwf	(___fladd@a+3)^(0+1280),c
  5622  003858  5025               	movf	___fladd@bexp^(0+1280),w,c
  5623  00385A  5C24               	subwf	___fladd@aexp^(0+1280),w,c
  5624  00385C  B0D8               	btfsc	status,0,c
  5625  00385E  D022               	goto	l4440
  5626  003860  AC23               	btfss	___fladd@signs^(0+1280),6,c
  5627  003862  D002               	goto	l4410
  5628  003864  0E80               	movlw	128
  5629  003866  1A23               	xorwf	___fladd@signs^(0+1280),f,c
  5630  003868                     l4410:
  5631  003868  C525  F526         	movff	___fladd@bexp,___fladd@grs
  5632  00386C  C524  F525         	movff	___fladd@aexp,___fladd@bexp
  5633  003870  C526  F524         	movff	___fladd@grs,___fladd@aexp
  5634  003874  C517  F526         	movff	___fladd@b,___fladd@grs
  5635  003878  C51B  F517         	movff	___fladd@a,___fladd@b
  5636  00387C  C526  F51B         	movff	___fladd@grs,___fladd@a
  5637  003880  C518  F526         	movff	___fladd@b+1,___fladd@grs
  5638  003884  C51C  F518         	movff	___fladd@a+1,___fladd@b+1
  5639  003888  C526  F51C         	movff	___fladd@grs,___fladd@a+1
  5640  00388C  C519  F526         	movff	___fladd@b+2,___fladd@grs
  5641  003890  C51D  F519         	movff	___fladd@a+2,___fladd@b+2
  5642  003894  C526  F51D         	movff	___fladd@grs,___fladd@a+2
  5643  003898  C51A  F526         	movff	___fladd@b+3,___fladd@grs
  5644  00389C  C51E  F51A         	movff	___fladd@a+3,___fladd@b+3
  5645  0038A0  C526  F51E         	movff	___fladd@grs,___fladd@a+3
  5646  0038A4                     l4440:
  5647  0038A4  0E00               	movlw	0
  5648  0038A6  6E26               	movwf	___fladd@grs^(0+1280),c
  5649  0038A8  5025               	movf	___fladd@bexp^(0+1280),w,c
  5650  0038AA  C524  F51F         	movff	___fladd@aexp,??___fladd
  5651  0038AE  6A20               	clrf	(??___fladd+1)^(0+1280),c
  5652  0038B0  5E1F               	subwf	??___fladd^(0+1280),f,c
  5653  0038B2  0E00               	movlw	0
  5654  0038B4  5A20               	subwfb	(??___fladd+1)^(0+1280),f,c
  5655  0038B6  BE20               	btfsc	(??___fladd+1)^(0+1280),7,c
  5656  0038B8  D02C               	goto	l802
  5657  0038BA  5020               	movf	(??___fladd+1)^(0+1280),w,c
  5658  0038BC  E104               	bnz	u5030
  5659  0038BE  0E1A               	movlw	26
  5660  0038C0  5C1F               	subwf	??___fladd^(0+1280),w,c
  5661  0038C2  A0D8               	btfss	status,0,c
  5662  0038C4  D026               	goto	l802
  5663  0038C6                     u5030:
  5664  0038C6  5017               	movf	___fladd@b^(0+1280),w,c
  5665  0038C8  1018               	iorwf	(___fladd@b+1)^(0+1280),w,c
  5666  0038CA  1019               	iorwf	(___fladd@b+2)^(0+1280),w,c
  5667  0038CC  101A               	iorwf	(___fladd@b+3)^(0+1280),w,c
  5668  0038CE  B4D8               	btfsc	status,2,c
  5669  0038D0  D002               	goto	u5040
  5670  0038D2  0E01               	movlw	1
  5671  0038D4  D001               	goto	u5050
  5672  0038D6                     u5040:
  5673  0038D6  0E00               	movlw	0
  5674  0038D8                     u5050:
  5675  0038D8  6E26               	movwf	___fladd@grs^(0+1280),c
  5676  0038DA  0E00               	movlw	0
  5677  0038DC  6E17               	movwf	___fladd@b^(0+1280),c
  5678  0038DE  0E00               	movlw	0
  5679  0038E0  6E18               	movwf	(___fladd@b+1)^(0+1280),c
  5680  0038E2  0E00               	movlw	0
  5681  0038E4  6E19               	movwf	(___fladd@b+2)^(0+1280),c
  5682  0038E6  0E00               	movlw	0
  5683  0038E8  6E1A               	movwf	(___fladd@b+3)^(0+1280),c
  5684  0038EA  C524  F525         	movff	___fladd@aexp,___fladd@bexp
  5685  0038EE  D015               	goto	u5080
  5686  0038F0                     l803:
  5687  0038F0  A026               	btfss	___fladd@grs^(0+1280),0,c
  5688  0038F2  D005               	goto	l4452
  5689  0038F4  90D8               	bcf	status,0,c
  5690  0038F6  3026               	rrcf	___fladd@grs^(0+1280),w,c
  5691  0038F8  0901               	iorlw	1
  5692  0038FA  6E26               	movwf	___fladd@grs^(0+1280),c
  5693  0038FC  D002               	goto	l4454
  5694  0038FE                     l4452:
  5695  0038FE  90D8               	bcf	status,0,c
  5696  003900  3226               	rrcf	___fladd@grs^(0+1280),f,c
  5697  003902                     l4454:
  5698  003902  B017               	btfsc	___fladd@b^(0+1280),0,c
  5699  003904  8E26               	bsf	___fladd@grs^(0+1280),7,c
  5700  003906  341A               	rlcf	(___fladd@b+3)^(0+1280),w,c
  5701  003908  321A               	rrcf	(___fladd@b+3)^(0+1280),f,c
  5702  00390A  3219               	rrcf	(___fladd@b+2)^(0+1280),f,c
  5703  00390C  3218               	rrcf	(___fladd@b+1)^(0+1280),f,c
  5704  00390E  3217               	rrcf	___fladd@b^(0+1280),f,c
  5705  003910  2A25               	incf	___fladd@bexp^(0+1280),f,c
  5706  003912                     l802:
  5707  003912  5024               	movf	___fladd@aexp^(0+1280),w,c
  5708  003914  5C25               	subwf	___fladd@bexp^(0+1280),w,c
  5709  003916  A0D8               	btfss	status,0,c
  5710  003918  D7EB               	goto	l803
  5711  00391A                     u5080:
  5712  00391A  BC23               	btfsc	___fladd@signs^(0+1280),6,c
  5713  00391C  D028               	goto	l4486
  5714  00391E  5025               	movf	___fladd@bexp^(0+1280),w,c
  5715  003920  A4D8               	btfss	status,2,c
  5716  003922  D009               	goto	l4468
  5717  003924  0E00               	movlw	0
  5718  003926  6E17               	movwf	?___fladd^(0+1280),c
  5719  003928  0E00               	movlw	0
  5720  00392A  6E18               	movwf	(?___fladd+1)^(0+1280),c
  5721  00392C  0E00               	movlw	0
  5722  00392E  6E19               	movwf	(?___fladd+2)^(0+1280),c
  5723  003930  0E00               	movlw	0
  5724  003932  6E1A               	movwf	(?___fladd+3)^(0+1280),c
  5725  003934  0012               	return	
  5726  003936                     l4468:
  5727  003936  501B               	movf	___fladd@a^(0+1280),w,c
  5728  003938  2617               	addwf	___fladd@b^(0+1280),f,c
  5729  00393A  501C               	movf	(___fladd@a+1)^(0+1280),w,c
  5730  00393C  2218               	addwfc	(___fladd@b+1)^(0+1280),f,c
  5731  00393E  501D               	movf	(___fladd@a+2)^(0+1280),w,c
  5732  003940  2219               	addwfc	(___fladd@b+2)^(0+1280),f,c
  5733  003942  501E               	movf	(___fladd@a+3)^(0+1280),w,c
  5734  003944  221A               	addwfc	(___fladd@b+3)^(0+1280),f,c
  5735  003946  A01A               	btfss	(___fladd@b+3)^(0+1280),0,c
  5736  003948  D071               	goto	u5210
  5737  00394A  A026               	btfss	___fladd@grs^(0+1280),0,c
  5738  00394C  D005               	goto	l4476
  5739  00394E  90D8               	bcf	status,0,c
  5740  003950  3026               	rrcf	___fladd@grs^(0+1280),w,c
  5741  003952  0901               	iorlw	1
  5742  003954  6E26               	movwf	___fladd@grs^(0+1280),c
  5743  003956  D002               	goto	l4478
  5744  003958                     l4476:
  5745  003958  90D8               	bcf	status,0,c
  5746  00395A  3226               	rrcf	___fladd@grs^(0+1280),f,c
  5747  00395C                     l4478:
  5748  00395C  B017               	btfsc	___fladd@b^(0+1280),0,c
  5749  00395E  8E26               	bsf	___fladd@grs^(0+1280),7,c
  5750  003960  341A               	rlcf	(___fladd@b+3)^(0+1280),w,c
  5751  003962  321A               	rrcf	(___fladd@b+3)^(0+1280),f,c
  5752  003964  3219               	rrcf	(___fladd@b+2)^(0+1280),f,c
  5753  003966  3218               	rrcf	(___fladd@b+1)^(0+1280),f,c
  5754  003968  3217               	rrcf	___fladd@b^(0+1280),f,c
  5755  00396A  2A25               	incf	___fladd@bexp^(0+1280),f,c
  5756  00396C  D05F               	goto	u5210
  5757  00396E                     l4486:
  5758  00396E  501B               	movf	___fladd@a^(0+1280),w,c
  5759  003970  5C17               	subwf	___fladd@b^(0+1280),w,c
  5760  003972  501C               	movf	(___fladd@a+1)^(0+1280),w,c
  5761  003974  5818               	subwfb	(___fladd@b+1)^(0+1280),w,c
  5762  003976  501D               	movf	(___fladd@a+2)^(0+1280),w,c
  5763  003978  5819               	subwfb	(___fladd@b+2)^(0+1280),w,c
  5764  00397A  501A               	movf	(___fladd@b+3)^(0+1280),w,c
  5765  00397C  0A80               	xorlw	128
  5766  00397E  6E1F               	movwf	??___fladd^(0+1280),c
  5767  003980  501E               	movf	(___fladd@a+3)^(0+1280),w,c
  5768  003982  0A80               	xorlw	128
  5769  003984  581F               	subwfb	??___fladd^(0+1280),w,c
  5770  003986  B0D8               	btfsc	status,0,c
  5771  003988  D025               	goto	l4496
  5772  00398A  5017               	movf	___fladd@b^(0+1280),w,c
  5773  00398C  5C1B               	subwf	___fladd@a^(0+1280),w,c
  5774  00398E  6E1F               	movwf	??___fladd^(0+1280),c
  5775  003990  5018               	movf	(___fladd@b+1)^(0+1280),w,c
  5776  003992  581C               	subwfb	(___fladd@a+1)^(0+1280),w,c
  5777  003994  6E20               	movwf	(??___fladd+1)^(0+1280),c
  5778  003996  5019               	movf	(___fladd@b+2)^(0+1280),w,c
  5779  003998  581D               	subwfb	(___fladd@a+2)^(0+1280),w,c
  5780  00399A  6E21               	movwf	(??___fladd+2)^(0+1280),c
  5781  00399C  501A               	movf	(___fladd@b+3)^(0+1280),w,c
  5782  00399E  581E               	subwfb	(___fladd@a+3)^(0+1280),w,c
  5783  0039A0  6E22               	movwf	(??___fladd+3)^(0+1280),c
  5784  0039A2  0EFF               	movlw	255
  5785  0039A4  241F               	addwf	??___fladd^(0+1280),w,c
  5786  0039A6  6E17               	movwf	___fladd@b^(0+1280),c
  5787  0039A8  0EFF               	movlw	255
  5788  0039AA  2020               	addwfc	(??___fladd+1)^(0+1280),w,c
  5789  0039AC  6E18               	movwf	(___fladd@b+1)^(0+1280),c
  5790  0039AE  0EFF               	movlw	255
  5791  0039B0  2021               	addwfc	(??___fladd+2)^(0+1280),w,c
  5792  0039B2  6E19               	movwf	(___fladd@b+2)^(0+1280),c
  5793  0039B4  0EFF               	movlw	255
  5794  0039B6  2022               	addwfc	(??___fladd+3)^(0+1280),w,c
  5795  0039B8  6E1A               	movwf	(___fladd@b+3)^(0+1280),c
  5796  0039BA  0E80               	movlw	128
  5797  0039BC  1A23               	xorwf	___fladd@signs^(0+1280),f,c
  5798  0039BE  6C26               	negf	___fladd@grs^(0+1280),c
  5799  0039C0  5026               	movf	___fladd@grs^(0+1280),w,c
  5800  0039C2  A4D8               	btfss	status,2,c
  5801  0039C4  D00F               	goto	l818
  5802  0039C6  0E01               	movlw	1
  5803  0039C8  2617               	addwf	___fladd@b^(0+1280),f,c
  5804  0039CA  0E00               	movlw	0
  5805  0039CC  2218               	addwfc	(___fladd@b+1)^(0+1280),f,c
  5806  0039CE  2219               	addwfc	(___fladd@b+2)^(0+1280),f,c
  5807  0039D0  221A               	addwfc	(___fladd@b+3)^(0+1280),f,c
  5808  0039D2  D008               	goto	l818
  5809  0039D4                     l4496:
  5810  0039D4  501B               	movf	___fladd@a^(0+1280),w,c
  5811  0039D6  5E17               	subwf	___fladd@b^(0+1280),f,c
  5812  0039D8  501C               	movf	(___fladd@a+1)^(0+1280),w,c
  5813  0039DA  5A18               	subwfb	(___fladd@b+1)^(0+1280),f,c
  5814  0039DC  501D               	movf	(___fladd@a+2)^(0+1280),w,c
  5815  0039DE  5A19               	subwfb	(___fladd@b+2)^(0+1280),f,c
  5816  0039E0  501E               	movf	(___fladd@a+3)^(0+1280),w,c
  5817  0039E2  5A1A               	subwfb	(___fladd@b+3)^(0+1280),f,c
  5818  0039E4                     l818:
  5819  0039E4  5017               	movf	___fladd@b^(0+1280),w,c
  5820  0039E6  1018               	iorwf	(___fladd@b+1)^(0+1280),w,c
  5821  0039E8  1019               	iorwf	(___fladd@b+2)^(0+1280),w,c
  5822  0039EA  101A               	iorwf	(___fladd@b+3)^(0+1280),w,c
  5823  0039EC  A4D8               	btfss	status,2,c
  5824  0039EE  D01C               	goto	l4520
  5825  0039F0  5026               	movf	___fladd@grs^(0+1280),w,c
  5826  0039F2  A4D8               	btfss	status,2,c
  5827  0039F4  D019               	goto	l4520
  5828  0039F6  0E00               	movlw	0
  5829  0039F8  6E17               	movwf	?___fladd^(0+1280),c
  5830  0039FA  0E00               	movlw	0
  5831  0039FC  6E18               	movwf	(?___fladd+1)^(0+1280),c
  5832  0039FE  0E00               	movlw	0
  5833  003A00  6E19               	movwf	(?___fladd+2)^(0+1280),c
  5834  003A02  0E00               	movlw	0
  5835  003A04  6E1A               	movwf	(?___fladd+3)^(0+1280),c
  5836  003A06  0012               	return	
  5837  003A08                     l4504:
  5838  003A08  90D8               	bcf	status,0,c
  5839  003A0A  3617               	rlcf	___fladd@b^(0+1280),f,c
  5840  003A0C  3618               	rlcf	(___fladd@b+1)^(0+1280),f,c
  5841  003A0E  3619               	rlcf	(___fladd@b+2)^(0+1280),f,c
  5842  003A10  361A               	rlcf	(___fladd@b+3)^(0+1280),f,c
  5843  003A12  BE26               	btfsc	___fladd@grs^(0+1280),7,c
  5844  003A14  8017               	bsf	___fladd@b^(0+1280),0,c
  5845  003A16  A026               	btfss	___fladd@grs^(0+1280),0,c
  5846  003A18  D002               	goto	l4514
  5847  003A1A  80D8               	bsf	status,0,c
  5848  003A1C  D001               	goto	L8
  5849  003A1E                     l4514:
  5850  003A1E  90D8               	bcf	status,0,c
  5851  003A20                     L8:
  5852  003A20  3626               	rlcf	___fladd@grs^(0+1280),f,c
  5853  003A22  5025               	movf	___fladd@bexp^(0+1280),w,c
  5854  003A24  A4D8               	btfss	status,2,c
  5855  003A26  0625               	decf	___fladd@bexp^(0+1280),f,c
  5856  003A28                     l4520:
  5857  003A28  AE19               	btfss	(___fladd@b+2)^(0+1280),7,c
  5858  003A2A  D7EE               	goto	l4504
  5859  003A2C                     u5210:
  5860  003A2C  0E00               	movlw	0
  5861  003A2E  6E24               	movwf	___fladd@aexp^(0+1280),c
  5862  003A30  AE26               	btfss	___fladd@grs^(0+1280),7,c
  5863  003A32  D00B               	goto	l827
  5864  003A34  C526  F51F         	movff	___fladd@grs,??___fladd
  5865  003A38  0E7F               	movlw	127
  5866  003A3A  161F               	andwf	??___fladd^(0+1280),f,c
  5867  003A3C  B4D8               	btfsc	status,2,c
  5868  003A3E  D003               	goto	l828
  5869  003A40                     u5230:
  5870  003A40  0E01               	movlw	1
  5871  003A42  6E24               	movwf	___fladd@aexp^(0+1280),c
  5872  003A44  D002               	goto	l827
  5873  003A46                     l828:
  5874  003A46  B017               	btfsc	___fladd@b^(0+1280),0,c
  5875  003A48  D7FB               	goto	u5230
  5876  003A4A                     l827:
  5877  003A4A  5024               	movf	___fladd@aexp^(0+1280),w,c
  5878  003A4C  B4D8               	btfsc	status,2,c
  5879  003A4E  D020               	goto	l4540
  5880  003A50  0E01               	movlw	1
  5881  003A52  2617               	addwf	___fladd@b^(0+1280),f,c
  5882  003A54  0E00               	movlw	0
  5883  003A56  2218               	addwfc	(___fladd@b+1)^(0+1280),f,c
  5884  003A58  2219               	addwfc	(___fladd@b+2)^(0+1280),f,c
  5885  003A5A  221A               	addwfc	(___fladd@b+3)^(0+1280),f,c
  5886  003A5C  A01A               	btfss	(___fladd@b+3)^(0+1280),0,c
  5887  003A5E  D018               	goto	l4540
  5888  003A60  C517  F51F         	movff	___fladd@b,??___fladd
  5889  003A64  C518  F520         	movff	___fladd@b+1,??___fladd+1
  5890  003A68  C519  F521         	movff	___fladd@b+2,??___fladd+2
  5891  003A6C  C51A  F522         	movff	___fladd@b+3,??___fladd+3
  5892  003A70  3422               	rlcf	(??___fladd+3)^(0+1280),w,c
  5893  003A72  3222               	rrcf	(??___fladd+3)^(0+1280),f,c
  5894  003A74  3221               	rrcf	(??___fladd+2)^(0+1280),f,c
  5895  003A76  3220               	rrcf	(??___fladd+1)^(0+1280),f,c
  5896  003A78  321F               	rrcf	??___fladd^(0+1280),f,c
  5897  003A7A  C51F  F517         	movff	??___fladd,___fladd@b
  5898  003A7E  C520  F518         	movff	??___fladd+1,___fladd@b+1
  5899  003A82  C521  F519         	movff	??___fladd+2,___fladd@b+2
  5900  003A86  C522  F51A         	movff	??___fladd+3,___fladd@b+3
  5901  003A8A  2825               	incf	___fladd@bexp^(0+1280),w,c
  5902  003A8C  A4D8               	btfss	status,2,c
  5903  003A8E  2A25               	incf	___fladd@bexp^(0+1280),f,c
  5904  003A90                     l4540:
  5905  003A90  2825               	incf	___fladd@bexp^(0+1280),w,c
  5906  003A92  B4D8               	btfsc	status,2,c
  5907  003A94  D003               	goto	u5290
  5908  003A96  5025               	movf	___fladd@bexp^(0+1280),w,c
  5909  003A98  A4D8               	btfss	status,2,c
  5910  003A9A  D00D               	goto	l4548
  5911  003A9C                     u5290:
  5912  003A9C  0E00               	movlw	0
  5913  003A9E  6E17               	movwf	___fladd@b^(0+1280),c
  5914  003AA0  0E00               	movlw	0
  5915  003AA2  6E18               	movwf	(___fladd@b+1)^(0+1280),c
  5916  003AA4  0E00               	movlw	0
  5917  003AA6  6E19               	movwf	(___fladd@b+2)^(0+1280),c
  5918  003AA8  0E00               	movlw	0
  5919  003AAA  6E1A               	movwf	(___fladd@b+3)^(0+1280),c
  5920  003AAC  5025               	movf	___fladd@bexp^(0+1280),w,c
  5921  003AAE  A4D8               	btfss	status,2,c
  5922  003AB0  D002               	goto	l4548
  5923  003AB2  0E00               	movlw	0
  5924  003AB4  6E23               	movwf	___fladd@signs^(0+1280),c
  5925  003AB6                     l4548:
  5926  003AB6  A025               	btfss	___fladd@bexp^(0+1280),0,c
  5927  003AB8  D002               	goto	l4552
  5928  003ABA  8E19               	bsf	(___fladd@b+2)^(0+1280),7,c
  5929  003ABC  D001               	goto	l4554
  5930  003ABE                     l4552:
  5931  003ABE  9E19               	bcf	(___fladd@b+2)^(0+1280),7,c
  5932  003AC0                     l4554:
  5933  003AC0  90D8               	bcf	status,0,c
  5934  003AC2  3025               	rrcf	___fladd@bexp^(0+1280),w,c
  5935  003AC4  6E1A               	movwf	(___fladd@b+3)^(0+1280),c
  5936  003AC6  BE23               	btfsc	___fladd@signs^(0+1280),7,c
  5937  003AC8  8E1A               	bsf	(___fladd@b+3)^(0+1280),7,c
  5938  003ACA  C517  F517         	movff	___fladd@b,?___fladd
  5939  003ACE  C518  F518         	movff	___fladd@b+1,?___fladd+1
  5940  003AD2  C519  F519         	movff	___fladd@b+2,?___fladd+2
  5941  003AD6  C51A  F51A         	movff	___fladd@b+3,?___fladd+3
  5942  003ADA  0012               	return		;funcret
  5943  003ADC                     __end_of___fladd:
  5944                           	callstack 0
  5945                           
  5946 ;; *************** function ___flneg *****************
  5947 ;; Defined at:
  5948 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  f1              4   22[COMRAM] unsigned char 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  4   22[COMRAM] unsigned char 
  5955 ;; Registers used:
  5956 ;;		wreg, status,2, status,0
  5957 ;; Tracked objects:
  5958 ;;		On entry : 3F/5
  5959 ;;		On exit  : 3F/5
  5960 ;;		Unchanged: 3E/0
  5961 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5966 ;;Total ram usage:        4 bytes
  5967 ;; Hardware stack levels used: 1
  5968 ;; Hardware stack levels required when called: 2
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_efgtoa
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text19
  5977  004DF4                     __ptext19:
  5978                           	callstack 0
  5979  004DF4                     ___flneg:
  5980                           	callstack 120
  5981                           
  5982                           ; BSR set to: 5
  5983                           
  5984                           ;incstack = 0
  5985  004DF4  5017               	movf	___flneg@f1^(0+1280),w,c
  5986  004DF6  1018               	iorwf	(___flneg@f1+1)^(0+1280),w,c
  5987  004DF8  1019               	iorwf	(___flneg@f1+2)^(0+1280),w,c
  5988  004DFA  101A               	iorwf	(___flneg@f1+3)^(0+1280),w,c
  5989  004DFC  B4D8               	btfsc	status,2,c
  5990  004DFE  D008               	goto	l4988
  5991                           
  5992                           ; BSR set to: 5
  5993  004E00  0E00               	movlw	0
  5994  004E02  1A17               	xorwf	___flneg@f1^(0+1280),f,c
  5995  004E04  0E00               	movlw	0
  5996  004E06  1A18               	xorwf	(___flneg@f1+1)^(0+1280),f,c
  5997  004E08  0E00               	movlw	0
  5998  004E0A  1A19               	xorwf	(___flneg@f1+2)^(0+1280),f,c
  5999  004E0C  0E80               	movlw	128
  6000  004E0E  1A1A               	xorwf	(___flneg@f1+3)^(0+1280),f,c
  6001  004E10                     l4988:
  6002                           
  6003                           ; BSR set to: 5
  6004  004E10  C517  F517         	movff	___flneg@f1,?___flneg
  6005  004E14  C518  F518         	movff	___flneg@f1+1,?___flneg+1
  6006  004E18  C519  F519         	movff	___flneg@f1+2,?___flneg+2
  6007  004E1C  C51A  F51A         	movff	___flneg@f1+3,?___flneg+3
  6008                           
  6009                           ; BSR set to: 5
  6010  004E20  0012               	return		;funcret
  6011  004E22                     __end_of___flneg:
  6012                           	callstack 0
  6013                           
  6014 ;; *************** function ___flmul *****************
  6015 ;; Defined at:
  6016 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  b               4   22[COMRAM] unsigned char 
  6019 ;;  a               4   26[COMRAM] unsigned char 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  prod            4   41[COMRAM] struct .
  6022 ;;  grs             4   37[COMRAM] unsigned long 
  6023 ;;  temp            2   45[COMRAM] struct .
  6024 ;;  bexp            1   36[COMRAM] unsigned char 
  6025 ;;  aexp            1   35[COMRAM] unsigned char 
  6026 ;;  sign            1   34[COMRAM] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  4   22[COMRAM] unsigned char 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0, prodl, prodh
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/5
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6036 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6037 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6038 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6039 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6040 ;;Total ram usage:       25 bytes
  6041 ;; Hardware stack levels used: 1
  6042 ;; Hardware stack levels required when called: 2
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_efgtoa
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text20
  6051  003480                     __ptext20:
  6052                           	callstack 0
  6053  003480                     ___flmul:
  6054                           	callstack 120
  6055                           
  6056                           ; BSR set to: 5
  6057                           ;incstack = 0
  6058  003480  501A               	movf	(___flmul@b+3)^(0+1280),w,c
  6059  003482  0B80               	andlw	128
  6060  003484  6E23               	movwf	___flmul@sign^(0+1280),c
  6061  003486  501A               	movf	(___flmul@b+3)^(0+1280),w,c
  6062  003488  241A               	addwf	(___flmul@b+3)^(0+1280),w,c
  6063  00348A  6E25               	movwf	___flmul@bexp^(0+1280),c
  6064  00348C  BE19               	btfsc	(___flmul@b+2)^(0+1280),7,c
  6065  00348E  8025               	bsf	___flmul@bexp^(0+1280),0,c
  6066  003490  5025               	movf	___flmul@bexp^(0+1280),w,c
  6067  003492  B4D8               	btfsc	status,2,c
  6068  003494  D00D               	goto	l4744
  6069  003496  2825               	incf	___flmul@bexp^(0+1280),w,c
  6070  003498  A4D8               	btfss	status,2,c
  6071  00349A  D008               	goto	l4742
  6072  00349C  0E00               	movlw	0
  6073  00349E  6E17               	movwf	___flmul@b^(0+1280),c
  6074  0034A0  0E00               	movlw	0
  6075  0034A2  6E18               	movwf	(___flmul@b+1)^(0+1280),c
  6076  0034A4  0E00               	movlw	0
  6077  0034A6  6E19               	movwf	(___flmul@b+2)^(0+1280),c
  6078  0034A8  0E00               	movlw	0
  6079  0034AA  6E1A               	movwf	(___flmul@b+3)^(0+1280),c
  6080  0034AC                     l4742:
  6081  0034AC  8E19               	bsf	(___flmul@b+2)^(0+1280),7,c
  6082  0034AE  D008               	goto	l4746
  6083  0034B0                     l4744:
  6084  0034B0  0E00               	movlw	0
  6085  0034B2  6E17               	movwf	___flmul@b^(0+1280),c
  6086  0034B4  0E00               	movlw	0
  6087  0034B6  6E18               	movwf	(___flmul@b+1)^(0+1280),c
  6088  0034B8  0E00               	movlw	0
  6089  0034BA  6E19               	movwf	(___flmul@b+2)^(0+1280),c
  6090  0034BC  0E00               	movlw	0
  6091  0034BE  6E1A               	movwf	(___flmul@b+3)^(0+1280),c
  6092  0034C0                     l4746:
  6093  0034C0  501E               	movf	(___flmul@a+3)^(0+1280),w,c
  6094  0034C2  0B80               	andlw	128
  6095  0034C4  1A23               	xorwf	___flmul@sign^(0+1280),f,c
  6096  0034C6  501E               	movf	(___flmul@a+3)^(0+1280),w,c
  6097  0034C8  241E               	addwf	(___flmul@a+3)^(0+1280),w,c
  6098  0034CA  6E24               	movwf	___flmul@aexp^(0+1280),c
  6099  0034CC  BE1D               	btfsc	(___flmul@a+2)^(0+1280),7,c
  6100  0034CE  8024               	bsf	___flmul@aexp^(0+1280),0,c
  6101  0034D0  5024               	movf	___flmul@aexp^(0+1280),w,c
  6102  0034D2  B4D8               	btfsc	status,2,c
  6103  0034D4  D00D               	goto	l4762
  6104  0034D6  2824               	incf	___flmul@aexp^(0+1280),w,c
  6105  0034D8  A4D8               	btfss	status,2,c
  6106  0034DA  D008               	goto	l4760
  6107  0034DC  0E00               	movlw	0
  6108  0034DE  6E1B               	movwf	___flmul@a^(0+1280),c
  6109  0034E0  0E00               	movlw	0
  6110  0034E2  6E1C               	movwf	(___flmul@a+1)^(0+1280),c
  6111  0034E4  0E00               	movlw	0
  6112  0034E6  6E1D               	movwf	(___flmul@a+2)^(0+1280),c
  6113  0034E8  0E00               	movlw	0
  6114  0034EA  6E1E               	movwf	(___flmul@a+3)^(0+1280),c
  6115  0034EC                     l4760:
  6116  0034EC  8E1D               	bsf	(___flmul@a+2)^(0+1280),7,c
  6117  0034EE  D008               	goto	l887
  6118  0034F0                     l4762:
  6119  0034F0  0E00               	movlw	0
  6120  0034F2  6E1B               	movwf	___flmul@a^(0+1280),c
  6121  0034F4  0E00               	movlw	0
  6122  0034F6  6E1C               	movwf	(___flmul@a+1)^(0+1280),c
  6123  0034F8  0E00               	movlw	0
  6124  0034FA  6E1D               	movwf	(___flmul@a+2)^(0+1280),c
  6125  0034FC  0E00               	movlw	0
  6126  0034FE  6E1E               	movwf	(___flmul@a+3)^(0+1280),c
  6127  003500                     l887:
  6128  003500  5024               	movf	___flmul@aexp^(0+1280),w,c
  6129  003502  B4D8               	btfsc	status,2,c
  6130  003504  D003               	goto	u5670
  6131  003506  5025               	movf	___flmul@bexp^(0+1280),w,c
  6132  003508  A4D8               	btfss	status,2,c
  6133  00350A  D009               	goto	l4770
  6134  00350C                     u5670:
  6135  00350C  0E00               	movlw	0
  6136  00350E  6E17               	movwf	?___flmul^(0+1280),c
  6137  003510  0E00               	movlw	0
  6138  003512  6E18               	movwf	(?___flmul+1)^(0+1280),c
  6139  003514  0E00               	movlw	0
  6140  003516  6E19               	movwf	(?___flmul+2)^(0+1280),c
  6141  003518  0E00               	movlw	0
  6142  00351A  6E1A               	movwf	(?___flmul+3)^(0+1280),c
  6143  00351C  0012               	return	
  6144  00351E                     l4770:
  6145  00351E  501D               	movf	(___flmul@a+2)^(0+1280),w,c
  6146  003520  0217               	mulwf	___flmul@b^(0+1280),c
  6147  003522  0061 F3CC  F52E    	movff	prodl,___flmul@temp
  6148  003528  0061 F3D0  F52F    	movff	prodh,___flmul@temp+1
  6149  00352E  502E               	movf	___flmul@temp^(0+1280),w,c
  6150  003530  6E26               	movwf	___flmul@grs^(0+1280),c
  6151  003532  6A27               	clrf	(___flmul@grs+1)^(0+1280),c
  6152  003534  6A28               	clrf	(___flmul@grs+2)^(0+1280),c
  6153  003536  6A29               	clrf	(___flmul@grs+3)^(0+1280),c
  6154  003538  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6155  00353A  6E2A               	movwf	___flmul@prod^(0+1280),c
  6156  00353C  6A2B               	clrf	(___flmul@prod+1)^(0+1280),c
  6157  00353E  6A2C               	clrf	(___flmul@prod+2)^(0+1280),c
  6158  003540  6A2D               	clrf	(___flmul@prod+3)^(0+1280),c
  6159  003542  501C               	movf	(___flmul@a+1)^(0+1280),w,c
  6160  003544  0218               	mulwf	(___flmul@b+1)^(0+1280),c
  6161  003546  0061 F3CC  F52E    	movff	prodl,___flmul@temp
  6162  00354C  0061 F3D0  F52F    	movff	prodh,___flmul@temp+1
  6163  003552  502E               	movf	___flmul@temp^(0+1280),w,c
  6164  003554  2626               	addwf	___flmul@grs^(0+1280),f,c
  6165  003556  0E00               	movlw	0
  6166  003558  2227               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  6167  00355A  2228               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  6168  00355C  2229               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  6169  00355E  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6170  003560  262A               	addwf	___flmul@prod^(0+1280),f,c
  6171  003562  0E00               	movlw	0
  6172  003564  222B               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6173  003566  222C               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6174  003568  222D               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6175  00356A  501B               	movf	___flmul@a^(0+1280),w,c
  6176  00356C  0219               	mulwf	(___flmul@b+2)^(0+1280),c
  6177  00356E  0061 F3CC  F52E    	movff	prodl,___flmul@temp
  6178  003574  0061 F3D0  F52F    	movff	prodh,___flmul@temp+1
  6179  00357A  502E               	movf	___flmul@temp^(0+1280),w,c
  6180  00357C  2626               	addwf	___flmul@grs^(0+1280),f,c
  6181  00357E  0E00               	movlw	0
  6182  003580  2227               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  6183  003582  2228               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  6184  003584  2229               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  6185  003586  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6186  003588  262A               	addwf	___flmul@prod^(0+1280),f,c
  6187  00358A  0E00               	movlw	0
  6188  00358C  222B               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6189  00358E  222C               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6190  003590  222D               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6191  003592  C528  F529         	movff	___flmul@grs+2,___flmul@grs+3
  6192  003596  C527  F528         	movff	___flmul@grs+1,___flmul@grs+2
  6193  00359A  C526  F527         	movff	___flmul@grs,___flmul@grs+1
  6194  00359E  6A26               	clrf	___flmul@grs^(0+1280),c
  6195  0035A0  501B               	movf	___flmul@a^(0+1280),w,c
  6196  0035A2  0218               	mulwf	(___flmul@b+1)^(0+1280),c
  6197  0035A4  0061 F3CC  F52E    	movff	prodl,___flmul@temp
  6198  0035AA  0061 F3D0  F52F    	movff	prodh,___flmul@temp+1
  6199  0035B0  502E               	movf	___flmul@temp^(0+1280),w,c
  6200  0035B2  2626               	addwf	___flmul@grs^(0+1280),f,c
  6201  0035B4  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6202  0035B6  2227               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  6203  0035B8  0E00               	movlw	0
  6204  0035BA  2228               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  6205  0035BC  0E00               	movlw	0
  6206  0035BE  2229               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  6207  0035C0  501C               	movf	(___flmul@a+1)^(0+1280),w,c
  6208  0035C2  0217               	mulwf	___flmul@b^(0+1280),c
  6209  0035C4  0061 F3CC  F52E    	movff	prodl,___flmul@temp
  6210  0035CA  0061 F3D0  F52F    	movff	prodh,___flmul@temp+1
  6211  0035D0  502E               	movf	___flmul@temp^(0+1280),w,c
  6212  0035D2  2626               	addwf	___flmul@grs^(0+1280),f,c
  6213  0035D4  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6214  0035D6  2227               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  6215  0035D8  0E00               	movlw	0
  6216  0035DA  2228               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  6217  0035DC  0E00               	movlw	0
  6218  0035DE  2229               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  6219  0035E0  C528  F529         	movff	___flmul@grs+2,___flmul@grs+3
  6220  0035E4  C527  F528         	movff	___flmul@grs+1,___flmul@grs+2
  6221  0035E8  C526  F527         	movff	___flmul@grs,___flmul@grs+1
  6222  0035EC  6A26               	clrf	___flmul@grs^(0+1280),c
  6223  0035EE  501B               	movf	___flmul@a^(0+1280),w,c
  6224  0035F0  0217               	mulwf	___flmul@b^(0+1280),c
  6225  0035F2  0061 F3CC  F52E    	movff	prodl,___flmul@temp
  6226  0035F8  0061 F3D0  F52F    	movff	prodh,___flmul@temp+1
  6227  0035FE  502E               	movf	___flmul@temp^(0+1280),w,c
  6228  003600  2626               	addwf	___flmul@grs^(0+1280),f,c
  6229  003602  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6230  003604  2227               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  6231  003606  0E00               	movlw	0
  6232  003608  2228               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  6233  00360A  0E00               	movlw	0
  6234  00360C  2229               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  6235  00360E  501D               	movf	(___flmul@a+2)^(0+1280),w,c
  6236  003610  0218               	mulwf	(___flmul@b+1)^(0+1280),c
  6237  003612  0061 F3CC  F52E    	movff	prodl,___flmul@temp
  6238  003618  0061 F3D0  F52F    	movff	prodh,___flmul@temp+1
  6239  00361E  502E               	movf	___flmul@temp^(0+1280),w,c
  6240  003620  262A               	addwf	___flmul@prod^(0+1280),f,c
  6241  003622  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6242  003624  222B               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6243  003626  0E00               	movlw	0
  6244  003628  222C               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6245  00362A  0E00               	movlw	0
  6246  00362C  222D               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6247  00362E  501C               	movf	(___flmul@a+1)^(0+1280),w,c
  6248  003630  0219               	mulwf	(___flmul@b+2)^(0+1280),c
  6249  003632  0061 F3CC  F52E    	movff	prodl,___flmul@temp
  6250  003638  0061 F3D0  F52F    	movff	prodh,___flmul@temp+1
  6251  00363E  502E               	movf	___flmul@temp^(0+1280),w,c
  6252  003640  262A               	addwf	___flmul@prod^(0+1280),f,c
  6253  003642  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6254  003644  222B               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6255  003646  0E00               	movlw	0
  6256  003648  222C               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6257  00364A  0E00               	movlw	0
  6258  00364C  222D               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6259  00364E  501D               	movf	(___flmul@a+2)^(0+1280),w,c
  6260  003650  0219               	mulwf	(___flmul@b+2)^(0+1280),c
  6261  003652  0061 F3CC  F52E    	movff	prodl,___flmul@temp
  6262  003658  0061 F3D0  F52F    	movff	prodh,___flmul@temp+1
  6263  00365E  502E               	movf	___flmul@temp^(0+1280),w,c
  6264  003660  6E1F               	movwf	??___flmul^(0+1280),c
  6265  003662  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6266  003664  6E20               	movwf	(??___flmul+1)^(0+1280),c
  6267  003666  6A21               	clrf	(??___flmul+2)^(0+1280),c
  6268  003668  6A22               	clrf	(??___flmul+3)^(0+1280),c
  6269  00366A  C521  F522         	movff	??___flmul+2,??___flmul+3
  6270  00366E  C520  F521         	movff	??___flmul+1,??___flmul+2
  6271  003672  C51F  F520         	movff	??___flmul,??___flmul+1
  6272  003676  6A1F               	clrf	??___flmul^(0+1280),c
  6273  003678  501F               	movf	??___flmul^(0+1280),w,c
  6274  00367A  262A               	addwf	___flmul@prod^(0+1280),f,c
  6275  00367C  5020               	movf	(??___flmul+1)^(0+1280),w,c
  6276  00367E  222B               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6277  003680  5021               	movf	(??___flmul+2)^(0+1280),w,c
  6278  003682  222C               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6279  003684  5022               	movf	(??___flmul+3)^(0+1280),w,c
  6280  003686  222D               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6281  003688  5029               	movf	(___flmul@grs+3)^(0+1280),w,c
  6282  00368A  262A               	addwf	___flmul@prod^(0+1280),f,c
  6283  00368C  0E00               	movlw	0
  6284  00368E  222B               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6285  003690  222C               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6286  003692  222D               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6287  003694  C528  F529         	movff	___flmul@grs+2,___flmul@grs+3
  6288  003698  C527  F528         	movff	___flmul@grs+1,___flmul@grs+2
  6289  00369C  C526  F527         	movff	___flmul@grs,___flmul@grs+1
  6290  0036A0  6A26               	clrf	___flmul@grs^(0+1280),c
  6291  0036A2  5024               	movf	___flmul@aexp^(0+1280),w,c
  6292  0036A4  C525  F51F         	movff	___flmul@bexp,??___flmul
  6293  0036A8  6A20               	clrf	(??___flmul+1)^(0+1280),c
  6294  0036AA  261F               	addwf	??___flmul^(0+1280),f,c
  6295  0036AC  0E00               	movlw	0
  6296  0036AE  2220               	addwfc	(??___flmul+1)^(0+1280),f,c
  6297  0036B0  0E82               	movlw	130
  6298  0036B2  241F               	addwf	??___flmul^(0+1280),w,c
  6299  0036B4  6E2E               	movwf	___flmul@temp^(0+1280),c
  6300  0036B6  0EFF               	movlw	255
  6301  0036B8  2020               	addwfc	(??___flmul+1)^(0+1280),w,c
  6302  0036BA  6E2F               	movwf	(___flmul@temp+1)^(0+1280),c
  6303  0036BC  D00F               	goto	l4818
  6304  0036BE                     l4812:
  6305  0036BE  90D8               	bcf	status,0,c
  6306  0036C0  362A               	rlcf	___flmul@prod^(0+1280),f,c
  6307  0036C2  362B               	rlcf	(___flmul@prod+1)^(0+1280),f,c
  6308  0036C4  362C               	rlcf	(___flmul@prod+2)^(0+1280),f,c
  6309  0036C6  362D               	rlcf	(___flmul@prod+3)^(0+1280),f,c
  6310  0036C8  BE29               	btfsc	(___flmul@grs+3)^(0+1280),7,c
  6311  0036CA  802A               	bsf	___flmul@prod^(0+1280),0,c
  6312  0036CC  90D8               	bcf	status,0,c
  6313  0036CE  3626               	rlcf	___flmul@grs^(0+1280),f,c
  6314  0036D0  3627               	rlcf	(___flmul@grs+1)^(0+1280),f,c
  6315  0036D2  3628               	rlcf	(___flmul@grs+2)^(0+1280),f,c
  6316  0036D4  3629               	rlcf	(___flmul@grs+3)^(0+1280),f,c
  6317  0036D6  062E               	decf	___flmul@temp^(0+1280),f,c
  6318  0036D8  A0D8               	btfss	status,0,c
  6319  0036DA  062F               	decf	(___flmul@temp+1)^(0+1280),f,c
  6320  0036DC                     l4818:
  6321  0036DC  AE2C               	btfss	(___flmul@prod+2)^(0+1280),7,c
  6322  0036DE  D7EF               	goto	l4812
  6323  0036E0  0E00               	movlw	0
  6324  0036E2  6E24               	movwf	___flmul@aexp^(0+1280),c
  6325  0036E4  AE29               	btfss	(___flmul@grs+3)^(0+1280),7,c
  6326  0036E6  D017               	goto	l896
  6327  0036E8  0EFF               	movlw	255
  6328  0036EA  1426               	andwf	___flmul@grs^(0+1280),w,c
  6329  0036EC  6E1F               	movwf	??___flmul^(0+1280),c
  6330  0036EE  0EFF               	movlw	255
  6331  0036F0  1427               	andwf	(___flmul@grs+1)^(0+1280),w,c
  6332  0036F2  6E20               	movwf	(??___flmul+1)^(0+1280),c
  6333  0036F4  0EFF               	movlw	255
  6334  0036F6  1428               	andwf	(___flmul@grs+2)^(0+1280),w,c
  6335  0036F8  6E21               	movwf	(??___flmul+2)^(0+1280),c
  6336  0036FA  0E7F               	movlw	127
  6337  0036FC  1429               	andwf	(___flmul@grs+3)^(0+1280),w,c
  6338  0036FE  6E22               	movwf	(??___flmul+3)^(0+1280),c
  6339  003700  501F               	movf	??___flmul^(0+1280),w,c
  6340  003702  1020               	iorwf	(??___flmul+1)^(0+1280),w,c
  6341  003704  1021               	iorwf	(??___flmul+2)^(0+1280),w,c
  6342  003706  1022               	iorwf	(??___flmul+3)^(0+1280),w,c
  6343  003708  B4D8               	btfsc	status,2,c
  6344  00370A  D003               	goto	l897
  6345  00370C                     u5710:
  6346  00370C  0E01               	movlw	1
  6347  00370E  6E24               	movwf	___flmul@aexp^(0+1280),c
  6348  003710  D002               	goto	l896
  6349  003712                     l897:
  6350  003712  B02A               	btfsc	___flmul@prod^(0+1280),0,c
  6351  003714  D7FB               	goto	u5710
  6352  003716                     l896:
  6353  003716  5024               	movf	___flmul@aexp^(0+1280),w,c
  6354  003718  B4D8               	btfsc	status,2,c
  6355  00371A  D01F               	goto	l4838
  6356  00371C  0E01               	movlw	1
  6357  00371E  262A               	addwf	___flmul@prod^(0+1280),f,c
  6358  003720  0E00               	movlw	0
  6359  003722  222B               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6360  003724  222C               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6361  003726  222D               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6362  003728  A02D               	btfss	(___flmul@prod+3)^(0+1280),0,c
  6363  00372A  D017               	goto	l4838
  6364  00372C  C52A  F51F         	movff	___flmul@prod,??___flmul
  6365  003730  C52B  F520         	movff	___flmul@prod+1,??___flmul+1
  6366  003734  C52C  F521         	movff	___flmul@prod+2,??___flmul+2
  6367  003738  C52D  F522         	movff	___flmul@prod+3,??___flmul+3
  6368  00373C  3422               	rlcf	(??___flmul+3)^(0+1280),w,c
  6369  00373E  3222               	rrcf	(??___flmul+3)^(0+1280),f,c
  6370  003740  3221               	rrcf	(??___flmul+2)^(0+1280),f,c
  6371  003742  3220               	rrcf	(??___flmul+1)^(0+1280),f,c
  6372  003744  321F               	rrcf	??___flmul^(0+1280),f,c
  6373  003746  C51F  F52A         	movff	??___flmul,___flmul@prod
  6374  00374A  C520  F52B         	movff	??___flmul+1,___flmul@prod+1
  6375  00374E  C521  F52C         	movff	??___flmul+2,___flmul@prod+2
  6376  003752  C522  F52D         	movff	??___flmul+3,___flmul@prod+3
  6377  003756  4A2E               	infsnz	___flmul@temp^(0+1280),f,c
  6378  003758  2A2F               	incf	(___flmul@temp+1)^(0+1280),f,c
  6379  00375A                     l4838:
  6380  00375A  BE2F               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  6381  00375C  D00D               	goto	l4842
  6382  00375E  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6383  003760  E103               	bnz	u5750
  6384  003762  282E               	incf	___flmul@temp^(0+1280),w,c
  6385  003764  A0D8               	btfss	status,0,c
  6386  003766  D008               	goto	l4842
  6387  003768                     u5750:
  6388  003768  0E00               	movlw	0
  6389  00376A  6E2A               	movwf	___flmul@prod^(0+1280),c
  6390  00376C  0E00               	movlw	0
  6391  00376E  6E2B               	movwf	(___flmul@prod+1)^(0+1280),c
  6392  003770  0E80               	movlw	128
  6393  003772  6E2C               	movwf	(___flmul@prod+2)^(0+1280),c
  6394  003774  0E7F               	movlw	127
  6395  003776  D020               	goto	L9
  6396  003778                     l4842:
  6397  003778  BE2F               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  6398  00377A  D005               	goto	u5760
  6399  00377C  502F               	movf	(___flmul@temp+1)^(0+1280),w,c
  6400  00377E  E10E               	bnz	l904
  6401  003780  042E               	decf	___flmul@temp^(0+1280),w,c
  6402  003782  B0D8               	btfsc	status,0,c
  6403  003784  D00B               	goto	l904
  6404  003786                     u5760:
  6405  003786  0E00               	movlw	0
  6406  003788  6E2A               	movwf	___flmul@prod^(0+1280),c
  6407  00378A  0E00               	movlw	0
  6408  00378C  6E2B               	movwf	(___flmul@prod+1)^(0+1280),c
  6409  00378E  0E00               	movlw	0
  6410  003790  6E2C               	movwf	(___flmul@prod+2)^(0+1280),c
  6411  003792  0E00               	movlw	0
  6412  003794  6E2D               	movwf	(___flmul@prod+3)^(0+1280),c
  6413  003796  0E00               	movlw	0
  6414  003798  6E23               	movwf	___flmul@sign^(0+1280),c
  6415  00379A  D00F               	goto	l4854
  6416  00379C                     l904:
  6417  00379C  C52E  F525         	movff	___flmul@temp,___flmul@bexp
  6418  0037A0  0EFF               	movlw	255
  6419  0037A2  162A               	andwf	___flmul@prod^(0+1280),f,c
  6420  0037A4  0EFF               	movlw	255
  6421  0037A6  162B               	andwf	(___flmul@prod+1)^(0+1280),f,c
  6422  0037A8  0E7F               	movlw	127
  6423  0037AA  162C               	andwf	(___flmul@prod+2)^(0+1280),f,c
  6424  0037AC  0E00               	movlw	0
  6425  0037AE  162D               	andwf	(___flmul@prod+3)^(0+1280),f,c
  6426  0037B0  B025               	btfsc	___flmul@bexp^(0+1280),0,c
  6427  0037B2  8E2C               	bsf	(___flmul@prod+2)^(0+1280),7,c
  6428  0037B4  90D8               	bcf	status,0,c
  6429  0037B6  3025               	rrcf	___flmul@bexp^(0+1280),w,c
  6430  0037B8                     L9:
  6431  0037B8  6E2D               	movwf	(___flmul@prod+3)^(0+1280),c
  6432  0037BA                     l4854:
  6433  0037BA  5023               	movf	___flmul@sign^(0+1280),w,c
  6434  0037BC  122D               	iorwf	(___flmul@prod+3)^(0+1280),f,c
  6435  0037BE  C52A  F517         	movff	___flmul@prod,?___flmul
  6436  0037C2  C52B  F518         	movff	___flmul@prod+1,?___flmul+1
  6437  0037C6  C52C  F519         	movff	___flmul@prod+2,?___flmul+2
  6438  0037CA  C52D  F51A         	movff	___flmul@prod+3,?___flmul+3
  6439  0037CE  0012               	return		;funcret
  6440  0037D0                     __end_of___flmul:
  6441                           	callstack 0
  6442                           
  6443 ;; *************** function ___flge *****************
  6444 ;; Defined at:
  6445 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  ff1             4   47[COMRAM] unsigned char 
  6448 ;;  ff2             4   51[COMRAM] unsigned char 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;		None
  6451 ;; Return value:  Size  Location     Type
  6452 ;;		None               void
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/5
  6457 ;;		On exit  : 3F/5
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6460 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6462 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6463 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6464 ;;Total ram usage:       12 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 2
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_efgtoa
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text21
  6475  0043F4                     __ptext21:
  6476                           	callstack 0
  6477  0043F4                     ___flge:
  6478                           	callstack 120
  6479                           
  6480                           ;incstack = 0
  6481  0043F4  0E00               	movlw	0
  6482  0043F6  1430               	andwf	___flge@ff1^(0+1280),w,c
  6483  0043F8  0105               	movlb	5	; () banked
  6484  0043FA  6F60               	movwf	??___flge& (0+255),b
  6485  0043FC  0E00               	movlw	0
  6486  0043FE  1431               	andwf	(___flge@ff1+1)^(0+1280),w,c
  6487  004400  6F61               	movwf	(??___flge+1)& (0+255),b
  6488  004402  0E80               	movlw	128
  6489  004404  1432               	andwf	(___flge@ff1+2)^(0+1280),w,c
  6490  004406  6F62               	movwf	(??___flge+2)& (0+255),b
  6491  004408  0E7F               	movlw	127
  6492  00440A  1433               	andwf	(___flge@ff1+3)^(0+1280),w,c
  6493  00440C  6F63               	movwf	(??___flge+3)& (0+255),b
  6494  00440E  5160               	movf	??___flge& (0+255),w,b
  6495  004410  1161               	iorwf	(??___flge+1)& (0+255),w,b
  6496  004412  1162               	iorwf	(??___flge+2)& (0+255),w,b
  6497  004414  1163               	iorwf	(??___flge+3)& (0+255),w,b
  6498  004416  A4D8               	btfss	status,2,c
  6499  004418  D008               	goto	l4966
  6500                           
  6501                           ; BSR set to: 5
  6502  00441A  0E00               	movlw	0
  6503  00441C  6E30               	movwf	___flge@ff1^(0+1280),c
  6504  00441E  0E00               	movlw	0
  6505  004420  6E31               	movwf	(___flge@ff1+1)^(0+1280),c
  6506  004422  0E00               	movlw	0
  6507  004424  6E32               	movwf	(___flge@ff1+2)^(0+1280),c
  6508  004426  0E00               	movlw	0
  6509  004428  6E33               	movwf	(___flge@ff1+3)^(0+1280),c
  6510  00442A                     l4966:
  6511                           
  6512                           ; BSR set to: 5
  6513  00442A  0E00               	movlw	0
  6514  00442C  1434               	andwf	___flge@ff2^(0+1280),w,c
  6515  00442E  6F60               	movwf	??___flge& (0+255),b
  6516  004430  0E00               	movlw	0
  6517  004432  1435               	andwf	(___flge@ff2+1)^(0+1280),w,c
  6518  004434  6F61               	movwf	(??___flge+1)& (0+255),b
  6519  004436  0E80               	movlw	128
  6520  004438  1436               	andwf	(___flge@ff2+2)^(0+1280),w,c
  6521  00443A  6F62               	movwf	(??___flge+2)& (0+255),b
  6522  00443C  0E7F               	movlw	127
  6523  00443E  1437               	andwf	(___flge@ff2+3)^(0+1280),w,c
  6524  004440  6F63               	movwf	(??___flge+3)& (0+255),b
  6525  004442  5160               	movf	??___flge& (0+255),w,b
  6526  004444  1161               	iorwf	(??___flge+1)& (0+255),w,b
  6527  004446  1162               	iorwf	(??___flge+2)& (0+255),w,b
  6528  004448  1163               	iorwf	(??___flge+3)& (0+255),w,b
  6529  00444A  A4D8               	btfss	status,2,c
  6530  00444C  D008               	goto	l4970
  6531                           
  6532                           ; BSR set to: 5
  6533  00444E  0E00               	movlw	0
  6534  004450  6E34               	movwf	___flge@ff2^(0+1280),c
  6535  004452  0E00               	movlw	0
  6536  004454  6E35               	movwf	(___flge@ff2+1)^(0+1280),c
  6537  004456  0E00               	movlw	0
  6538  004458  6E36               	movwf	(___flge@ff2+2)^(0+1280),c
  6539  00445A  0E00               	movlw	0
  6540  00445C  6E37               	movwf	(___flge@ff2+3)^(0+1280),c
  6541  00445E                     l4970:
  6542                           
  6543                           ; BSR set to: 5
  6544  00445E  AE33               	btfss	(___flge@ff1+3)^(0+1280),7,c
  6545  004460  D009               	goto	l4974
  6546                           
  6547                           ; BSR set to: 5
  6548  004462  6C30               	negf	___flge@ff1^(0+1280),c
  6549  004464  1E31               	comf	(___flge@ff1+1)^(0+1280),f,c
  6550  004466  B0D8               	btfsc	status,0,c
  6551  004468  2A31               	incf	(___flge@ff1+1)^(0+1280),f,c
  6552  00446A  1E32               	comf	(___flge@ff1+2)^(0+1280),f,c
  6553  00446C  B0D8               	btfsc	status,0,c
  6554  00446E  2A32               	incf	(___flge@ff1+2)^(0+1280),f,c
  6555  004470  0E80               	movlw	128
  6556  004472  5633               	subfwb	(___flge@ff1+3)^(0+1280),f,c
  6557  004474                     l4974:
  6558                           
  6559                           ; BSR set to: 5
  6560  004474  AE37               	btfss	(___flge@ff2+3)^(0+1280),7,c
  6561  004476  D009               	goto	l538
  6562                           
  6563                           ; BSR set to: 5
  6564  004478  6C34               	negf	___flge@ff2^(0+1280),c
  6565  00447A  1E35               	comf	(___flge@ff2+1)^(0+1280),f,c
  6566  00447C  B0D8               	btfsc	status,0,c
  6567  00447E  2A35               	incf	(___flge@ff2+1)^(0+1280),f,c
  6568  004480  1E36               	comf	(___flge@ff2+2)^(0+1280),f,c
  6569  004482  B0D8               	btfsc	status,0,c
  6570  004484  2A36               	incf	(___flge@ff2+2)^(0+1280),f,c
  6571  004486  0E80               	movlw	128
  6572  004488  5637               	subfwb	(___flge@ff2+3)^(0+1280),f,c
  6573  00448A                     l538:
  6574                           
  6575                           ; BSR set to: 5
  6576  00448A  0E00               	movlw	0
  6577  00448C  1A30               	xorwf	___flge@ff1^(0+1280),f,c
  6578  00448E  0E00               	movlw	0
  6579  004490  1A31               	xorwf	(___flge@ff1+1)^(0+1280),f,c
  6580  004492  0E00               	movlw	0
  6581  004494  1A32               	xorwf	(___flge@ff1+2)^(0+1280),f,c
  6582  004496  0E80               	movlw	128
  6583  004498  1A33               	xorwf	(___flge@ff1+3)^(0+1280),f,c
  6584  00449A  0E00               	movlw	0
  6585  00449C  1A34               	xorwf	___flge@ff2^(0+1280),f,c
  6586  00449E  0E00               	movlw	0
  6587  0044A0  1A35               	xorwf	(___flge@ff2+1)^(0+1280),f,c
  6588  0044A2  0E00               	movlw	0
  6589  0044A4  1A36               	xorwf	(___flge@ff2+2)^(0+1280),f,c
  6590  0044A6  0E80               	movlw	128
  6591  0044A8  1A37               	xorwf	(___flge@ff2+3)^(0+1280),f,c
  6592  0044AA  5034               	movf	___flge@ff2^(0+1280),w,c
  6593  0044AC  5C30               	subwf	___flge@ff1^(0+1280),w,c
  6594  0044AE  5035               	movf	(___flge@ff2+1)^(0+1280),w,c
  6595  0044B0  5831               	subwfb	(___flge@ff1+1)^(0+1280),w,c
  6596  0044B2  5036               	movf	(___flge@ff2+2)^(0+1280),w,c
  6597  0044B4  5832               	subwfb	(___flge@ff1+2)^(0+1280),w,c
  6598  0044B6  5037               	movf	(___flge@ff2+3)^(0+1280),w,c
  6599  0044B8  5833               	subwfb	(___flge@ff1+3)^(0+1280),w,c
  6600  0044BA  B0D8               	btfsc	status,0,c
  6601  0044BC  D002               	goto	l4980
  6602                           
  6603                           ; BSR set to: 5
  6604  0044BE  90D8               	bcf	status,0,c
  6605  0044C0  0012               	return	
  6606  0044C2                     l4980:
  6607                           
  6608                           ; BSR set to: 5
  6609  0044C2  80D8               	bsf	status,0,c
  6610                           
  6611                           ; BSR set to: 5
  6612  0044C4  0012               	return		;funcret
  6613  0044C6                     __end_of___flge:
  6614                           	callstack 0
  6615                           
  6616 ;; *************** function ___fleq *****************
  6617 ;; Defined at:
  6618 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  ff1             4   22[COMRAM] unsigned char 
  6621 ;;  ff2             4   26[COMRAM] unsigned char 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;		None               void
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0
  6628 ;; Tracked objects:
  6629 ;;		On entry : 3F/5
  6630 ;;		On exit  : 3F/5
  6631 ;;		Unchanged: 3E/0
  6632 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6633 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6636 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6637 ;;Total ram usage:       12 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 2
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_efgtoa
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text22
  6648  004906                     __ptext22:
  6649                           	callstack 0
  6650  004906                     ___fleq:
  6651                           	callstack 120
  6652                           
  6653                           ; BSR set to: 5
  6654                           
  6655                           ; BSR set to: 5
  6656                           ;incstack = 0
  6657  004906  0E00               	movlw	0
  6658  004908  1417               	andwf	___fleq@ff1^(0+1280),w,c
  6659  00490A  6E1F               	movwf	??___fleq^(0+1280),c
  6660  00490C  0E00               	movlw	0
  6661  00490E  1418               	andwf	(___fleq@ff1+1)^(0+1280),w,c
  6662  004910  6E20               	movwf	(??___fleq+1)^(0+1280),c
  6663  004912  0E80               	movlw	128
  6664  004914  1419               	andwf	(___fleq@ff1+2)^(0+1280),w,c
  6665  004916  6E21               	movwf	(??___fleq+2)^(0+1280),c
  6666  004918  0E7F               	movlw	127
  6667  00491A  141A               	andwf	(___fleq@ff1+3)^(0+1280),w,c
  6668  00491C  6E22               	movwf	(??___fleq+3)^(0+1280),c
  6669  00491E  501F               	movf	??___fleq^(0+1280),w,c
  6670  004920  1020               	iorwf	(??___fleq+1)^(0+1280),w,c
  6671  004922  1021               	iorwf	(??___fleq+2)^(0+1280),w,c
  6672  004924  1022               	iorwf	(??___fleq+3)^(0+1280),w,c
  6673  004926  A4D8               	btfss	status,2,c
  6674  004928  D008               	goto	l4950
  6675                           
  6676                           ; BSR set to: 5
  6677  00492A  0E00               	movlw	0
  6678  00492C  6E17               	movwf	___fleq@ff1^(0+1280),c
  6679  00492E  0E00               	movlw	0
  6680  004930  6E18               	movwf	(___fleq@ff1+1)^(0+1280),c
  6681  004932  0E00               	movlw	0
  6682  004934  6E19               	movwf	(___fleq@ff1+2)^(0+1280),c
  6683  004936  0E00               	movlw	0
  6684  004938  6E1A               	movwf	(___fleq@ff1+3)^(0+1280),c
  6685  00493A                     l4950:
  6686                           
  6687                           ; BSR set to: 5
  6688  00493A  0E00               	movlw	0
  6689  00493C  141B               	andwf	___fleq@ff2^(0+1280),w,c
  6690  00493E  6E1F               	movwf	??___fleq^(0+1280),c
  6691  004940  0E00               	movlw	0
  6692  004942  141C               	andwf	(___fleq@ff2+1)^(0+1280),w,c
  6693  004944  6E20               	movwf	(??___fleq+1)^(0+1280),c
  6694  004946  0E80               	movlw	128
  6695  004948  141D               	andwf	(___fleq@ff2+2)^(0+1280),w,c
  6696  00494A  6E21               	movwf	(??___fleq+2)^(0+1280),c
  6697  00494C  0E7F               	movlw	127
  6698  00494E  141E               	andwf	(___fleq@ff2+3)^(0+1280),w,c
  6699  004950  6E22               	movwf	(??___fleq+3)^(0+1280),c
  6700  004952  501F               	movf	??___fleq^(0+1280),w,c
  6701  004954  1020               	iorwf	(??___fleq+1)^(0+1280),w,c
  6702  004956  1021               	iorwf	(??___fleq+2)^(0+1280),w,c
  6703  004958  1022               	iorwf	(??___fleq+3)^(0+1280),w,c
  6704  00495A  A4D8               	btfss	status,2,c
  6705  00495C  D008               	goto	l4954
  6706                           
  6707                           ; BSR set to: 5
  6708  00495E  0E00               	movlw	0
  6709  004960  6E1B               	movwf	___fleq@ff2^(0+1280),c
  6710  004962  0E00               	movlw	0
  6711  004964  6E1C               	movwf	(___fleq@ff2+1)^(0+1280),c
  6712  004966  0E00               	movlw	0
  6713  004968  6E1D               	movwf	(___fleq@ff2+2)^(0+1280),c
  6714  00496A  0E00               	movlw	0
  6715  00496C  6E1E               	movwf	(___fleq@ff2+3)^(0+1280),c
  6716  00496E                     l4954:
  6717                           
  6718                           ; BSR set to: 5
  6719  00496E  501B               	movf	___fleq@ff2^(0+1280),w,c
  6720  004970  1817               	xorwf	___fleq@ff1^(0+1280),w,c
  6721  004972  E10A               	bnz	u5920
  6722  004974  501C               	movf	(___fleq@ff2+1)^(0+1280),w,c
  6723  004976  1818               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
  6724  004978  E107               	bnz	u5920
  6725  00497A  501D               	movf	(___fleq@ff2+2)^(0+1280),w,c
  6726  00497C  1819               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
  6727  00497E  E104               	bnz	u5920
  6728  004980  501E               	movf	(___fleq@ff2+3)^(0+1280),w,c
  6729  004982  181A               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
  6730  004984  B4D8               	btfsc	status,2,c
  6731  004986  D002               	goto	l4958
  6732  004988                     u5920:
  6733                           
  6734                           ; BSR set to: 5
  6735  004988  90D8               	bcf	status,0,c
  6736  00498A  0012               	return	
  6737  00498C                     l4958:
  6738                           
  6739                           ; BSR set to: 5
  6740  00498C  80D8               	bsf	status,0,c
  6741                           
  6742                           ; BSR set to: 5
  6743  00498E  0012               	return		;funcret
  6744  004990                     __end_of___fleq:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function ___fldiv *****************
  6748 ;; Defined at:
  6749 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  b               4   36[COMRAM] unsigned char 
  6752 ;;  a               4   40[COMRAM] unsigned char 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  grs             4    7[BANK5 ] unsigned long 
  6755 ;;  rem             4    0[BANK5 ] unsigned long 
  6756 ;;  new_exp         2    5[BANK5 ] short 
  6757 ;;  aexp            1   12[BANK5 ] unsigned char 
  6758 ;;  bexp            1   11[BANK5 ] unsigned char 
  6759 ;;  sign            1    4[BANK5 ] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  4   36[COMRAM] unsigned char 
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/4
  6766 ;;		On exit  : 3F/5
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6769 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6770 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6772 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6773 ;;Total ram usage:       25 bytes
  6774 ;; Hardware stack levels used: 1
  6775 ;; Hardware stack levels required when called: 2
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_main
  6780 ;;		_efgtoa
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text23
  6785  003ADC                     __ptext23:
  6786                           	callstack 0
  6787  003ADC                     ___fldiv:
  6788                           	callstack 120
  6789                           
  6790                           ; BSR set to: 5
  6791                           ;incstack = 0
  6792  003ADC  5028               	movf	(___fldiv@b+3)^(0+1280),w,c
  6793  003ADE  0B80               	andlw	128
  6794  003AE0  0105               	movlb	5	; () banked
  6795  003AE2  6F64               	movwf	___fldiv@sign& (0+255),b
  6796  003AE4  5028               	movf	(___fldiv@b+3)^(0+1280),w,c
  6797  003AE6  2428               	addwf	(___fldiv@b+3)^(0+1280),w,c
  6798  003AE8  6F6B               	movwf	___fldiv@bexp& (0+255),b
  6799                           
  6800                           ; BSR set to: 5
  6801  003AEA  BE27               	btfsc	(___fldiv@b+2)^(0+1280),7,c
  6802                           
  6803                           ; BSR set to: 5
  6804  003AEC  816B               	bsf	___fldiv@bexp& (0+255),0,b
  6805                           
  6806                           ; BSR set to: 5
  6807  003AEE  516B               	movf	___fldiv@bexp& (0+255),w,b
  6808  003AF0  B4D8               	btfsc	status,2,c
  6809  003AF2  D00D               	goto	l4608
  6810                           
  6811                           ; BSR set to: 5
  6812  003AF4  296B               	incf	___fldiv@bexp& (0+255),w,b
  6813  003AF6  A4D8               	btfss	status,2,c
  6814  003AF8  D008               	goto	l4604
  6815                           
  6816                           ; BSR set to: 5
  6817  003AFA  0E00               	movlw	0
  6818  003AFC  6E25               	movwf	___fldiv@b^(0+1280),c
  6819  003AFE  0E00               	movlw	0
  6820  003B00  6E26               	movwf	(___fldiv@b+1)^(0+1280),c
  6821  003B02  0E00               	movlw	0
  6822  003B04  6E27               	movwf	(___fldiv@b+2)^(0+1280),c
  6823  003B06  0E00               	movlw	0
  6824  003B08  6E28               	movwf	(___fldiv@b+3)^(0+1280),c
  6825  003B0A                     l4604:
  6826                           
  6827                           ; BSR set to: 5
  6828  003B0A  8E27               	bsf	(___fldiv@b+2)^(0+1280),7,c
  6829  003B0C  D006               	goto	L10
  6830  003B0E                     l4608:
  6831                           
  6832                           ; BSR set to: 5
  6833  003B0E  0E00               	movlw	0
  6834  003B10  6E25               	movwf	___fldiv@b^(0+1280),c
  6835  003B12  0E00               	movlw	0
  6836  003B14  6E26               	movwf	(___fldiv@b+1)^(0+1280),c
  6837  003B16  0E00               	movlw	0
  6838  003B18  6E27               	movwf	(___fldiv@b+2)^(0+1280),c
  6839  003B1A                     L10:
  6840  003B1A  0E00               	movlw	0
  6841  003B1C  6E28               	movwf	(___fldiv@b+3)^(0+1280),c
  6842                           
  6843                           ; BSR set to: 5
  6844  003B1E  502C               	movf	(___fldiv@a+3)^(0+1280),w,c
  6845  003B20  0B80               	andlw	128
  6846  003B22  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  6847                           
  6848                           ; BSR set to: 5
  6849  003B24  502C               	movf	(___fldiv@a+3)^(0+1280),w,c
  6850  003B26  242C               	addwf	(___fldiv@a+3)^(0+1280),w,c
  6851  003B28  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6852                           
  6853                           ; BSR set to: 5
  6854  003B2A  BE2B               	btfsc	(___fldiv@a+2)^(0+1280),7,c
  6855                           
  6856                           ; BSR set to: 5
  6857  003B2C  816C               	bsf	___fldiv@aexp& (0+255),0,b
  6858                           
  6859                           ; BSR set to: 5
  6860  003B2E  516C               	movf	___fldiv@aexp& (0+255),w,b
  6861  003B30  B4D8               	btfsc	status,2,c
  6862  003B32  D00D               	goto	l4628
  6863                           
  6864                           ; BSR set to: 5
  6865  003B34  296C               	incf	___fldiv@aexp& (0+255),w,b
  6866  003B36  A4D8               	btfss	status,2,c
  6867  003B38  D008               	goto	l4624
  6868                           
  6869                           ; BSR set to: 5
  6870  003B3A  0E00               	movlw	0
  6871  003B3C  6E29               	movwf	___fldiv@a^(0+1280),c
  6872  003B3E  0E00               	movlw	0
  6873  003B40  6E2A               	movwf	(___fldiv@a+1)^(0+1280),c
  6874  003B42  0E00               	movlw	0
  6875  003B44  6E2B               	movwf	(___fldiv@a+2)^(0+1280),c
  6876  003B46  0E00               	movlw	0
  6877  003B48  6E2C               	movwf	(___fldiv@a+3)^(0+1280),c
  6878  003B4A                     l4624:
  6879                           
  6880                           ; BSR set to: 5
  6881  003B4A  8E2B               	bsf	(___fldiv@a+2)^(0+1280),7,c
  6882  003B4C  D006               	goto	L11
  6883  003B4E                     l4628:
  6884                           
  6885                           ; BSR set to: 5
  6886  003B4E  0E00               	movlw	0
  6887  003B50  6E29               	movwf	___fldiv@a^(0+1280),c
  6888  003B52  0E00               	movlw	0
  6889  003B54  6E2A               	movwf	(___fldiv@a+1)^(0+1280),c
  6890  003B56  0E00               	movlw	0
  6891  003B58  6E2B               	movwf	(___fldiv@a+2)^(0+1280),c
  6892  003B5A                     L11:
  6893  003B5A  0E00               	movlw	0
  6894  003B5C  6E2C               	movwf	(___fldiv@a+3)^(0+1280),c
  6895                           
  6896                           ; BSR set to: 5
  6897  003B5E  5029               	movf	___fldiv@a^(0+1280),w,c
  6898  003B60  102A               	iorwf	(___fldiv@a+1)^(0+1280),w,c
  6899  003B62  102B               	iorwf	(___fldiv@a+2)^(0+1280),w,c
  6900  003B64  102C               	iorwf	(___fldiv@a+3)^(0+1280),w,c
  6901  003B66  A4D8               	btfss	status,2,c
  6902  003B68  D017               	goto	l4642
  6903                           
  6904                           ; BSR set to: 5
  6905  003B6A  0E00               	movlw	0
  6906  003B6C  6E25               	movwf	___fldiv@b^(0+1280),c
  6907  003B6E  0E00               	movlw	0
  6908  003B70  6E26               	movwf	(___fldiv@b+1)^(0+1280),c
  6909  003B72  0E00               	movlw	0
  6910  003B74  6E27               	movwf	(___fldiv@b+2)^(0+1280),c
  6911  003B76  0E00               	movlw	0
  6912  003B78  6E28               	movwf	(___fldiv@b+3)^(0+1280),c
  6913                           
  6914                           ; BSR set to: 5
  6915  003B7A  0E80               	movlw	128
  6916  003B7C  1227               	iorwf	(___fldiv@b+2)^(0+1280),f,c
  6917  003B7E  0E7F               	movlw	127
  6918  003B80  1228               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  6919  003B82                     l4636:
  6920                           
  6921                           ; BSR set to: 5
  6922  003B82  5164               	movf	___fldiv@sign& (0+255),w,b
  6923  003B84  1228               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  6924                           
  6925                           ; BSR set to: 5
  6926  003B86  C525  F525         	movff	___fldiv@b,?___fldiv
  6927  003B8A  C526  F526         	movff	___fldiv@b+1,?___fldiv+1
  6928  003B8E  C527  F527         	movff	___fldiv@b+2,?___fldiv+2
  6929  003B92  C528  F528         	movff	___fldiv@b+3,?___fldiv+3
  6930  003B96  0012               	return	
  6931  003B98                     l4642:
  6932                           
  6933                           ; BSR set to: 5
  6934  003B98  516B               	movf	___fldiv@bexp& (0+255),w,b
  6935  003B9A  A4D8               	btfss	status,2,c
  6936  003B9C  D009               	goto	l4650
  6937                           
  6938                           ; BSR set to: 5
  6939                           
  6940                           ; BSR set to: 5
  6941  003B9E  0E00               	movlw	0
  6942  003BA0  6E25               	movwf	?___fldiv^(0+1280),c
  6943  003BA2  0E00               	movlw	0
  6944  003BA4  6E26               	movwf	(?___fldiv+1)^(0+1280),c
  6945  003BA6  0E00               	movlw	0
  6946  003BA8  6E27               	movwf	(?___fldiv+2)^(0+1280),c
  6947  003BAA  0E00               	movlw	0
  6948  003BAC  6E28               	movwf	(?___fldiv+3)^(0+1280),c
  6949  003BAE  0012               	return	
  6950  003BB0                     l4650:
  6951                           
  6952                           ; BSR set to: 5
  6953  003BB0  516C               	movf	___fldiv@aexp& (0+255),w,b
  6954  003BB2  C56B  F52D         	movff	___fldiv@bexp,??___fldiv
  6955  003BB6  6A2E               	clrf	(??___fldiv+1)^(0+1280),c
  6956  003BB8  5E2D               	subwf	??___fldiv^(0+1280),f,c
  6957  003BBA  0E00               	movlw	0
  6958  003BBC  5A2E               	subwfb	(??___fldiv+1)^(0+1280),f,c
  6959  003BBE  0E7F               	movlw	127
  6960  003BC0  242D               	addwf	??___fldiv^(0+1280),w,c
  6961  003BC2  6F65               	movwf	___fldiv@new_exp& (0+255),b
  6962  003BC4  0E00               	movlw	0
  6963  003BC6  202E               	addwfc	(??___fldiv+1)^(0+1280),w,c
  6964  003BC8  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6965                           
  6966                           ; BSR set to: 5
  6967  003BCA  C525  F560         	movff	___fldiv@b,___fldiv@rem
  6968  003BCE  C526  F561         	movff	___fldiv@b+1,___fldiv@rem+1
  6969  003BD2  C527  F562         	movff	___fldiv@b+2,___fldiv@rem+2
  6970  003BD6  C528  F563         	movff	___fldiv@b+3,___fldiv@rem+3
  6971                           
  6972                           ; BSR set to: 5
  6973  003BDA  0E00               	movlw	0
  6974  003BDC  6E25               	movwf	___fldiv@b^(0+1280),c
  6975  003BDE  0E00               	movlw	0
  6976  003BE0  6E26               	movwf	(___fldiv@b+1)^(0+1280),c
  6977  003BE2  0E00               	movlw	0
  6978  003BE4  6E27               	movwf	(___fldiv@b+2)^(0+1280),c
  6979  003BE6  0E00               	movlw	0
  6980  003BE8  6E28               	movwf	(___fldiv@b+3)^(0+1280),c
  6981                           
  6982                           ; BSR set to: 5
  6983  003BEA  0E00               	movlw	0
  6984  003BEC  6F67               	movwf	___fldiv@grs& (0+255),b
  6985  003BEE  0E00               	movlw	0
  6986  003BF0  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  6987  003BF2  0E00               	movlw	0
  6988  003BF4  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  6989  003BF6  0E00               	movlw	0
  6990  003BF8  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  6991                           
  6992                           ; BSR set to: 5
  6993  003BFA  0E00               	movlw	0
  6994  003BFC  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6995  003BFE  D028               	goto	l857
  6996  003C00                     l4660:
  6997                           
  6998                           ; BSR set to: 5
  6999  003C00  516C               	movf	___fldiv@aexp& (0+255),w,b
  7000  003C02  B4D8               	btfsc	status,2,c
  7001  003C04  D011               	goto	l4668
  7002                           
  7003                           ; BSR set to: 5
  7004  003C06  90D8               	bcf	status,0,c
  7005  003C08  3760               	rlcf	___fldiv@rem& (0+255),f,b
  7006  003C0A  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7007  003C0C  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7008  003C0E  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7009  003C10  90D8               	bcf	status,0,c
  7010  003C12  3625               	rlcf	___fldiv@b^(0+1280),f,c
  7011  003C14  3626               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  7012  003C16  3627               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  7013  003C18  3628               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  7014                           
  7015                           ; BSR set to: 5
  7016  003C1A  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7017                           
  7018                           ; BSR set to: 5
  7019  003C1C  8025               	bsf	___fldiv@b^(0+1280),0,c
  7020                           
  7021                           ; BSR set to: 5
  7022  003C1E  90D8               	bcf	status,0,c
  7023  003C20  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7024  003C22  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7025  003C24  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7026  003C26  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7027  003C28                     l4668:
  7028                           
  7029                           ; BSR set to: 5
  7030  003C28  5029               	movf	___fldiv@a^(0+1280),w,c
  7031  003C2A  5D60               	subwf	___fldiv@rem& (0+255),w,b
  7032  003C2C  502A               	movf	(___fldiv@a+1)^(0+1280),w,c
  7033  003C2E  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7034  003C30  502B               	movf	(___fldiv@a+2)^(0+1280),w,c
  7035  003C32  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7036  003C34  502C               	movf	(___fldiv@a+3)^(0+1280),w,c
  7037  003C36  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7038  003C38  A0D8               	btfss	status,0,c
  7039  003C3A  D009               	goto	l4674
  7040                           
  7041                           ; BSR set to: 5
  7042  003C3C  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7043                           
  7044                           ; BSR set to: 5
  7045  003C3E  5029               	movf	___fldiv@a^(0+1280),w,c
  7046  003C40  5F60               	subwf	___fldiv@rem& (0+255),f,b
  7047  003C42  502A               	movf	(___fldiv@a+1)^(0+1280),w,c
  7048  003C44  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7049  003C46  502B               	movf	(___fldiv@a+2)^(0+1280),w,c
  7050  003C48  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7051  003C4A  502C               	movf	(___fldiv@a+3)^(0+1280),w,c
  7052  003C4C  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7053  003C4E                     l4674:
  7054                           
  7055                           ; BSR set to: 5
  7056  003C4E  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  7057  003C50                     l857:
  7058                           
  7059                           ; BSR set to: 5
  7060  003C50  0E19               	movlw	25
  7061  003C52  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  7062  003C54  D7D5               	goto	l4660
  7063                           
  7064                           ; BSR set to: 5
  7065  003C56  5160               	movf	___fldiv@rem& (0+255),w,b
  7066  003C58  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7067  003C5A  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7068  003C5C  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7069  003C5E  B4D8               	btfsc	status,2,c
  7070  003C60  D011               	goto	l4686
  7071                           
  7072                           ; BSR set to: 5
  7073  003C62  8167               	bsf	___fldiv@grs& (0+255),0,b
  7074  003C64  D00F               	goto	l4686
  7075  003C66                     l4680:
  7076                           
  7077                           ; BSR set to: 5
  7078  003C66  90D8               	bcf	status,0,c
  7079  003C68  3625               	rlcf	___fldiv@b^(0+1280),f,c
  7080  003C6A  3626               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  7081  003C6C  3627               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  7082  003C6E  3628               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  7083                           
  7084                           ; BSR set to: 5
  7085  003C70  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7086                           
  7087                           ; BSR set to: 5
  7088  003C72  8025               	bsf	___fldiv@b^(0+1280),0,c
  7089                           
  7090                           ; BSR set to: 5
  7091  003C74  90D8               	bcf	status,0,c
  7092  003C76  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7093  003C78  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7094  003C7A  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7095  003C7C  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7096  003C7E  0765               	decf	___fldiv@new_exp& (0+255),f,b
  7097  003C80  A0D8               	btfss	status,0,c
  7098  003C82  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7099  003C84                     l4686:
  7100                           
  7101                           ; BSR set to: 5
  7102  003C84  AE27               	btfss	(___fldiv@b+2)^(0+1280),7,c
  7103  003C86  D7EF               	goto	l4680
  7104                           
  7105                           ; BSR set to: 5
  7106  003C88  0E00               	movlw	0
  7107  003C8A  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7108                           
  7109                           ; BSR set to: 5
  7110  003C8C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7111  003C8E  D017               	goto	l868
  7112                           
  7113                           ; BSR set to: 5
  7114  003C90  0EFF               	movlw	255
  7115  003C92  1567               	andwf	___fldiv@grs& (0+255),w,b
  7116  003C94  6E2D               	movwf	??___fldiv^(0+1280),c
  7117  003C96  0EFF               	movlw	255
  7118  003C98  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7119  003C9A  6E2E               	movwf	(??___fldiv+1)^(0+1280),c
  7120  003C9C  0EFF               	movlw	255
  7121  003C9E  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7122  003CA0  6E2F               	movwf	(??___fldiv+2)^(0+1280),c
  7123  003CA2  0E7F               	movlw	127
  7124  003CA4  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7125  003CA6  6E30               	movwf	(??___fldiv+3)^(0+1280),c
  7126  003CA8  502D               	movf	??___fldiv^(0+1280),w,c
  7127  003CAA  102E               	iorwf	(??___fldiv+1)^(0+1280),w,c
  7128  003CAC  102F               	iorwf	(??___fldiv+2)^(0+1280),w,c
  7129  003CAE  1030               	iorwf	(??___fldiv+3)^(0+1280),w,c
  7130  003CB0  B4D8               	btfsc	status,2,c
  7131  003CB2  D003               	goto	l869
  7132  003CB4                     u5530:
  7133                           
  7134                           ; BSR set to: 5
  7135  003CB4  0E01               	movlw	1
  7136  003CB6  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7137  003CB8  D002               	goto	l868
  7138  003CBA                     l869:
  7139                           
  7140                           ; BSR set to: 5
  7141  003CBA  B025               	btfsc	___fldiv@b^(0+1280),0,c
  7142  003CBC  D7FB               	goto	u5530
  7143  003CBE                     l868:
  7144                           
  7145                           ; BSR set to: 5
  7146  003CBE  516C               	movf	___fldiv@aexp& (0+255),w,b
  7147  003CC0  B4D8               	btfsc	status,2,c
  7148  003CC2  D01F               	goto	l4706
  7149                           
  7150                           ; BSR set to: 5
  7151  003CC4  0E01               	movlw	1
  7152  003CC6  2625               	addwf	___fldiv@b^(0+1280),f,c
  7153  003CC8  0E00               	movlw	0
  7154  003CCA  2226               	addwfc	(___fldiv@b+1)^(0+1280),f,c
  7155  003CCC  2227               	addwfc	(___fldiv@b+2)^(0+1280),f,c
  7156  003CCE  2228               	addwfc	(___fldiv@b+3)^(0+1280),f,c
  7157                           
  7158                           ; BSR set to: 5
  7159  003CD0  A028               	btfss	(___fldiv@b+3)^(0+1280),0,c
  7160  003CD2  D017               	goto	l4706
  7161                           
  7162                           ; BSR set to: 5
  7163  003CD4  C525  F52D         	movff	___fldiv@b,??___fldiv
  7164  003CD8  C526  F52E         	movff	___fldiv@b+1,??___fldiv+1
  7165  003CDC  C527  F52F         	movff	___fldiv@b+2,??___fldiv+2
  7166  003CE0  C528  F530         	movff	___fldiv@b+3,??___fldiv+3
  7167  003CE4  3430               	rlcf	(??___fldiv+3)^(0+1280),w,c
  7168  003CE6  3230               	rrcf	(??___fldiv+3)^(0+1280),f,c
  7169  003CE8  322F               	rrcf	(??___fldiv+2)^(0+1280),f,c
  7170  003CEA  322E               	rrcf	(??___fldiv+1)^(0+1280),f,c
  7171  003CEC  322D               	rrcf	??___fldiv^(0+1280),f,c
  7172  003CEE  C52D  F525         	movff	??___fldiv,___fldiv@b
  7173  003CF2  C52E  F526         	movff	??___fldiv+1,___fldiv@b+1
  7174  003CF6  C52F  F527         	movff	??___fldiv+2,___fldiv@b+2
  7175  003CFA  C530  F528         	movff	??___fldiv+3,___fldiv@b+3
  7176                           
  7177                           ; BSR set to: 5
  7178  003CFE  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  7179  003D00  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7180  003D02                     l4706:
  7181                           
  7182                           ; BSR set to: 5
  7183  003D02  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7184  003D04  D010               	goto	l4710
  7185  003D06  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7186  003D08  E103               	bnz	u5570
  7187  003D0A  2965               	incf	___fldiv@new_exp& (0+255),w,b
  7188  003D0C  A0D8               	btfss	status,0,c
  7189  003D0E  D00B               	goto	l4710
  7190  003D10                     u5570:
  7191                           
  7192                           ; BSR set to: 5
  7193  003D10  0E00               	movlw	0
  7194  003D12  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7195  003D14  6965               	setf	___fldiv@new_exp& (0+255),b
  7196  003D16  0E00               	movlw	0
  7197  003D18  6E25               	movwf	___fldiv@b^(0+1280),c
  7198  003D1A  0E00               	movlw	0
  7199  003D1C  6E26               	movwf	(___fldiv@b+1)^(0+1280),c
  7200  003D1E  0E00               	movlw	0
  7201  003D20  6E27               	movwf	(___fldiv@b+2)^(0+1280),c
  7202  003D22  0E00               	movlw	0
  7203  003D24  6E28               	movwf	(___fldiv@b+3)^(0+1280),c
  7204  003D26                     l4710:
  7205                           
  7206                           ; BSR set to: 5
  7207  003D26  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7208  003D28  D005               	goto	u5580
  7209  003D2A  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7210  003D2C  E111               	bnz	l4714
  7211  003D2E  0565               	decf	___fldiv@new_exp& (0+255),w,b
  7212  003D30  B0D8               	btfsc	status,0,c
  7213  003D32  D00E               	goto	l4714
  7214  003D34                     u5580:
  7215                           
  7216                           ; BSR set to: 5
  7217  003D34  0E00               	movlw	0
  7218  003D36  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7219  003D38  0E00               	movlw	0
  7220  003D3A  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7221  003D3C  0E00               	movlw	0
  7222  003D3E  6E25               	movwf	___fldiv@b^(0+1280),c
  7223  003D40  0E00               	movlw	0
  7224  003D42  6E26               	movwf	(___fldiv@b+1)^(0+1280),c
  7225  003D44  0E00               	movlw	0
  7226  003D46  6E27               	movwf	(___fldiv@b+2)^(0+1280),c
  7227  003D48  0E00               	movlw	0
  7228  003D4A  6E28               	movwf	(___fldiv@b+3)^(0+1280),c
  7229  003D4C  0E00               	movlw	0
  7230  003D4E  6F64               	movwf	___fldiv@sign& (0+255),b
  7231  003D50                     l4714:
  7232                           
  7233                           ; BSR set to: 5
  7234  003D50  C565  F56B         	movff	___fldiv@new_exp,___fldiv@bexp
  7235                           
  7236                           ; BSR set to: 5
  7237  003D54  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  7238  003D56  D002               	goto	l4720
  7239                           
  7240                           ; BSR set to: 5
  7241  003D58  8E27               	bsf	(___fldiv@b+2)^(0+1280),7,c
  7242  003D5A  D001               	goto	l4722
  7243  003D5C                     l4720:
  7244                           
  7245                           ; BSR set to: 5
  7246  003D5C  9E27               	bcf	(___fldiv@b+2)^(0+1280),7,c
  7247  003D5E                     l4722:
  7248                           
  7249                           ; BSR set to: 5
  7250  003D5E  90D8               	bcf	status,0,c
  7251  003D60  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  7252  003D62  6E28               	movwf	(___fldiv@b+3)^(0+1280),c
  7253  003D64  D70E               	goto	l4636
  7254  003D66                     __end_of___fldiv:
  7255                           	callstack 0
  7256                           
  7257 ;; *************** function ___awmod *****************
  7258 ;; Defined at:
  7259 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;  dividend        2   22[COMRAM] int 
  7262 ;;  divisor         2   24[COMRAM] int 
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;  sign            1   27[COMRAM] unsigned char 
  7265 ;;  counter         1   26[COMRAM] unsigned char 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  2   22[COMRAM] int 
  7268 ;; Registers used:
  7269 ;;		wreg, status,2, status,0
  7270 ;; Tracked objects:
  7271 ;;		On entry : 3F/5
  7272 ;;		On exit  : 3F/5
  7273 ;;		Unchanged: 3E/0
  7274 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7278 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7279 ;;Total ram usage:        6 bytes
  7280 ;; Hardware stack levels used: 1
  7281 ;; Hardware stack levels required when called: 2
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_efgtoa
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text24
  7290  004A14                     __ptext24:
  7291                           	callstack 0
  7292  004A14                     ___awmod:
  7293                           	callstack 120
  7294                           
  7295                           ; BSR set to: 5
  7296                           
  7297                           ; BSR set to: 5
  7298                           ;incstack = 0
  7299  004A14  0E00               	movlw	0
  7300  004A16  6E1C               	movwf	___awmod@sign^(0+1280),c
  7301                           
  7302                           ; BSR set to: 5
  7303  004A18  AE18               	btfss	(___awmod@dividend+1)^(0+1280),7,c
  7304  004A1A  D006               	goto	l4918
  7305                           
  7306                           ; BSR set to: 5
  7307  004A1C  6C17               	negf	___awmod@dividend^(0+1280),c
  7308  004A1E  1E18               	comf	(___awmod@dividend+1)^(0+1280),f,c
  7309  004A20  B0D8               	btfsc	status,0,c
  7310  004A22  2A18               	incf	(___awmod@dividend+1)^(0+1280),f,c
  7311                           
  7312                           ; BSR set to: 5
  7313  004A24  0E01               	movlw	1
  7314  004A26  6E1C               	movwf	___awmod@sign^(0+1280),c
  7315  004A28                     l4918:
  7316                           
  7317                           ; BSR set to: 5
  7318  004A28  AE1A               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  7319  004A2A  D004               	goto	l4922
  7320                           
  7321                           ; BSR set to: 5
  7322  004A2C  6C19               	negf	___awmod@divisor^(0+1280),c
  7323  004A2E  1E1A               	comf	(___awmod@divisor+1)^(0+1280),f,c
  7324  004A30  B0D8               	btfsc	status,0,c
  7325  004A32  2A1A               	incf	(___awmod@divisor+1)^(0+1280),f,c
  7326  004A34                     l4922:
  7327                           
  7328                           ; BSR set to: 5
  7329  004A34  5019               	movf	___awmod@divisor^(0+1280),w,c
  7330  004A36  101A               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  7331  004A38  B4D8               	btfsc	status,2,c
  7332  004A3A  D018               	goto	l4938
  7333                           
  7334                           ; BSR set to: 5
  7335  004A3C  0E01               	movlw	1
  7336  004A3E  6E1B               	movwf	___awmod@counter^(0+1280),c
  7337  004A40  D004               	goto	l4928
  7338  004A42                     l4926:
  7339                           
  7340                           ; BSR set to: 5
  7341  004A42  90D8               	bcf	status,0,c
  7342  004A44  3619               	rlcf	___awmod@divisor^(0+1280),f,c
  7343  004A46  361A               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  7344  004A48  2A1B               	incf	___awmod@counter^(0+1280),f,c
  7345  004A4A                     l4928:
  7346                           
  7347                           ; BSR set to: 5
  7348  004A4A  AE1A               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  7349  004A4C  D7FA               	goto	l4926
  7350  004A4E                     u5870:
  7351                           
  7352                           ; BSR set to: 5
  7353  004A4E  5019               	movf	___awmod@divisor^(0+1280),w,c
  7354  004A50  5C17               	subwf	___awmod@dividend^(0+1280),w,c
  7355  004A52  501A               	movf	(___awmod@divisor+1)^(0+1280),w,c
  7356  004A54  5818               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  7357  004A56  A0D8               	btfss	status,0,c
  7358  004A58  D004               	goto	l4934
  7359                           
  7360                           ; BSR set to: 5
  7361  004A5A  5019               	movf	___awmod@divisor^(0+1280),w,c
  7362  004A5C  5E17               	subwf	___awmod@dividend^(0+1280),f,c
  7363  004A5E  501A               	movf	(___awmod@divisor+1)^(0+1280),w,c
  7364  004A60  5A18               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  7365  004A62                     l4934:
  7366                           
  7367                           ; BSR set to: 5
  7368  004A62  90D8               	bcf	status,0,c
  7369  004A64  321A               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  7370  004A66  3219               	rrcf	___awmod@divisor^(0+1280),f,c
  7371                           
  7372                           ; BSR set to: 5
  7373  004A68  2E1B               	decfsz	___awmod@counter^(0+1280),f,c
  7374  004A6A  D7F1               	goto	u5870
  7375  004A6C                     l4938:
  7376                           
  7377                           ; BSR set to: 5
  7378  004A6C  501C               	movf	___awmod@sign^(0+1280),w,c
  7379  004A6E  B4D8               	btfsc	status,2,c
  7380  004A70  D004               	goto	l4942
  7381                           
  7382                           ; BSR set to: 5
  7383  004A72  6C17               	negf	___awmod@dividend^(0+1280),c
  7384  004A74  1E18               	comf	(___awmod@dividend+1)^(0+1280),f,c
  7385  004A76  B0D8               	btfsc	status,0,c
  7386  004A78  2A18               	incf	(___awmod@dividend+1)^(0+1280),f,c
  7387  004A7A                     l4942:
  7388                           
  7389                           ; BSR set to: 5
  7390  004A7A  C517  F517         	movff	___awmod@dividend,?___awmod
  7391  004A7E  C518  F518         	movff	___awmod@dividend+1,?___awmod+1
  7392                           
  7393                           ; BSR set to: 5
  7394  004A82  0012               	return		;funcret
  7395  004A84                     __end_of___awmod:
  7396                           	callstack 0
  7397                           
  7398 ;; *************** function ___awdiv *****************
  7399 ;; Defined at:
  7400 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  dividend        2   22[COMRAM] int 
  7403 ;;  divisor         2   24[COMRAM] int 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;  quotient        2   28[COMRAM] int 
  7406 ;;  sign            1   27[COMRAM] unsigned char 
  7407 ;;  counter         1   26[COMRAM] unsigned char 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  2   22[COMRAM] int 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0
  7412 ;; Tracked objects:
  7413 ;;		On entry : 3F/5
  7414 ;;		On exit  : 3F/5
  7415 ;;		Unchanged: 3E/0
  7416 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7418 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7420 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7421 ;;Total ram usage:        8 bytes
  7422 ;; Hardware stack levels used: 1
  7423 ;; Hardware stack levels required when called: 2
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_efgtoa
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text25
  7432  004990                     __ptext25:
  7433                           	callstack 0
  7434  004990                     ___awdiv:
  7435                           	callstack 120
  7436                           
  7437                           ; BSR set to: 5
  7438                           
  7439                           ; BSR set to: 5
  7440                           ;incstack = 0
  7441  004990  0E00               	movlw	0
  7442  004992  6E1C               	movwf	___awdiv@sign^(0+1280),c
  7443                           
  7444                           ; BSR set to: 5
  7445  004994  AE1A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  7446  004996  D006               	goto	l4874
  7447                           
  7448                           ; BSR set to: 5
  7449  004998  6C19               	negf	___awdiv@divisor^(0+1280),c
  7450  00499A  1E1A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
  7451  00499C  B0D8               	btfsc	status,0,c
  7452  00499E  2A1A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
  7453                           
  7454                           ; BSR set to: 5
  7455  0049A0  0E01               	movlw	1
  7456  0049A2  6E1C               	movwf	___awdiv@sign^(0+1280),c
  7457  0049A4                     l4874:
  7458                           
  7459                           ; BSR set to: 5
  7460  0049A4  AE18               	btfss	(___awdiv@dividend+1)^(0+1280),7,c
  7461  0049A6  D006               	goto	l4880
  7462                           
  7463                           ; BSR set to: 5
  7464  0049A8  6C17               	negf	___awdiv@dividend^(0+1280),c
  7465  0049AA  1E18               	comf	(___awdiv@dividend+1)^(0+1280),f,c
  7466  0049AC  B0D8               	btfsc	status,0,c
  7467  0049AE  2A18               	incf	(___awdiv@dividend+1)^(0+1280),f,c
  7468                           
  7469                           ; BSR set to: 5
  7470  0049B0  0E01               	movlw	1
  7471  0049B2  1A1C               	xorwf	___awdiv@sign^(0+1280),f,c
  7472  0049B4                     l4880:
  7473                           
  7474                           ; BSR set to: 5
  7475  0049B4  0E00               	movlw	0
  7476  0049B6  6E1E               	movwf	(___awdiv@quotient+1)^(0+1280),c
  7477  0049B8  0E00               	movlw	0
  7478  0049BA  6E1D               	movwf	___awdiv@quotient^(0+1280),c
  7479                           
  7480                           ; BSR set to: 5
  7481  0049BC  5019               	movf	___awdiv@divisor^(0+1280),w,c
  7482  0049BE  101A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
  7483  0049C0  B4D8               	btfsc	status,2,c
  7484  0049C2  D01C               	goto	l4902
  7485                           
  7486                           ; BSR set to: 5
  7487  0049C4  0E01               	movlw	1
  7488  0049C6  6E1B               	movwf	___awdiv@counter^(0+1280),c
  7489  0049C8  D004               	goto	l4888
  7490  0049CA                     l4886:
  7491                           
  7492                           ; BSR set to: 5
  7493  0049CA  90D8               	bcf	status,0,c
  7494  0049CC  3619               	rlcf	___awdiv@divisor^(0+1280),f,c
  7495  0049CE  361A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
  7496  0049D0  2A1B               	incf	___awdiv@counter^(0+1280),f,c
  7497  0049D2                     l4888:
  7498                           
  7499                           ; BSR set to: 5
  7500  0049D2  AE1A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  7501  0049D4  D7FA               	goto	l4886
  7502  0049D6                     u5810:
  7503                           
  7504                           ; BSR set to: 5
  7505  0049D6  90D8               	bcf	status,0,c
  7506  0049D8  361D               	rlcf	___awdiv@quotient^(0+1280),f,c
  7507  0049DA  361E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
  7508                           
  7509                           ; BSR set to: 5
  7510  0049DC  5019               	movf	___awdiv@divisor^(0+1280),w,c
  7511  0049DE  5C17               	subwf	___awdiv@dividend^(0+1280),w,c
  7512  0049E0  501A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  7513  0049E2  5818               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
  7514  0049E4  A0D8               	btfss	status,0,c
  7515  0049E6  D005               	goto	l4898
  7516                           
  7517                           ; BSR set to: 5
  7518  0049E8  5019               	movf	___awdiv@divisor^(0+1280),w,c
  7519  0049EA  5E17               	subwf	___awdiv@dividend^(0+1280),f,c
  7520  0049EC  501A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  7521  0049EE  5A18               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
  7522                           
  7523                           ; BSR set to: 5
  7524  0049F0  801D               	bsf	___awdiv@quotient^(0+1280),0,c
  7525  0049F2                     l4898:
  7526                           
  7527                           ; BSR set to: 5
  7528  0049F2  90D8               	bcf	status,0,c
  7529  0049F4  321A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
  7530  0049F6  3219               	rrcf	___awdiv@divisor^(0+1280),f,c
  7531                           
  7532                           ; BSR set to: 5
  7533  0049F8  2E1B               	decfsz	___awdiv@counter^(0+1280),f,c
  7534  0049FA  D7ED               	goto	u5810
  7535  0049FC                     l4902:
  7536                           
  7537                           ; BSR set to: 5
  7538  0049FC  501C               	movf	___awdiv@sign^(0+1280),w,c
  7539  0049FE  B4D8               	btfsc	status,2,c
  7540  004A00  D004               	goto	l4906
  7541                           
  7542                           ; BSR set to: 5
  7543  004A02  6C1D               	negf	___awdiv@quotient^(0+1280),c
  7544  004A04  1E1E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
  7545  004A06  B0D8               	btfsc	status,0,c
  7546  004A08  2A1E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
  7547  004A0A                     l4906:
  7548                           
  7549                           ; BSR set to: 5
  7550  004A0A  C51D  F517         	movff	___awdiv@quotient,?___awdiv
  7551  004A0E  C51E  F518         	movff	___awdiv@quotient+1,?___awdiv+1
  7552                           
  7553                           ; BSR set to: 5
  7554  004A12  0012               	return		;funcret
  7555  004A14                     __end_of___awdiv:
  7556                           	callstack 0
  7557                           
  7558 ;; *************** function _atoi *****************
  7559 ;; Defined at:
  7560 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  s               1   29[COMRAM] PTR const unsigned char 
  7563 ;;		 -> STR_1(41), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  n               2   37[COMRAM] int 
  7566 ;;  neg             2   35[COMRAM] int 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  2   29[COMRAM] int 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 3F/5
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7577 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7579 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7580 ;;Total ram usage:       10 bytes
  7581 ;; Hardware stack levels used: 1
  7582 ;; Hardware stack levels required when called: 3
  7583 ;; This function calls:
  7584 ;;		___wmul
  7585 ;;		_isdigit
  7586 ;;		_isspace
  7587 ;; This function is called by:
  7588 ;;		_vfpfcnvrt
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           	psect	text26
  7593  0042C2                     __ptext26:
  7594                           	callstack 0
  7595  0042C2                     _atoi:
  7596                           	callstack 120
  7597                           
  7598                           ; BSR set to: 5
  7599                           
  7600                           ; BSR set to: 5
  7601                           ;incstack = 0
  7602  0042C2  0E00               	movlw	0
  7603  0042C4  6E27               	movwf	(atoi@n+1)^(0+1280),c
  7604  0042C6  0E00               	movlw	0
  7605  0042C8  6E26               	movwf	atoi@n^(0+1280),c
  7606  0042CA  0E00               	movlw	0
  7607  0042CC  6E25               	movwf	(atoi@neg+1)^(0+1280),c
  7608  0042CE  0E00               	movlw	0
  7609  0042D0  6E24               	movwf	atoi@neg^(0+1280),c
  7610  0042D2  D001               	goto	l5450
  7611  0042D4                     l5446:
  7612                           
  7613                           ; BSR set to: 5
  7614  0042D4  2A1E               	incf	atoi@s^(0+1280),f,c
  7615  0042D6                     l5450:
  7616                           
  7617                           ; BSR set to: 5
  7618  0042D6  0061  F478  F4F6   	movff	atoi@s,tblptrl
  7619  0042DC                     	if	1	;There is more than 1 active tblptr byte
  7620  0042DC  0E25               	movlw	high __smallconst
  7621  0042DE  6EF7               	movwf	tblptrh,c
  7622  0042E0                     	endif
  7623  0042E0                     	if	0	;tblptru may be non-zero
  7624  0042E0                     	endif
  7625  0042E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7626  0042E0  0E00               	movlw	low (__smallconst shr (0+16))
  7627  0042E2  6EF8               	movwf	tblptru,c
  7628  0042E4                     	endif
  7629  0042E4  0008               	tblrd		*
  7630  0042E6  50F5               	movf	tablat,w,c
  7631  0042E8  0A20               	xorlw	32
  7632  0042EA  B4D8               	btfsc	status,2,c
  7633  0042EC  D7F3               	goto	l5446
  7634                           
  7635                           ; BSR set to: 5
  7636  0042EE  0EF7               	movlw	247
  7637  0042F0  6E20               	movwf	??_atoi^(0+1280),c
  7638  0042F2  0EFF               	movlw	255
  7639  0042F4  6E21               	movwf	(??_atoi+1)^(0+1280),c
  7640  0042F6  0061  F478  F4F6   	movff	atoi@s,tblptrl
  7641  0042FC                     	if	1	;There is more than 1 active tblptr byte
  7642  0042FC  0E25               	movlw	high __smallconst
  7643  0042FE  6EF7               	movwf	tblptrh,c
  7644  004300                     	endif
  7645  004300                     	if	0	;tblptru may be non-zero
  7646  004300                     	endif
  7647  004300                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7648  004300  0E00               	movlw	low (__smallconst shr (0+16))
  7649  004302  6EF8               	movwf	tblptru,c
  7650  004304                     	endif
  7651  004304  0008               	tblrd		*
  7652  004306  50F5               	movf	tablat,w,c
  7653  004308  6E22               	movwf	(??_atoi+2)^(0+1280),c
  7654  00430A  6A23               	clrf	(??_atoi+3)^(0+1280),c
  7655  00430C  5020               	movf	??_atoi^(0+1280),w,c
  7656  00430E  2622               	addwf	(??_atoi+2)^(0+1280),f,c
  7657  004310  5021               	movf	(??_atoi+1)^(0+1280),w,c
  7658  004312  2223               	addwfc	(??_atoi+3)^(0+1280),f,c
  7659  004314  5023               	movf	(??_atoi+3)^(0+1280),w,c
  7660  004316  E10B               	bnz	l5458
  7661  004318  0E05               	movlw	5
  7662  00431A  5C22               	subwf	(??_atoi+2)^(0+1280),w,c
  7663  00431C  B0D8               	btfsc	status,0,c
  7664  00431E  D007               	goto	l5458
  7665  004320  D7D9               	goto	l5446
  7666  004322                     l5454:
  7667                           
  7668                           ; BSR set to: 5
  7669  004322  0E00               	movlw	0
  7670  004324  6E25               	movwf	(atoi@neg+1)^(0+1280),c
  7671  004326  0E01               	movlw	1
  7672  004328  6E24               	movwf	atoi@neg^(0+1280),c
  7673  00432A                     l5456:
  7674  00432A  2A1E               	incf	atoi@s^(0+1280),f,c
  7675  00432C  D034               	goto	l5466
  7676  00432E                     l5458:
  7677                           
  7678                           ; BSR set to: 5
  7679  00432E  0061  F478  F4F6   	movff	atoi@s,tblptrl
  7680  004334                     	if	1	;There is more than 1 active tblptr byte
  7681  004334  0E25               	movlw	high __smallconst
  7682  004336  6EF7               	movwf	tblptrh,c
  7683  004338                     	endif
  7684  004338                     	if	0	;tblptru may be non-zero
  7685  004338                     	endif
  7686  004338                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7687  004338  0E00               	movlw	low (__smallconst shr (0+16))
  7688  00433A  6EF8               	movwf	tblptru,c
  7689  00433C                     	endif
  7690  00433C  0008               	tblrd		*
  7691  00433E  50F5               	movf	tablat,w,c
  7692  004340  6E20               	movwf	??_atoi^(0+1280),c
  7693  004342  6A21               	clrf	(??_atoi+1)^(0+1280),c
  7694                           
  7695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7696                           ; Switch size 1, requested type "simple"
  7697                           ; Number of cases is 1, Range of values is 0 to 0
  7698                           ; switch strategies available:
  7699                           ; Name         Instructions Cycles
  7700                           ; simple_byte            4     3 (average)
  7701                           ;	Chosen strategy is simple_byte
  7702  004344  5021               	movf	(??_atoi+1)^(0+1280),w,c
  7703  004346  0A00               	xorlw	0	; case 0
  7704  004348  A4D8               	btfss	status,2,c
  7705  00434A  D025               	goto	l5466
  7706                           
  7707                           ; BSR set to: 5
  7708                           ; Switch size 1, requested type "simple"
  7709                           ; Number of cases is 2, Range of values is 43 to 45
  7710                           ; switch strategies available:
  7711                           ; Name         Instructions Cycles
  7712                           ; simple_byte            7     4 (average)
  7713                           ;	Chosen strategy is simple_byte
  7714  00434C  5020               	movf	??_atoi^(0+1280),w,c
  7715  00434E  0A2B               	xorlw	43	; case 43
  7716  004350  B4D8               	btfsc	status,2,c
  7717  004352  D7EB               	goto	l5456
  7718  004354  0A06               	xorlw	6	; case 45
  7719  004356  B4D8               	btfsc	status,2,c
  7720  004358  D7E4               	goto	l5454
  7721  00435A  D01D               	goto	l5466
  7722  00435C                     l5460:
  7723  00435C  C526  F517         	movff	atoi@n,___wmul@multiplier
  7724  004360  C527  F518         	movff	atoi@n+1,___wmul@multiplier+1
  7725  004364  0E00               	movlw	0
  7726  004366  6E1A               	movwf	(___wmul@multiplicand+1)^(0+1280),c
  7727  004368  0E0A               	movlw	10
  7728  00436A  6E19               	movwf	___wmul@multiplicand^(0+1280),c
  7729  00436C  EC11  F027         	call	___wmul	;wreg free
  7730  004370  0061  F478  F4F6   	movff	atoi@s,tblptrl
  7731  004376                     	if	1	;There is more than 1 active tblptr byte
  7732  004376  0E25               	movlw	high __smallconst
  7733  004378  6EF7               	movwf	tblptrh,c
  7734  00437A                     	endif
  7735  00437A                     	if	0	;tblptru may be non-zero
  7736  00437A                     	endif
  7737  00437A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7738  00437A  0E00               	movlw	low (__smallconst shr (0+16))
  7739  00437C  6EF8               	movwf	tblptru,c
  7740  00437E                     	endif
  7741  00437E  0008               	tblrd		*
  7742  004380  50F5               	movf	tablat,w,c
  7743  004382  5E17               	subwf	?___wmul^(0+1280),f,c
  7744  004384  0E00               	movlw	0
  7745  004386  5A18               	subwfb	(?___wmul+1)^(0+1280),f,c
  7746  004388  0E30               	movlw	48
  7747  00438A  2417               	addwf	?___wmul^(0+1280),w,c
  7748  00438C  6E26               	movwf	atoi@n^(0+1280),c
  7749  00438E  0E00               	movlw	0
  7750  004390  2018               	addwfc	(?___wmul+1)^(0+1280),w,c
  7751  004392  6E27               	movwf	(atoi@n+1)^(0+1280),c
  7752  004394  D7CA               	goto	l5456
  7753  004396                     l5466:
  7754  004396  0ED0               	movlw	208
  7755  004398  6E20               	movwf	??_atoi^(0+1280),c
  7756  00439A  0EFF               	movlw	255
  7757  00439C  6E21               	movwf	(??_atoi+1)^(0+1280),c
  7758  00439E  0061  F478  F4F6   	movff	atoi@s,tblptrl
  7759  0043A4                     	if	1	;There is more than 1 active tblptr byte
  7760  0043A4  0E25               	movlw	high __smallconst
  7761  0043A6  6EF7               	movwf	tblptrh,c
  7762  0043A8                     	endif
  7763  0043A8                     	if	0	;tblptru may be non-zero
  7764  0043A8                     	endif
  7765  0043A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7766  0043A8  0E00               	movlw	low (__smallconst shr (0+16))
  7767  0043AA  6EF8               	movwf	tblptru,c
  7768  0043AC                     	endif
  7769  0043AC  0008               	tblrd		*
  7770  0043AE  50F5               	movf	tablat,w,c
  7771  0043B0  6E22               	movwf	(??_atoi+2)^(0+1280),c
  7772  0043B2  6A23               	clrf	(??_atoi+3)^(0+1280),c
  7773  0043B4  5020               	movf	??_atoi^(0+1280),w,c
  7774  0043B6  2622               	addwf	(??_atoi+2)^(0+1280),f,c
  7775  0043B8  5021               	movf	(??_atoi+1)^(0+1280),w,c
  7776  0043BA  2223               	addwfc	(??_atoi+3)^(0+1280),f,c
  7777  0043BC  5023               	movf	(??_atoi+3)^(0+1280),w,c
  7778  0043BE  E104               	bnz	u6840
  7779  0043C0  0E0A               	movlw	10
  7780  0043C2  5C22               	subwf	(??_atoi+2)^(0+1280),w,c
  7781  0043C4  A0D8               	btfss	status,0,c
  7782  0043C6  D7CA               	goto	l5460
  7783  0043C8                     u6840:
  7784  0043C8  5024               	movf	atoi@neg^(0+1280),w,c
  7785  0043CA  1025               	iorwf	(atoi@neg+1)^(0+1280),w,c
  7786  0043CC  A4D8               	btfss	status,2,c
  7787  0043CE  D00D               	goto	l1152
  7788  0043D0  C526  F520         	movff	atoi@n,??_atoi
  7789  0043D4  C527  F521         	movff	atoi@n+1,??_atoi+1
  7790  0043D8  1E20               	comf	??_atoi^(0+1280),f,c
  7791  0043DA  1E21               	comf	(??_atoi+1)^(0+1280),f,c
  7792  0043DC  4A20               	infsnz	??_atoi^(0+1280),f,c
  7793  0043DE  2A21               	incf	(??_atoi+1)^(0+1280),f,c
  7794  0043E0  C520  F51E         	movff	??_atoi,?_atoi
  7795  0043E4  C521  F51F         	movff	??_atoi+1,?_atoi+1
  7796  0043E8  0012               	return	
  7797  0043EA                     l1152:
  7798  0043EA  C526  F51E         	movff	atoi@n,?_atoi
  7799  0043EE  C527  F51F         	movff	atoi@n+1,?_atoi+1
  7800  0043F2  0012               	return		;funcret
  7801  0043F4                     __end_of_atoi:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function _isspace *****************
  7805 ;; Defined at:
  7806 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;  c               2   22[COMRAM] int 
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  2   22[COMRAM] int 
  7813 ;; Registers used:
  7814 ;;		wreg, status,2, status,0
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7822 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7823 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7824 ;;Total ram usage:        7 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; Hardware stack levels required when called: 2
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		_atoi
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text27
  7835  004C42                     __ptext27:
  7836                           	callstack 0
  7837  004C42                     _isspace:
  7838                           	callstack 120
  7839                           
  7840                           ;incstack = 0
  7841  004C42  0E01               	movlw	1
  7842  004C44  6E1D               	movwf	_isspace$963^(0+1280),c
  7843  004C46  0E20               	movlw	32
  7844  004C48  1817               	xorwf	isspace@c^(0+1280),w,c
  7845  004C4A  1018               	iorwf	(isspace@c+1)^(0+1280),w,c
  7846  004C4C  B4D8               	btfsc	status,2,c
  7847  004C4E  D014               	goto	l5134
  7848  004C50  0EF7               	movlw	247
  7849  004C52  6E19               	movwf	??_isspace^(0+1280),c
  7850  004C54  0EFF               	movlw	255
  7851  004C56  6E1A               	movwf	(??_isspace+1)^(0+1280),c
  7852  004C58  C517  F51B         	movff	isspace@c,??_isspace+2
  7853  004C5C  C518  F51C         	movff	isspace@c+1,??_isspace+3
  7854  004C60  5019               	movf	??_isspace^(0+1280),w,c
  7855  004C62  261B               	addwf	(??_isspace+2)^(0+1280),f,c
  7856  004C64  501A               	movf	(??_isspace+1)^(0+1280),w,c
  7857  004C66  221C               	addwfc	(??_isspace+3)^(0+1280),f,c
  7858  004C68  501C               	movf	(??_isspace+3)^(0+1280),w,c
  7859  004C6A  E104               	bnz	u6330
  7860  004C6C  0E05               	movlw	5
  7861  004C6E  5C1B               	subwf	(??_isspace+2)^(0+1280),w,c
  7862  004C70  A0D8               	btfss	status,0,c
  7863  004C72  D002               	goto	l5134
  7864  004C74                     u6330:
  7865  004C74  0E00               	movlw	0
  7866  004C76  6E1D               	movwf	_isspace$963^(0+1280),c
  7867  004C78                     l5134:
  7868  004C78  C51D  F517         	movff	_isspace$963,?_isspace
  7869  004C7C  6A18               	clrf	(?_isspace+1)^(0+1280),c
  7870  004C7E  0012               	return		;funcret
  7871  004C80                     __end_of_isspace:
  7872                           	callstack 0
  7873                           
  7874 ;; *************** function _isdigit *****************
  7875 ;; Defined at:
  7876 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  c               2   22[COMRAM] int 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;		None
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  2   22[COMRAM] int 
  7883 ;; Registers used:
  7884 ;;		wreg, status,2, status,0
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7892 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7893 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7894 ;;Total ram usage:        6 bytes
  7895 ;; Hardware stack levels used: 1
  7896 ;; Hardware stack levels required when called: 2
  7897 ;; This function calls:
  7898 ;;		Nothing
  7899 ;; This function is called by:
  7900 ;;		_vfpfcnvrt
  7901 ;;		_atoi
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text28
  7906  004D96                     __ptext28:
  7907                           	callstack 0
  7908  004D96                     _isdigit:
  7909                           	callstack 121
  7910                           
  7911                           ;incstack = 0
  7912  004D96  0ED0               	movlw	208
  7913  004D98  6E19               	movwf	??_isdigit^(0+1280),c
  7914  004D9A  0EFF               	movlw	255
  7915  004D9C  6E1A               	movwf	(??_isdigit+1)^(0+1280),c
  7916  004D9E  C517  F51B         	movff	isdigit@c,??_isdigit+2
  7917  004DA2  C518  F51C         	movff	isdigit@c+1,??_isdigit+3
  7918  004DA6  5019               	movf	??_isdigit^(0+1280),w,c
  7919  004DA8  261B               	addwf	(??_isdigit+2)^(0+1280),f,c
  7920  004DAA  501A               	movf	(??_isdigit+1)^(0+1280),w,c
  7921  004DAC  221C               	addwfc	(??_isdigit+3)^(0+1280),f,c
  7922  004DAE  501C               	movf	(??_isdigit+3)^(0+1280),w,c
  7923  004DB0  E106               	bnz	u6300
  7924  004DB2  0E0A               	movlw	10
  7925  004DB4  5C1B               	subwf	(??_isdigit+2)^(0+1280),w,c
  7926  004DB6  B0D8               	btfsc	status,0,c
  7927  004DB8  D002               	goto	u6300
  7928  004DBA  0E01               	movlw	1
  7929  004DBC  D001               	goto	u6310
  7930  004DBE                     u6300:
  7931  004DBE  0E00               	movlw	0
  7932  004DC0                     u6310:
  7933  004DC0  6E17               	movwf	?_isdigit^(0+1280),c
  7934  004DC2  6A18               	clrf	(?_isdigit+1)^(0+1280),c
  7935  004DC4  0012               	return		;funcret
  7936  004DC6                     __end_of_isdigit:
  7937                           	callstack 0
  7938                           
  7939 ;; *************** function ___wmul *****************
  7940 ;; Defined at:
  7941 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  multiplier      2   22[COMRAM] unsigned int 
  7944 ;;  multiplicand    2   24[COMRAM] unsigned int 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  product         2   26[COMRAM] unsigned int 
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  2   22[COMRAM] unsigned int 
  7949 ;; Registers used:
  7950 ;;		wreg, status,2, status,0, prodl, prodh
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/5
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7957 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7959 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7960 ;;Total ram usage:        6 bytes
  7961 ;; Hardware stack levels used: 1
  7962 ;; Hardware stack levels required when called: 2
  7963 ;; This function calls:
  7964 ;;		Nothing
  7965 ;; This function is called by:
  7966 ;;		_atoi
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text29
  7971  004E22                     __ptext29:
  7972                           	callstack 0
  7973  004E22                     ___wmul:
  7974                           	callstack 120
  7975                           
  7976                           ;incstack = 0
  7977  004E22  5017               	movf	___wmul@multiplier^(0+1280),w,c
  7978  004E24  0219               	mulwf	___wmul@multiplicand^(0+1280),c
  7979  004E26  0061 F3CC  F51B    	movff	prodl,___wmul@product
  7980  004E2C  0061 F3D0  F51C    	movff	prodh,___wmul@product+1
  7981  004E32  5017               	movf	___wmul@multiplier^(0+1280),w,c
  7982  004E34  021A               	mulwf	(___wmul@multiplicand+1)^(0+1280),c
  7983  004E36  50F3               	movf	243,w,c
  7984  004E38  261C               	addwf	(___wmul@product+1)^(0+1280),f,c
  7985  004E3A  5018               	movf	(___wmul@multiplier+1)^(0+1280),w,c
  7986  004E3C  0219               	mulwf	___wmul@multiplicand^(0+1280),c
  7987  004E3E  50F3               	movf	243,w,c
  7988  004E40  261C               	addwf	(___wmul@product+1)^(0+1280),f,c
  7989  004E42  C51B  F517         	movff	___wmul@product,?___wmul
  7990  004E46  C51C  F518         	movff	___wmul@product+1,?___wmul+1
  7991  004E4A  0012               	return		;funcret
  7992  004E4C                     __end_of___wmul:
  7993                           	callstack 0
  7994                           
  7995 ;; *************** function _led_matrix_write *****************
  7996 ;; Defined at:
  7997 ;;		line 234 in file "TD4-monitor.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;  r1              1    wreg     unsigned char 
  8000 ;;  c1              1   22[COMRAM] unsigned char 
  8001 ;;  r2              1   23[COMRAM] unsigned char 
  8002 ;;  c2              1   24[COMRAM] unsigned char 
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;  r1              1   25[COMRAM] unsigned char 
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  1    wreg      void 
  8007 ;; Registers used:
  8008 ;;		wreg, status,2
  8009 ;; Tracked objects:
  8010 ;;		On entry : 3B/4
  8011 ;;		On exit  : 3F/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8014 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8018 ;;Total ram usage:        4 bytes
  8019 ;; Hardware stack levels used: 1
  8020 ;; Hardware stack levels required when called: 2
  8021 ;; This function calls:
  8022 ;;		Nothing
  8023 ;; This function is called by:
  8024 ;;		_main
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           	psect	text30
  8029  004CBA                     __ptext30:
  8030                           	callstack 0
  8031  004CBA                     _led_matrix_write:
  8032                           	callstack 124
  8033                           
  8034                           ;incstack = 0
  8035                           ;led_matrix_write@r1 stored from wreg
  8036  004CBA  6E1A               	movwf	led_matrix_write@r1^(0+1280),c
  8037  004CBC                     
  8038                           ;TD4-monitor.c: 235:  while(SPI1CON2bits.BUSY);
  8039  004CBC  0100               	movlb	0	; () banked
  8040  004CBE  BF86               	btfsc	134,7,b	;volatile
  8041  004CC0  D7FD               	goto	l4058
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;TD4-monitor.c: 236:  SPI1TCNT = 4;
  8045  004CC2  0E00               	movlw	0
  8046  004CC4  6F83               	movwf	131,b	;volatile
  8047  004CC6  0E04               	movlw	4
  8048  004CC8  6F82               	movwf	130,b	;volatile
  8049  004CCA                     l220:
  8050                           
  8051                           ; BSR set to: 0
  8052  004CCA  BF86               	btfsc	134,7,b	;volatile
  8053  004CCC  D7FE               	goto	l220
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;TD4-monitor.c: 238:  SPI1TXB = r2;
  8057  004CCE  0061  F460  F081   	movff	led_matrix_write@r2,129	;volatile
  8058  004CD4                     l223:
  8059                           
  8060                           ; BSR set to: 0
  8061  004CD4  BF86               	btfsc	134,7,b	;volatile
  8062  004CD6  D7FE               	goto	l223
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;TD4-monitor.c: 240:  SPI1TXB = c2;
  8066  004CD8  0061  F464  F081   	movff	led_matrix_write@c2,129	;volatile
  8067  004CDE                     l226:
  8068                           
  8069                           ; BSR set to: 0
  8070  004CDE  BF86               	btfsc	134,7,b	;volatile
  8071  004CE0  D7FE               	goto	l226
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;TD4-monitor.c: 242:  SPI1TXB = r1;
  8075  004CE2  0061  F468  F081   	movff	led_matrix_write@r1,129	;volatile
  8076  004CE8                     l229:
  8077                           
  8078                           ; BSR set to: 0
  8079  004CE8  BF86               	btfsc	134,7,b	;volatile
  8080  004CEA  D7FE               	goto	l229
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;TD4-monitor.c: 244:  SPI1TXB = c1;
  8084  004CEC  0061  F45C  F081   	movff	led_matrix_write@c1,129	;volatile
  8085                           
  8086                           ; BSR set to: 0
  8087  004CF2  0012               	return		;funcret
  8088  004CF4                     __end_of_led_matrix_write:
  8089                           	callstack 0
  8090                           
  8091 ;; *************** function _led_7seg_write *****************
  8092 ;; Defined at:
  8093 ;;		line 247 in file "TD4-monitor.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  r               1    wreg     unsigned char 
  8096 ;;  c               1   22[COMRAM] unsigned char 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  r               1   23[COMRAM] unsigned char 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      void 
  8101 ;; Registers used:
  8102 ;;		wreg, status,2
  8103 ;; Tracked objects:
  8104 ;;		On entry : 3F/0
  8105 ;;		On exit  : 3F/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8108 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8111 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8112 ;;Total ram usage:        2 bytes
  8113 ;; Hardware stack levels used: 1
  8114 ;; Hardware stack levels required when called: 2
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		_main
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text31
  8123  004E4C                     __ptext31:
  8124                           	callstack 0
  8125  004E4C                     _led_7seg_write:
  8126                           	callstack 124
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;incstack = 0
  8130                           ;led_7seg_write@r stored from wreg
  8131  004E4C  6E18               	movwf	led_7seg_write@r^(0+1280),c
  8132  004E4E                     
  8133                           ;TD4-monitor.c: 250:  while(SPI2CON2bits.BUSY);
  8134  004E4E  0100               	movlb	0	; () banked
  8135  004E50  BF93               	btfsc	147,7,b	;volatile
  8136  004E52  D7FD               	goto	l4064
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;TD4-monitor.c: 251:  SPI2TCNT = 2;
  8140  004E54  0E00               	movlw	0
  8141  004E56  6F90               	movwf	144,b	;volatile
  8142  004E58  0E02               	movlw	2
  8143  004E5A  6F8F               	movwf	143,b	;volatile
  8144  004E5C                     l238:
  8145                           
  8146                           ; BSR set to: 0
  8147  004E5C  BF93               	btfsc	147,7,b	;volatile
  8148  004E5E  D7FE               	goto	l238
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;TD4-monitor.c: 253:  SPI2TXB = r;
  8152  004E60  0061  F460  F08E   	movff	led_7seg_write@r,142	;volatile
  8153  004E66                     l241:
  8154                           
  8155                           ; BSR set to: 0
  8156  004E66  BF93               	btfsc	147,7,b	;volatile
  8157  004E68  D7FE               	goto	l241
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;TD4-monitor.c: 255:  SPI2TXB = c;
  8161  004E6A  0061  F45C  F08E   	movff	led_7seg_write@c,142	;volatile
  8162                           
  8163                           ; BSR set to: 0
  8164  004E70  0012               	return		;funcret
  8165  004E72                     __end_of_led_7seg_write:
  8166                           	callstack 0
  8167                           
  8168 ;; *************** function ___xxtofl *****************
  8169 ;; Defined at:
  8170 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  8171 ;; Parameters:    Size  Location     Type
  8172 ;;  sign            1    wreg     unsigned char 
  8173 ;;  val             4   22[COMRAM] long 
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;  sign            1   30[COMRAM] unsigned char 
  8176 ;;  arg             4   32[COMRAM] unsigned long 
  8177 ;;  exp             1   31[COMRAM] unsigned char 
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  4   22[COMRAM] unsigned char 
  8180 ;; Registers used:
  8181 ;;		wreg, status,2, status,0
  8182 ;; Tracked objects:
  8183 ;;		On entry : 3F/4
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8188 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8189 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8190 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8191 ;;Total ram usage:       14 bytes
  8192 ;; Hardware stack levels used: 1
  8193 ;; Hardware stack levels required when called: 2
  8194 ;; This function calls:
  8195 ;;		Nothing
  8196 ;; This function is called by:
  8197 ;;		_main
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text32
  8202  004182                     __ptext32:
  8203                           	callstack 0
  8204  004182                     ___xxtofl:
  8205                           	callstack 124
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;incstack = 0
  8209                           ;___xxtofl@sign stored from wreg
  8210  004182  6E1F               	movwf	___xxtofl@sign^(0+1280),c
  8211  004184  501F               	movf	___xxtofl@sign^(0+1280),w,c
  8212  004186  A4D8               	btfss	status,2,c
  8213  004188  AE1A               	btfss	(___xxtofl@val+3)^(0+1280),7,c
  8214  00418A  D01A               	goto	l928
  8215  00418C  C517  F51B         	movff	___xxtofl@val,??___xxtofl
  8216  004190  C518  F51C         	movff	___xxtofl@val+1,??___xxtofl+1
  8217  004194  C519  F51D         	movff	___xxtofl@val+2,??___xxtofl+2
  8218  004198  C51A  F51E         	movff	___xxtofl@val+3,??___xxtofl+3
  8219  00419C  1E1B               	comf	??___xxtofl^(0+1280),f,c
  8220  00419E  1E1C               	comf	(??___xxtofl+1)^(0+1280),f,c
  8221  0041A0  1E1D               	comf	(??___xxtofl+2)^(0+1280),f,c
  8222  0041A2  1E1E               	comf	(??___xxtofl+3)^(0+1280),f,c
  8223  0041A4  2A1B               	incf	??___xxtofl^(0+1280),f,c
  8224  0041A6  0E00               	movlw	0
  8225  0041A8  221C               	addwfc	(??___xxtofl+1)^(0+1280),f,c
  8226  0041AA  221D               	addwfc	(??___xxtofl+2)^(0+1280),f,c
  8227  0041AC  221E               	addwfc	(??___xxtofl+3)^(0+1280),f,c
  8228  0041AE  C51B  F521         	movff	??___xxtofl,___xxtofl@arg
  8229  0041B2  C51C  F522         	movff	??___xxtofl+1,___xxtofl@arg+1
  8230  0041B6  C51D  F523         	movff	??___xxtofl+2,___xxtofl@arg+2
  8231  0041BA  C51E  F524         	movff	??___xxtofl+3,___xxtofl@arg+3
  8232  0041BE  D008               	goto	l4082
  8233  0041C0                     l928:
  8234  0041C0  C517  F521         	movff	___xxtofl@val,___xxtofl@arg
  8235  0041C4  C518  F522         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8236  0041C8  C519  F523         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8237  0041CC  C51A  F524         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8238  0041D0                     l4082:
  8239  0041D0  5017               	movf	___xxtofl@val^(0+1280),w,c
  8240  0041D2  1018               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
  8241  0041D4  1019               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
  8242  0041D6  101A               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
  8243  0041D8  A4D8               	btfss	status,2,c
  8244  0041DA  D009               	goto	l4088
  8245  0041DC  0E00               	movlw	0
  8246  0041DE  6E17               	movwf	?___xxtofl^(0+1280),c
  8247  0041E0  0E00               	movlw	0
  8248  0041E2  6E18               	movwf	(?___xxtofl+1)^(0+1280),c
  8249  0041E4  0E00               	movlw	0
  8250  0041E6  6E19               	movwf	(?___xxtofl+2)^(0+1280),c
  8251  0041E8  0E00               	movlw	0
  8252  0041EA  6E1A               	movwf	(?___xxtofl+3)^(0+1280),c
  8253  0041EC  0012               	return	
  8254  0041EE                     l4088:
  8255  0041EE  0E96               	movlw	150
  8256  0041F0  6E20               	movwf	___xxtofl@exp^(0+1280),c
  8257  0041F2  D006               	goto	l4092
  8258  0041F4                     l4090:
  8259  0041F4  2A20               	incf	___xxtofl@exp^(0+1280),f,c
  8260  0041F6  90D8               	bcf	status,0,c
  8261  0041F8  3224               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  8262  0041FA  3223               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  8263  0041FC  3222               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  8264  0041FE  3221               	rrcf	___xxtofl@arg^(0+1280),f,c
  8265  004200                     l4092:
  8266  004200  0E00               	movlw	0
  8267  004202  1421               	andwf	___xxtofl@arg^(0+1280),w,c
  8268  004204  6E1B               	movwf	??___xxtofl^(0+1280),c
  8269  004206  0E00               	movlw	0
  8270  004208  1422               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  8271  00420A  6E1C               	movwf	(??___xxtofl+1)^(0+1280),c
  8272  00420C  0E00               	movlw	0
  8273  00420E  1423               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  8274  004210  6E1D               	movwf	(??___xxtofl+2)^(0+1280),c
  8275  004212  0EFE               	movlw	254
  8276  004214  1424               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  8277  004216  6E1E               	movwf	(??___xxtofl+3)^(0+1280),c
  8278  004218  501B               	movf	??___xxtofl^(0+1280),w,c
  8279  00421A  101C               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  8280  00421C  101D               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  8281  00421E  101E               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  8282  004220  B4D8               	btfsc	status,2,c
  8283  004222  D00D               	goto	l935
  8284  004224  D7E7               	goto	l4090
  8285  004226                     l4094:
  8286  004226  2A20               	incf	___xxtofl@exp^(0+1280),f,c
  8287  004228  0E01               	movlw	1
  8288  00422A  2621               	addwf	___xxtofl@arg^(0+1280),f,c
  8289  00422C  0E00               	movlw	0
  8290  00422E  2222               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
  8291  004230  2223               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
  8292  004232  2224               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
  8293  004234  90D8               	bcf	status,0,c
  8294  004236  3224               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  8295  004238  3223               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  8296  00423A  3222               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  8297  00423C  3221               	rrcf	___xxtofl@arg^(0+1280),f,c
  8298  00423E                     l935:
  8299  00423E  0E00               	movlw	0
  8300  004240  1421               	andwf	___xxtofl@arg^(0+1280),w,c
  8301  004242  6E1B               	movwf	??___xxtofl^(0+1280),c
  8302  004244  0E00               	movlw	0
  8303  004246  1422               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  8304  004248  6E1C               	movwf	(??___xxtofl+1)^(0+1280),c
  8305  00424A  0E00               	movlw	0
  8306  00424C  1423               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  8307  00424E  6E1D               	movwf	(??___xxtofl+2)^(0+1280),c
  8308  004250  0EFF               	movlw	255
  8309  004252  1424               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  8310  004254  6E1E               	movwf	(??___xxtofl+3)^(0+1280),c
  8311  004256  501B               	movf	??___xxtofl^(0+1280),w,c
  8312  004258  101C               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  8313  00425A  101D               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  8314  00425C  101E               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  8315  00425E  B4D8               	btfsc	status,2,c
  8316  004260  D007               	goto	l4102
  8317  004262  D7E1               	goto	l4094
  8318  004264                     l4100:
  8319  004264  0620               	decf	___xxtofl@exp^(0+1280),f,c
  8320  004266  90D8               	bcf	status,0,c
  8321  004268  3621               	rlcf	___xxtofl@arg^(0+1280),f,c
  8322  00426A  3622               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
  8323  00426C  3623               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
  8324  00426E  3624               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
  8325  004270                     l4102:
  8326  004270  BE23               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
  8327  004272  D003               	goto	u4750
  8328  004274  0E02               	movlw	2
  8329  004276  6020               	cpfslt	___xxtofl@exp^(0+1280),c
  8330  004278  D7F5               	goto	l4100
  8331  00427A                     u4750:
  8332  00427A  A020               	btfss	___xxtofl@exp^(0+1280),0,c
  8333  00427C  9E23               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
  8334  00427E  90D8               	bcf	status,0,c
  8335  004280  3220               	rrcf	___xxtofl@exp^(0+1280),f,c
  8336  004282  C520  F51B         	movff	___xxtofl@exp,??___xxtofl
  8337  004286  6A1C               	clrf	(??___xxtofl+1)^(0+1280),c
  8338  004288  6A1D               	clrf	(??___xxtofl+2)^(0+1280),c
  8339  00428A  6A1E               	clrf	(??___xxtofl+3)^(0+1280),c
  8340  00428C  C51B  F51E         	movff	??___xxtofl,??___xxtofl+3
  8341  004290  6A1D               	clrf	(??___xxtofl+2)^(0+1280),c
  8342  004292  6A1C               	clrf	(??___xxtofl+1)^(0+1280),c
  8343  004294  6A1B               	clrf	??___xxtofl^(0+1280),c
  8344  004296  501B               	movf	??___xxtofl^(0+1280),w,c
  8345  004298  1221               	iorwf	___xxtofl@arg^(0+1280),f,c
  8346  00429A  501C               	movf	(??___xxtofl+1)^(0+1280),w,c
  8347  00429C  1222               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
  8348  00429E  501D               	movf	(??___xxtofl+2)^(0+1280),w,c
  8349  0042A0  1223               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
  8350  0042A2  501E               	movf	(??___xxtofl+3)^(0+1280),w,c
  8351  0042A4  1224               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
  8352  0042A6  501F               	movf	___xxtofl@sign^(0+1280),w,c
  8353  0042A8  A4D8               	btfss	status,2,c
  8354  0042AA  AE1A               	btfss	(___xxtofl@val+3)^(0+1280),7,c
  8355  0042AC  D001               	goto	l4118
  8356  0042AE  8E24               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
  8357  0042B0                     l4118:
  8358  0042B0  C521  F517         	movff	___xxtofl@arg,?___xxtofl
  8359  0042B4  C522  F518         	movff	___xxtofl@arg+1,?___xxtofl+1
  8360  0042B8  C523  F519         	movff	___xxtofl@arg+2,?___xxtofl+2
  8361  0042BC  C524  F51A         	movff	___xxtofl@arg+3,?___xxtofl+3
  8362  0042C0  0012               	return		;funcret
  8363  0042C2                     __end_of___xxtofl:
  8364                           	callstack 0
  8365                           
  8366 ;; *************** function _Default_ISR *****************
  8367 ;; Defined at:
  8368 ;;		line 259 in file "TD4-monitor.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;		None
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;		None
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  1    wreg      void 
  8375 ;; Registers used:
  8376 ;;		None
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8386 ;;Total ram usage:        0 bytes
  8387 ;; Hardware stack levels used: 1
  8388 ;; This function calls:
  8389 ;;		Nothing
  8390 ;; This function is called by:
  8391 ;;		Interrupt level 2
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text33
  8396  004ED8                     __ptext33:
  8397                           	callstack 0
  8398  004ED8                     _Default_ISR:
  8399                           	callstack 118
  8400                           
  8401                           ;incstack = 0
  8402  004ED8  0011               	retfie		f
  8403  004EDA                     __end_of_Default_ISR:
  8404                           	callstack 0
  8405                           
  8406 ;; *************** function _TMR0_ISR *****************
  8407 ;; Defined at:
  8408 ;;		line 266 in file "TD4-monitor.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;		None
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  a1              1   13[COMRAM] unsigned char 
  8413 ;;  a0              1   12[COMRAM] unsigned char 
  8414 ;;  rom_a           1   11[COMRAM] unsigned char 
  8415 ;;  a2              1   10[COMRAM] unsigned char 
  8416 ;;  romdata2        1    9[COMRAM] unsigned char 
  8417 ;;  romdata1        1    8[COMRAM] unsigned char 
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  1    wreg      void 
  8420 ;; Registers used:
  8421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 3F/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8428 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8429 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8430 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8431 ;;Total ram usage:       10 bytes
  8432 ;; Hardware stack levels used: 1
  8433 ;; Hardware stack levels required when called: 1
  8434 ;; This function calls:
  8435 ;;		i2_led_matrix_write
  8436 ;; This function is called by:
  8437 ;;		Interrupt level 2
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text34
  8442  0047D4                     __ptext34:
  8443                           	callstack 0
  8444  0047D4                     _TMR0_ISR:
  8445                           	callstack 117
  8446                           
  8447                           ;TD4-monitor.c: 270:  unsigned char romdata1,romdata2,rom_a,a0,a1,a2;;TD4-monitor.c: 272
      +                          :  romdata1 = TD4_ROM[scan_pointer];
  8448                           
  8449                           ;incstack = 0
  8450  0047D4  0ED8               	movlw	low _TD4_ROM
  8451  0047D6  2446               	addwf	_scan_pointer^(0+1280),w,c
  8452  0047D8  6ED9               	movwf	fsr2l,c
  8453  0047DA  6ADA               	clrf	fsr2h,c
  8454  0047DC  0E05               	movlw	high _TD4_ROM
  8455  0047DE  22DA               	addwfc	fsr2h,f,c
  8456  0047E0  50DF               	movf	indf2,w,c
  8457  0047E2  6E09               	movwf	TMR0_ISR@romdata1^(0+1280),c
  8458                           
  8459                           ;TD4-monitor.c: 273:  romdata2 = TD4_ROM[scan_pointer+8];
  8460  0047E4  0EE0               	movlw	low (_TD4_ROM+8)
  8461  0047E6  2446               	addwf	_scan_pointer^(0+1280),w,c
  8462  0047E8  6ED9               	movwf	fsr2l,c
  8463  0047EA  6ADA               	clrf	fsr2h,c
  8464  0047EC  0E05               	movlw	high (_TD4_ROM+8)
  8465  0047EE  22DA               	addwfc	fsr2h,f,c
  8466  0047F0  50DF               	movf	indf2,w,c
  8467  0047F2  6E0A               	movwf	TMR0_ISR@romdata2^(0+1280),c
  8468                           
  8469                           ;TD4-monitor.c: 274:  rom_a = (PORTA & 0x0f);
  8470  0047F4  50CE               	movf	206,w,c	;volatile
  8471  0047F6  0B0F               	andlw	15
  8472  0047F8  6E0C               	movwf	TMR0_ISR@rom_a^(0+1280),c
  8473                           
  8474                           ;TD4-monitor.c: 276:  a0 = scan_pointer+1;
  8475  0047FA  2846               	incf	_scan_pointer^(0+1280),w,c
  8476  0047FC  6E0D               	movwf	TMR0_ISR@a0^(0+1280),c
  8477                           
  8478                           ;TD4-monitor.c: 277:  a1 = scan_pointer2+1;
  8479  0047FE  2845               	incf	_scan_pointer2^(0+1280),w,c
  8480  004800  6E0E               	movwf	TMR0_ISR@a1^(0+1280),c
  8481                           
  8482                           ;TD4-monitor.c: 278:  a2 = a1;
  8483  004802  C50E  F50B         	movff	TMR0_ISR@a1,TMR0_ISR@a2
  8484                           
  8485                           ;TD4-monitor.c: 280:  if(rom_a == scan_pointer2){
  8486  004806  5045               	movf	_scan_pointer2^(0+1280),w,c
  8487  004808  180C               	xorwf	TMR0_ISR@rom_a^(0+1280),w,c
  8488  00480A  A4D8               	btfss	status,2,c
  8489  00480C  D003               	goto	i2l4148
  8490                           
  8491                           ;TD4-monitor.c: 281:   a1=0;
  8492  00480E  0E00               	movlw	0
  8493  004810  6E0E               	movwf	TMR0_ISR@a1^(0+1280),c
  8494                           
  8495                           ;TD4-monitor.c: 282:  }else if (rom_a == scan_pointer2+8){
  8496  004812  D013               	goto	i2l4152
  8497  004814                     i2l4148:
  8498  004814  500C               	movf	TMR0_ISR@rom_a^(0+1280),w,c
  8499  004816  6E05               	movwf	??_TMR0_ISR^(0+1280),c
  8500  004818  6A06               	clrf	(??_TMR0_ISR+1)^(0+1280),c
  8501  00481A  5045               	movf	_scan_pointer2^(0+1280),w,c
  8502  00481C  6E07               	movwf	(??_TMR0_ISR+2)^(0+1280),c
  8503  00481E  6A08               	clrf	(??_TMR0_ISR+3)^(0+1280),c
  8504  004820  0E08               	movlw	8
  8505  004822  2607               	addwf	(??_TMR0_ISR+2)^(0+1280),f,c
  8506  004824  0E00               	movlw	0
  8507  004826  2208               	addwfc	(??_TMR0_ISR+3)^(0+1280),f,c
  8508  004828  5005               	movf	??_TMR0_ISR^(0+1280),w,c
  8509  00482A  1807               	xorwf	(??_TMR0_ISR+2)^(0+1280),w,c
  8510  00482C  E106               	bnz	i2l4152
  8511  00482E  5006               	movf	(??_TMR0_ISR+1)^(0+1280),w,c
  8512  004830  1808               	xorwf	(??_TMR0_ISR+3)^(0+1280),w,c
  8513  004832  A4D8               	btfss	status,2,c
  8514  004834  D002               	goto	i2l4152
  8515                           
  8516                           ;TD4-monitor.c: 283:   a2=0;
  8517  004836  0E00               	movlw	0
  8518  004838  6E0B               	movwf	TMR0_ISR@a2^(0+1280),c
  8519  00483A                     i2l4152:
  8520                           
  8521                           ;TD4-monitor.c: 286:  led_matrix_write(a0,romdata1,a0,romdata2);
  8522  00483A  C509  F501         	movff	TMR0_ISR@romdata1,i2led_matrix_write@c1
  8523  00483E  C50D  F502         	movff	TMR0_ISR@a0,i2led_matrix_write@r2
  8524  004842  C50A  F503         	movff	TMR0_ISR@romdata2,i2led_matrix_write@c2
  8525  004846  500D               	movf	TMR0_ISR@a0^(0+1280),w,c
  8526  004848  EC7A  F026         	call	i2_led_matrix_write
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;TD4-monitor.c: 287:  led_matrix_write(a1,0,a2,0);
  8530  00484C  0E00               	movlw	0
  8531  00484E  6E01               	movwf	i2led_matrix_write@c1^(0+1280),c
  8532  004850  C50B  F502         	movff	TMR0_ISR@a2,i2led_matrix_write@r2
  8533  004854  0E00               	movlw	0
  8534  004856  6E03               	movwf	i2led_matrix_write@c2^(0+1280),c
  8535  004858  500E               	movf	TMR0_ISR@a1^(0+1280),w,c
  8536  00485A  EC7A  F026         	call	i2_led_matrix_write
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;TD4-monitor.c: 289:  scan_pointer2=((scan_pointer - 3)&0x07);
  8540  00485E  5046               	movf	_scan_pointer^(0+1280),w,c
  8541  004860  0FFD               	addlw	253
  8542  004862  0B07               	andlw	7
  8543  004864  6E45               	movwf	_scan_pointer2^(0+1280),c
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;TD4-monitor.c: 290:  ++scan_pointer;
  8547  004866  2A46               	incf	_scan_pointer^(0+1280),f,c
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;TD4-monitor.c: 291:  scan_pointer &= 0x07;
  8551  004868  0E07               	movlw	7
  8552  00486A  1646               	andwf	_scan_pointer^(0+1280),f,c
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;TD4-monitor.c: 293:  TMR0IF = 0;
  8556  00486C  9EB1               	bcf	1201,7,c	;volatile
  8557                           
  8558                           ; BSR set to: 0
  8559  00486E  0011               	retfie		f
  8560  004870                     __end_of_TMR0_ISR:
  8561                           	callstack 0
  8562                           
  8563 ;; *************** function i2_led_matrix_write *****************
  8564 ;; Defined at:
  8565 ;;		line 234 in file "TD4-monitor.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;  r1              1    wreg     unsigned char 
  8568 ;;  c1              1    0[COMRAM] unsigned char 
  8569 ;;  r2              1    1[COMRAM] unsigned char 
  8570 ;;  c2              1    2[COMRAM] unsigned char 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;  r1              1    3[COMRAM] unsigned char 
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1    wreg      void 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 3F/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8582 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8585 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8586 ;;Total ram usage:        4 bytes
  8587 ;; Hardware stack levels used: 1
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_TMR0_ISR
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text35
  8596  004CF4                     __ptext35:
  8597                           	callstack 0
  8598  004CF4                     i2_led_matrix_write:
  8599                           	callstack 117
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;incstack = 0
  8603                           ;i2led_matrix_write@r1 stored from wreg
  8604  004CF4  6E04               	movwf	i2led_matrix_write@r1^(0+1280),c
  8605  004CF6                     
  8606                           ;TD4-monitor.c: 235:  while(SPI1CON2bits.BUSY);
  8607  004CF6  0100               	movlb	0	; () banked
  8608  004CF8  BF86               	btfsc	134,7,b	;volatile
  8609  004CFA  D7FD               	goto	i2l4122
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;TD4-monitor.c: 236:  SPI1TCNT = 4;
  8613  004CFC  0E00               	movlw	0
  8614  004CFE  6F83               	movwf	131,b	;volatile
  8615  004D00  0E04               	movlw	4
  8616  004D02  6F82               	movwf	130,b	;volatile
  8617  004D04                     i2l220:
  8618                           
  8619                           ; BSR set to: 0
  8620  004D04  BF86               	btfsc	134,7,b	;volatile
  8621  004D06  D7FE               	goto	i2l220
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;TD4-monitor.c: 238:  SPI1TXB = r2;
  8625  004D08  0061  F408  F081   	movff	i2led_matrix_write@r2,129	;volatile
  8626  004D0E                     i2l223:
  8627                           
  8628                           ; BSR set to: 0
  8629  004D0E  BF86               	btfsc	134,7,b	;volatile
  8630  004D10  D7FE               	goto	i2l223
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;TD4-monitor.c: 240:  SPI1TXB = c2;
  8634  004D12  0061  F40C  F081   	movff	i2led_matrix_write@c2,129	;volatile
  8635  004D18                     i2l226:
  8636                           
  8637                           ; BSR set to: 0
  8638  004D18  BF86               	btfsc	134,7,b	;volatile
  8639  004D1A  D7FE               	goto	i2l226
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;TD4-monitor.c: 242:  SPI1TXB = r1;
  8643  004D1C  0061  F410  F081   	movff	i2led_matrix_write@r1,129	;volatile
  8644  004D22                     i2l229:
  8645                           
  8646                           ; BSR set to: 0
  8647  004D22  BF86               	btfsc	134,7,b	;volatile
  8648  004D24  D7FE               	goto	i2l229
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;TD4-monitor.c: 244:  SPI1TXB = c1;
  8652  004D26  0061  F404  F081   	movff	i2led_matrix_write@c1,129	;volatile
  8653                           
  8654                           ; BSR set to: 0
  8655  004D2C  0012               	return		;funcret
  8656  004D2E                     __end_ofi2_led_matrix_write:
  8657                           	callstack 0
  8658                           
  8659 ;; *************** function _IOC_ISR *****************
  8660 ;; Defined at:
  8661 ;;		line 299 in file "TD4-monitor.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;		None
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;		None
  8666 ;; Return value:  Size  Location     Type
  8667 ;;                  1    wreg      void 
  8668 ;; Registers used:
  8669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8670 ;; Tracked objects:
  8671 ;;		On entry : 0/0
  8672 ;;		On exit  : 3F/4
  8673 ;;		Unchanged: 0/0
  8674 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8677 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8679 ;;Total ram usage:        6 bytes
  8680 ;; Hardware stack levels used: 1
  8681 ;; Hardware stack levels required when called: 1
  8682 ;; This function calls:
  8683 ;;		i2_led_7seg_write
  8684 ;; This function is called by:
  8685 ;;		Interrupt level 2
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           	psect	text36
  8690  004594                     __ptext36:
  8691                           	callstack 0
  8692  004594                     _IOC_ISR:
  8693                           	callstack 117
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;incstack = 0
  8697  004594  0061 F3D8  F513    	movff	tblptrl,??_IOC_ISR+2
  8698  00459A  0061 F3DC  F514    	movff	tblptrh,??_IOC_ISR+3
  8699  0045A0  0061 F3E0  F515    	movff	tblptru,??_IOC_ISR+4
  8700  0045A6  0061 F3D4  F516    	movff	tablat,??_IOC_ISR+5
  8701                           
  8702                           ;TD4-monitor.c: 301:  TD4_PC = PORTA & 0x0f;
  8703  0045AC  50CE               	movf	206,w,c	;volatile
  8704  0045AE  0B0F               	andlw	15
  8705  0045B0  6E49               	movwf	_TD4_PC^(0+1280),c
  8706                           
  8707                           ;TD4-monitor.c: 302:  LATD = TD4_ROM[TD4_PC];
  8708  0045B2  0ED8               	movlw	low _TD4_ROM
  8709  0045B4  2449               	addwf	_TD4_PC^(0+1280),w,c
  8710  0045B6  6ED9               	movwf	fsr2l,c
  8711  0045B8  6ADA               	clrf	fsr2h,c
  8712  0045BA  0E05               	movlw	high _TD4_ROM
  8713  0045BC  22DA               	addwfc	fsr2h,f,c
  8714  0045BE  50DF               	movf	indf2,w,c
  8715  0045C0  6EC1               	movwf	193,c	;volatile
  8716                           
  8717                           ;TD4-monitor.c: 303:  led_7seg_write(5,led_font[TD4_PC]);
  8718  0045C2  5049               	movf	_TD4_PC^(0+1280),w,c
  8719  0045C4  0F01               	addlw	low _led_font
  8720  0045C6  6E11               	movwf	??_IOC_ISR^(0+1280),c
  8721  0045C8  0061  F444  F4F6   	movff	??_IOC_ISR,tblptrl
  8722  0045CE                     	if	1	;There is more than 1 active tblptr byte
  8723  0045CE  0E25               	movlw	high __smallconst
  8724  0045D0  6EF7               	movwf	tblptrh,c
  8725  0045D2                     	endif
  8726  0045D2                     	if	0	;tblptru may be non-zero
  8727  0045D2                     	endif
  8728  0045D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8729  0045D2  0E00               	movlw	low (__smallconst shr (0+16))
  8730  0045D4  6EF8               	movwf	tblptru,c
  8731  0045D6                     	endif
  8732  0045D6  0008               	tblrd		*
  8733  0045D8  0061 F3D4  F50F    	movff	tablat,i2led_7seg_write@c
  8734  0045DE  0E05               	movlw	5
  8735  0045E0  EC39  F027         	call	i2_led_7seg_write
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;TD4-monitor.c: 304:  led_7seg_write(2,led_font[LATD>>4]);
  8739  0045E4  0061 F304  F511    	movff	1217,??_IOC_ISR	;volatile
  8740  0045EA  3A11               	swapf	??_IOC_ISR^(0+1280),f,c
  8741  0045EC  0E0F               	movlw	15
  8742  0045EE  1611               	andwf	??_IOC_ISR^(0+1280),f,c
  8743  0045F0  5011               	movf	??_IOC_ISR^(0+1280),w,c
  8744  0045F2  0F01               	addlw	low _led_font
  8745  0045F4  6E12               	movwf	(??_IOC_ISR+1)^(0+1280),c
  8746  0045F6  0061  F448  F4F6   	movff	??_IOC_ISR+1,tblptrl
  8747  0045FC                     	if	1	;There is more than 1 active tblptr byte
  8748  0045FC  0E25               	movlw	high __smallconst
  8749  0045FE  6EF7               	movwf	tblptrh,c
  8750  004600                     	endif
  8751  004600                     	if	0	;tblptru may be non-zero
  8752  004600                     	endif
  8753  004600                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8754  004600  0E00               	movlw	low (__smallconst shr (0+16))
  8755  004602  6EF8               	movwf	tblptru,c
  8756  004604                     	endif
  8757  004604  0008               	tblrd		*
  8758  004606  0061 F3D4  F50F    	movff	tablat,i2led_7seg_write@c
  8759  00460C  0E02               	movlw	2
  8760  00460E  EC39  F027         	call	i2_led_7seg_write
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;TD4-monitor.c: 305:  led_7seg_write(1,led_font[LATD&0x0f]);
  8764  004612  0061 F304  F511    	movff	1217,??_IOC_ISR	;volatile
  8765  004618  0E0F               	movlw	15
  8766  00461A  1611               	andwf	??_IOC_ISR^(0+1280),f,c
  8767  00461C  5011               	movf	??_IOC_ISR^(0+1280),w,c
  8768  00461E  0F01               	addlw	low _led_font
  8769  004620  6E12               	movwf	(??_IOC_ISR+1)^(0+1280),c
  8770  004622  0061  F448  F4F6   	movff	??_IOC_ISR+1,tblptrl
  8771  004628                     	if	1	;There is more than 1 active tblptr byte
  8772  004628  0E25               	movlw	high __smallconst
  8773  00462A  6EF7               	movwf	tblptrh,c
  8774  00462C                     	endif
  8775  00462C                     	if	0	;tblptru may be non-zero
  8776  00462C                     	endif
  8777  00462C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8778  00462C  0E00               	movlw	low (__smallconst shr (0+16))
  8779  00462E  6EF8               	movwf	tblptru,c
  8780  004630                     	endif
  8781  004630  0008               	tblrd		*
  8782  004632  0061 F3D4  F50F    	movff	tablat,i2led_7seg_write@c
  8783  004638  0E01               	movlw	1
  8784  00463A  EC39  F027         	call	i2_led_7seg_write
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;TD4-monitor.c: 307:  IOCIF = 0;
  8788  00463E  9EAE               	bcf	1198,7,c	;volatile
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;TD4-monitor.c: 308:  IOCCF5 = 0;
  8792  004640  0104               	movlb	4	; () banked
  8793  004642  9B17               	bcf	23,5,b	;volatile
  8794                           
  8795                           ; BSR set to: 4
  8796  004644  0061  F458  F4F5   	movff	??_IOC_ISR+5,tablat
  8797  00464A  0061  F454  F4F8   	movff	??_IOC_ISR+4,tblptru
  8798  004650  0061  F450  F4F7   	movff	??_IOC_ISR+3,tblptrh
  8799  004656  0061  F44C  F4F6   	movff	??_IOC_ISR+2,tblptrl
  8800  00465C  0011               	retfie		f
  8801  00465E                     __end_of_IOC_ISR:
  8802                           	callstack 0
  8803                           
  8804 ;; *************** function i2_led_7seg_write *****************
  8805 ;; Defined at:
  8806 ;;		line 247 in file "TD4-monitor.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;  r               1    wreg     unsigned char 
  8809 ;;  c               1   14[COMRAM] unsigned char 
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;  r               1   15[COMRAM] unsigned char 
  8812 ;; Return value:  Size  Location     Type
  8813 ;;                  1    wreg      void 
  8814 ;; Registers used:
  8815 ;;		wreg, status,2
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 3F/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8821 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8825 ;;Total ram usage:        2 bytes
  8826 ;; Hardware stack levels used: 1
  8827 ;; This function calls:
  8828 ;;		Nothing
  8829 ;; This function is called by:
  8830 ;;		_IOC_ISR
  8831 ;; This function uses a non-reentrant model
  8832 ;;
  8833                           
  8834                           	psect	text37
  8835  004E72                     __ptext37:
  8836                           	callstack 0
  8837  004E72                     i2_led_7seg_write:
  8838                           	callstack 117
  8839                           
  8840                           ; BSR set to: 4
  8841                           ;incstack = 0
  8842                           ;i2led_7seg_write@r stored from wreg
  8843  004E72  6E10               	movwf	i2led_7seg_write@r^(0+1280),c
  8844  004E74                     
  8845                           ;TD4-monitor.c: 250:  while(SPI2CON2bits.BUSY);
  8846  004E74  0100               	movlb	0	; () banked
  8847  004E76  BF93               	btfsc	147,7,b	;volatile
  8848  004E78  D7FD               	goto	i2l4128
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;TD4-monitor.c: 251:  SPI2TCNT = 2;
  8852  004E7A  0E00               	movlw	0
  8853  004E7C  6F90               	movwf	144,b	;volatile
  8854  004E7E  0E02               	movlw	2
  8855  004E80  6F8F               	movwf	143,b	;volatile
  8856  004E82                     i2l238:
  8857                           
  8858                           ; BSR set to: 0
  8859  004E82  BF93               	btfsc	147,7,b	;volatile
  8860  004E84  D7FE               	goto	i2l238
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;TD4-monitor.c: 253:  SPI2TXB = r;
  8864  004E86  0061  F440  F08E   	movff	i2led_7seg_write@r,142	;volatile
  8865  004E8C                     i2l241:
  8866                           
  8867                           ; BSR set to: 0
  8868  004E8C  BF93               	btfsc	147,7,b	;volatile
  8869  004E8E  D7FE               	goto	i2l241
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;TD4-monitor.c: 255:  SPI2TXB = c;
  8873  004E90  0061  F43C  F08E   	movff	i2led_7seg_write@c,142	;volatile
  8874                           
  8875                           ; BSR set to: 0
  8876  004E96  0012               	return		;funcret
  8877  004E98                     __end_ofi2_led_7seg_write:
  8878                           	callstack 0
  8879                           
  8880                           ;
  8881                           ; Interrupt Vector Table @ 0x8
  8882                           ;
  8883                           
  8884                           	psect	ivt0x8
  8885  000008                     __pivt0x8:
  8886                           	callstack 0
  8887  000008                     ivt0x8_base:
  8888                           	callstack 0
  8889                           
  8890                           ; Vector 0 : SWINT
  8891  000008  13B6               	dw	_Default_ISR shr (0+2)
  8892                           
  8893                           ; Vector 1 : HLVD
  8894  00000A  13B6               	dw	_Default_ISR shr (0+2)
  8895                           
  8896                           ; Vector 2 : OSF
  8897  00000C  13B6               	dw	_Default_ISR shr (0+2)
  8898                           
  8899                           ; Vector 3 : CSW
  8900  00000E  13B6               	dw	_Default_ISR shr (0+2)
  8901                           
  8902                           ; Vector 4 : Undefined
  8903  000010  0040               	dw	ivt0x8_undefint shr (0+2)
  8904                           
  8905                           ; Vector 5 : CLC1
  8906  000012  13B6               	dw	_Default_ISR shr (0+2)
  8907                           
  8908                           ; Vector 6 : Undefined
  8909  000014  0040               	dw	ivt0x8_undefint shr (0+2)
  8910                           
  8911                           ; Vector 7 : IOC
  8912  000016  1165               	dw	_IOC_ISR shr (0+2)
  8913                           
  8914                           ; Vector 8 : INT0
  8915  000018  13B6               	dw	_Default_ISR shr (0+2)
  8916                           
  8917                           ; Vector 9 : ZCD
  8918  00001A  13B6               	dw	_Default_ISR shr (0+2)
  8919                           
  8920                           ; Vector 10 : AD
  8921  00001C  13B6               	dw	_Default_ISR shr (0+2)
  8922                           
  8923                           ; Vector 11 : ACT
  8924  00001E  13B6               	dw	_Default_ISR shr (0+2)
  8925                           
  8926                           ; Vector 12 : CMP1
  8927  000020  13B6               	dw	_Default_ISR shr (0+2)
  8928                           
  8929                           ; Vector 13 : SMT1
  8930  000022  13B6               	dw	_Default_ISR shr (0+2)
  8931                           
  8932                           ; Vector 14 : SMT1PRA
  8933  000024  13B6               	dw	_Default_ISR shr (0+2)
  8934                           
  8935                           ; Vector 15 : SMT1PRW
  8936  000026  13B6               	dw	_Default_ISR shr (0+2)
  8937                           
  8938                           ; Vector 16 : ADT
  8939  000028  13B6               	dw	_Default_ISR shr (0+2)
  8940                           
  8941                           ; Vector 17 : Undefined
  8942  00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  8943                           
  8944                           ; Vector 18 : Undefined
  8945  00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  8946                           
  8947                           ; Vector 19 : Undefined
  8948  00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  8949                           
  8950                           ; Vector 20 : DMA1SCNT
  8951  000030  13B6               	dw	_Default_ISR shr (0+2)
  8952                           
  8953                           ; Vector 21 : DMA1DCNT
  8954  000032  13B6               	dw	_Default_ISR shr (0+2)
  8955                           
  8956                           ; Vector 22 : DMA1OR
  8957  000034  13B6               	dw	_Default_ISR shr (0+2)
  8958                           
  8959                           ; Vector 23 : DMA1A
  8960  000036  13B6               	dw	_Default_ISR shr (0+2)
  8961                           
  8962                           ; Vector 24 : SPI1RX
  8963  000038  13B6               	dw	_Default_ISR shr (0+2)
  8964                           
  8965                           ; Vector 25 : SPI1TX
  8966  00003A  13B6               	dw	_Default_ISR shr (0+2)
  8967                           
  8968                           ; Vector 26 : SPI1
  8969  00003C  13B6               	dw	_Default_ISR shr (0+2)
  8970                           
  8971                           ; Vector 27 : TMR2
  8972  00003E  13B6               	dw	_Default_ISR shr (0+2)
  8973                           
  8974                           ; Vector 28 : TMR1
  8975  000040  13B6               	dw	_Default_ISR shr (0+2)
  8976                           
  8977                           ; Vector 29 : TMR1G
  8978  000042  13B6               	dw	_Default_ISR shr (0+2)
  8979                           
  8980                           ; Vector 30 : CCP1
  8981  000044  13B6               	dw	_Default_ISR shr (0+2)
  8982                           
  8983                           ; Vector 31 : TMR0
  8984  000046  11F5               	dw	_TMR0_ISR shr (0+2)
  8985                           
  8986                           ; Vector 32 : U1RX
  8987  000048  13B6               	dw	_Default_ISR shr (0+2)
  8988                           
  8989                           ; Vector 33 : U1TX
  8990  00004A  13B6               	dw	_Default_ISR shr (0+2)
  8991                           
  8992                           ; Vector 34 : U1E
  8993  00004C  13B6               	dw	_Default_ISR shr (0+2)
  8994                           
  8995                           ; Vector 35 : U1
  8996  00004E  13B6               	dw	_Default_ISR shr (0+2)
  8997                           
  8998                           ; Vector 36 : Undefined
  8999  000050  0040               	dw	ivt0x8_undefint shr (0+2)
  9000                           
  9001                           ; Vector 37 : Undefined
  9002  000052  0040               	dw	ivt0x8_undefint shr (0+2)
  9003                           
  9004                           ; Vector 38 : PWM1PR
  9005  000054  13B6               	dw	_Default_ISR shr (0+2)
  9006                           
  9007                           ; Vector 39 : PWM1
  9008  000056  13B6               	dw	_Default_ISR shr (0+2)
  9009                           
  9010                           ; Vector 40 : SPI2RX
  9011  000058  13B6               	dw	_Default_ISR shr (0+2)
  9012                           
  9013                           ; Vector 41 : SPI2TX
  9014  00005A  13B6               	dw	_Default_ISR shr (0+2)
  9015                           
  9016                           ; Vector 42 : SPI2
  9017  00005C  13B6               	dw	_Default_ISR shr (0+2)
  9018                           
  9019                           ; Vector 43 : Undefined
  9020  00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  9021                           
  9022                           ; Vector 44 : TMR3
  9023  000060  13B6               	dw	_Default_ISR shr (0+2)
  9024                           
  9025                           ; Vector 45 : TMR3G
  9026  000062  13B6               	dw	_Default_ISR shr (0+2)
  9027                           
  9028                           ; Vector 46 : PWM2PR
  9029  000064  13B6               	dw	_Default_ISR shr (0+2)
  9030                           
  9031                           ; Vector 47 : PWM2
  9032  000066  13B6               	dw	_Default_ISR shr (0+2)
  9033                           
  9034                           ; Vector 48 : INT1
  9035  000068  13B6               	dw	_Default_ISR shr (0+2)
  9036                           
  9037                           ; Vector 49 : CLC2
  9038  00006A  13B6               	dw	_Default_ISR shr (0+2)
  9039                           
  9040                           ; Vector 50 : CWG1
  9041  00006C  13B6               	dw	_Default_ISR shr (0+2)
  9042                           
  9043                           ; Vector 51 : NCO1
  9044  00006E  13B6               	dw	_Default_ISR shr (0+2)
  9045                           
  9046                           ; Vector 52 : DMA2SCNT
  9047  000070  13B6               	dw	_Default_ISR shr (0+2)
  9048                           
  9049                           ; Vector 53 : DMA2DCNT
  9050  000072  13B6               	dw	_Default_ISR shr (0+2)
  9051                           
  9052                           ; Vector 54 : DMA2OR
  9053  000074  13B6               	dw	_Default_ISR shr (0+2)
  9054                           
  9055                           ; Vector 55 : DMA2A
  9056  000076  13B6               	dw	_Default_ISR shr (0+2)
  9057                           
  9058                           ; Vector 56 : I2C1RX
  9059  000078  13B6               	dw	_Default_ISR shr (0+2)
  9060                           
  9061                           ; Vector 57 : I2C1TX
  9062  00007A  13B6               	dw	_Default_ISR shr (0+2)
  9063                           
  9064                           ; Vector 58 : I2C1
  9065  00007C  13B6               	dw	_Default_ISR shr (0+2)
  9066                           
  9067                           ; Vector 59 : I2C1E
  9068  00007E  13B6               	dw	_Default_ISR shr (0+2)
  9069                           
  9070                           ; Vector 60 : Undefined
  9071  000080  0040               	dw	ivt0x8_undefint shr (0+2)
  9072                           
  9073                           ; Vector 61 : CLC3
  9074  000082  13B6               	dw	_Default_ISR shr (0+2)
  9075                           
  9076                           ; Vector 62 : PWM3PR
  9077  000084  13B6               	dw	_Default_ISR shr (0+2)
  9078                           
  9079                           ; Vector 63 : PWM3
  9080  000086  13B6               	dw	_Default_ISR shr (0+2)
  9081                           
  9082                           ; Vector 64 : U2RX
  9083  000088  13B6               	dw	_Default_ISR shr (0+2)
  9084                           
  9085                           ; Vector 65 : U2TX
  9086  00008A  13B6               	dw	_Default_ISR shr (0+2)
  9087                           
  9088                           ; Vector 66 : U2E
  9089  00008C  13B6               	dw	_Default_ISR shr (0+2)
  9090                           
  9091                           ; Vector 67 : U2
  9092  00008E  13B6               	dw	_Default_ISR shr (0+2)
  9093                           
  9094                           ; Vector 68 : TMR5
  9095  000090  13B6               	dw	_Default_ISR shr (0+2)
  9096                           
  9097                           ; Vector 69 : TMR5G
  9098  000092  13B6               	dw	_Default_ISR shr (0+2)
  9099                           
  9100                           ; Vector 70 : CCP2
  9101  000094  13B6               	dw	_Default_ISR shr (0+2)
  9102                           
  9103                           ; Vector 71 : SCAN
  9104  000096  13B6               	dw	_Default_ISR shr (0+2)
  9105                           
  9106                           ; Vector 72 : U3RX
  9107  000098  13B6               	dw	_Default_ISR shr (0+2)
  9108                           
  9109                           ; Vector 73 : U3TX
  9110  00009A  13B6               	dw	_Default_ISR shr (0+2)
  9111                           
  9112                           ; Vector 74 : U3E
  9113  00009C  13B6               	dw	_Default_ISR shr (0+2)
  9114                           
  9115                           ; Vector 75 : U3
  9116  00009E  13B6               	dw	_Default_ISR shr (0+2)
  9117                           
  9118                           ; Vector 76 : Undefined
  9119  0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  9120                           
  9121                           ; Vector 77 : CLC4
  9122  0000A2  13B6               	dw	_Default_ISR shr (0+2)
  9123                           
  9124                           ; Vector 78 : Undefined
  9125  0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  9126                           
  9127                           ; Vector 79 : Undefined
  9128  0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  9129                           
  9130                           ; Vector 80 : INT2
  9131  0000A8  13B6               	dw	_Default_ISR shr (0+2)
  9132                           
  9133                           ; Vector 81 : CLC5
  9134  0000AA  13B6               	dw	_Default_ISR shr (0+2)
  9135                           
  9136                           ; Vector 82 : CWG2
  9137  0000AC  13B6               	dw	_Default_ISR shr (0+2)
  9138                           
  9139                           ; Vector 83 : NCO2
  9140  0000AE  13B6               	dw	_Default_ISR shr (0+2)
  9141                           
  9142                           ; Vector 84 : DMA3SCNT
  9143  0000B0  13B6               	dw	_Default_ISR shr (0+2)
  9144                           
  9145                           ; Vector 85 : DMA3DCNT
  9146  0000B2  13B6               	dw	_Default_ISR shr (0+2)
  9147                           
  9148                           ; Vector 86 : DMA3OR
  9149  0000B4  13B6               	dw	_Default_ISR shr (0+2)
  9150                           
  9151                           ; Vector 87 : DMA3A
  9152  0000B6  13B6               	dw	_Default_ISR shr (0+2)
  9153                           
  9154                           ; Vector 88 : CCP3
  9155  0000B8  13B6               	dw	_Default_ISR shr (0+2)
  9156                           
  9157                           ; Vector 89 : CLC6
  9158  0000BA  13B6               	dw	_Default_ISR shr (0+2)
  9159                           
  9160                           ; Vector 90 : CWG3
  9161  0000BC  13B6               	dw	_Default_ISR shr (0+2)
  9162                           
  9163                           ; Vector 91 : TMR4
  9164  0000BE  13B6               	dw	_Default_ISR shr (0+2)
  9165                           
  9166                           ; Vector 92 : DMA4SCNT
  9167  0000C0  13B6               	dw	_Default_ISR shr (0+2)
  9168                           
  9169                           ; Vector 93 : DMA4DCNT
  9170  0000C2  13B6               	dw	_Default_ISR shr (0+2)
  9171                           
  9172                           ; Vector 94 : DMA4OR
  9173  0000C4  13B6               	dw	_Default_ISR shr (0+2)
  9174                           
  9175                           ; Vector 95 : DMA4A
  9176  0000C6  13B6               	dw	_Default_ISR shr (0+2)
  9177                           
  9178                           ; Vector 96 : U4RX
  9179  0000C8  13B6               	dw	_Default_ISR shr (0+2)
  9180                           
  9181                           ; Vector 97 : U4TX
  9182  0000CA  13B6               	dw	_Default_ISR shr (0+2)
  9183                           
  9184                           ; Vector 98 : U4E
  9185  0000CC  13B6               	dw	_Default_ISR shr (0+2)
  9186                           
  9187                           ; Vector 99 : U4
  9188  0000CE  13B6               	dw	_Default_ISR shr (0+2)
  9189                           
  9190                           ; Vector 100 : DMA5SCNT
  9191  0000D0  13B6               	dw	_Default_ISR shr (0+2)
  9192                           
  9193                           ; Vector 101 : DMA5DCNT
  9194  0000D2  13B6               	dw	_Default_ISR shr (0+2)
  9195                           
  9196                           ; Vector 102 : DMA5OR
  9197  0000D4  13B6               	dw	_Default_ISR shr (0+2)
  9198                           
  9199                           ; Vector 103 : DMA5A
  9200  0000D6  13B6               	dw	_Default_ISR shr (0+2)
  9201                           
  9202                           ; Vector 104 : U5RX
  9203  0000D8  13B6               	dw	_Default_ISR shr (0+2)
  9204                           
  9205                           ; Vector 105 : U5TX
  9206  0000DA  13B6               	dw	_Default_ISR shr (0+2)
  9207                           
  9208                           ; Vector 106 : U5E
  9209  0000DC  13B6               	dw	_Default_ISR shr (0+2)
  9210                           
  9211                           ; Vector 107 : U5
  9212  0000DE  13B6               	dw	_Default_ISR shr (0+2)
  9213                           
  9214                           ; Vector 108 : DMA6SCNT
  9215  0000E0  13B6               	dw	_Default_ISR shr (0+2)
  9216                           
  9217                           ; Vector 109 : DMA6DCNT
  9218  0000E2  13B6               	dw	_Default_ISR shr (0+2)
  9219                           
  9220                           ; Vector 110 : DMA6OR
  9221  0000E4  13B6               	dw	_Default_ISR shr (0+2)
  9222                           
  9223                           ; Vector 111 : DMA6A
  9224  0000E6  13B6               	dw	_Default_ISR shr (0+2)
  9225                           
  9226                           ; Vector 112 : Undefined
  9227  0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  9228                           
  9229                           ; Vector 113 : CLC7
  9230  0000EA  13B6               	dw	_Default_ISR shr (0+2)
  9231                           
  9232                           ; Vector 114 : CMP2
  9233  0000EC  13B6               	dw	_Default_ISR shr (0+2)
  9234                           
  9235                           ; Vector 115 : NCO3
  9236  0000EE  13B6               	dw	_Default_ISR shr (0+2)
  9237                           
  9238                           ; Vector 116 : Undefined
  9239  0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  9240                           
  9241                           ; Vector 117 : Undefined
  9242  0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  9243                           
  9244                           ; Vector 118 : Undefined
  9245  0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  9246                           
  9247                           ; Vector 119 : Undefined
  9248  0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  9249                           
  9250                           ; Vector 120 : NVM
  9251  0000F8  13B6               	dw	_Default_ISR shr (0+2)
  9252                           
  9253                           ; Vector 121 : CLC8
  9254  0000FA  13B6               	dw	_Default_ISR shr (0+2)
  9255                           
  9256                           ; Vector 122 : CRC
  9257  0000FC  13B6               	dw	_Default_ISR shr (0+2)
  9258                           
  9259                           ; Vector 123 : TMR6
  9260  0000FE  13B6               	dw	_Default_ISR shr (0+2)
  9261  000100                     ivt0x8_undefint:
  9262                           	callstack 0
  9263  000100  00FF               	reset	
  9264                           
  9265                           	psect	rparam
  9266  0000                     
  9267                           	psect	idloc
  9268                           
  9269                           ;Config register IDLOC0 @ 0x200000
  9270                           ;	unspecified, using default values
  9271  200000                     	org	2097152
  9272  200000  FFFF               	dw	65535
  9273                           
  9274                           ;Config register IDLOC1 @ 0x200002
  9275                           ;	unspecified, using default values
  9276  200002                     	org	2097154
  9277  200002  FFFF               	dw	65535
  9278                           
  9279                           ;Config register IDLOC2 @ 0x200004
  9280                           ;	unspecified, using default values
  9281  200004                     	org	2097156
  9282  200004  FFFF               	dw	65535
  9283                           
  9284                           ;Config register IDLOC3 @ 0x200006
  9285                           ;	unspecified, using default values
  9286  200006                     	org	2097158
  9287  200006  FFFF               	dw	65535
  9288                           
  9289                           ;Config register IDLOC4 @ 0x200008
  9290                           ;	unspecified, using default values
  9291  200008                     	org	2097160
  9292  200008  FFFF               	dw	65535
  9293                           
  9294                           ;Config register IDLOC5 @ 0x20000A
  9295                           ;	unspecified, using default values
  9296  20000A                     	org	2097162
  9297  20000A  FFFF               	dw	65535
  9298                           
  9299                           ;Config register IDLOC6 @ 0x20000C
  9300                           ;	unspecified, using default values
  9301  20000C                     	org	2097164
  9302  20000C  FFFF               	dw	65535
  9303                           
  9304                           ;Config register IDLOC7 @ 0x20000E
  9305                           ;	unspecified, using default values
  9306  20000E                     	org	2097166
  9307  20000E  FFFF               	dw	65535
  9308                           
  9309                           ;Config register IDLOC8 @ 0x200010
  9310                           ;	unspecified, using default values
  9311  200010                     	org	2097168
  9312  200010  FFFF               	dw	65535
  9313                           
  9314                           ;Config register IDLOC9 @ 0x200012
  9315                           ;	unspecified, using default values
  9316  200012                     	org	2097170
  9317  200012  FFFF               	dw	65535
  9318                           
  9319                           ;Config register IDLOC10 @ 0x200014
  9320                           ;	unspecified, using default values
  9321  200014                     	org	2097172
  9322  200014  FFFF               	dw	65535
  9323                           
  9324                           ;Config register IDLOC11 @ 0x200016
  9325                           ;	unspecified, using default values
  9326  200016                     	org	2097174
  9327  200016  FFFF               	dw	65535
  9328                           
  9329                           ;Config register IDLOC12 @ 0x200018
  9330                           ;	unspecified, using default values
  9331  200018                     	org	2097176
  9332  200018  FFFF               	dw	65535
  9333                           
  9334                           ;Config register IDLOC13 @ 0x20001A
  9335                           ;	unspecified, using default values
  9336  20001A                     	org	2097178
  9337  20001A  FFFF               	dw	65535
  9338                           
  9339                           ;Config register IDLOC14 @ 0x20001C
  9340                           ;	unspecified, using default values
  9341  20001C                     	org	2097180
  9342  20001C  FFFF               	dw	65535
  9343                           
  9344                           ;Config register IDLOC15 @ 0x20001E
  9345                           ;	unspecified, using default values
  9346  20001E                     	org	2097182
  9347  20001E  FFFF               	dw	65535
  9348                           
  9349                           ;Config register IDLOC16 @ 0x200020
  9350                           ;	unspecified, using default values
  9351  200020                     	org	2097184
  9352  200020  FFFF               	dw	65535
  9353                           
  9354                           ;Config register IDLOC17 @ 0x200022
  9355                           ;	unspecified, using default values
  9356  200022                     	org	2097186
  9357  200022  FFFF               	dw	65535
  9358                           
  9359                           ;Config register IDLOC18 @ 0x200024
  9360                           ;	unspecified, using default values
  9361  200024                     	org	2097188
  9362  200024  FFFF               	dw	65535
  9363                           
  9364                           ;Config register IDLOC19 @ 0x200026
  9365                           ;	unspecified, using default values
  9366  200026                     	org	2097190
  9367  200026  FFFF               	dw	65535
  9368                           
  9369                           ;Config register IDLOC20 @ 0x200028
  9370                           ;	unspecified, using default values
  9371  200028                     	org	2097192
  9372  200028  FFFF               	dw	65535
  9373                           
  9374                           ;Config register IDLOC21 @ 0x20002A
  9375                           ;	unspecified, using default values
  9376  20002A                     	org	2097194
  9377  20002A  FFFF               	dw	65535
  9378                           
  9379                           ;Config register IDLOC22 @ 0x20002C
  9380                           ;	unspecified, using default values
  9381  20002C                     	org	2097196
  9382  20002C  FFFF               	dw	65535
  9383                           
  9384                           ;Config register IDLOC23 @ 0x20002E
  9385                           ;	unspecified, using default values
  9386  20002E                     	org	2097198
  9387  20002E  FFFF               	dw	65535
  9388                           
  9389                           ;Config register IDLOC24 @ 0x200030
  9390                           ;	unspecified, using default values
  9391  200030                     	org	2097200
  9392  200030  FFFF               	dw	65535
  9393                           
  9394                           ;Config register IDLOC25 @ 0x200032
  9395                           ;	unspecified, using default values
  9396  200032                     	org	2097202
  9397  200032  FFFF               	dw	65535
  9398                           
  9399                           ;Config register IDLOC26 @ 0x200034
  9400                           ;	unspecified, using default values
  9401  200034                     	org	2097204
  9402  200034  FFFF               	dw	65535
  9403                           
  9404                           ;Config register IDLOC27 @ 0x200036
  9405                           ;	unspecified, using default values
  9406  200036                     	org	2097206
  9407  200036  FFFF               	dw	65535
  9408                           
  9409                           ;Config register IDLOC28 @ 0x200038
  9410                           ;	unspecified, using default values
  9411  200038                     	org	2097208
  9412  200038  FFFF               	dw	65535
  9413                           
  9414                           ;Config register IDLOC29 @ 0x20003A
  9415                           ;	unspecified, using default values
  9416  20003A                     	org	2097210
  9417  20003A  FFFF               	dw	65535
  9418                           
  9419                           ;Config register IDLOC30 @ 0x20003C
  9420                           ;	unspecified, using default values
  9421  20003C                     	org	2097212
  9422  20003C  FFFF               	dw	65535
  9423                           
  9424                           ;Config register IDLOC31 @ 0x20003E
  9425                           ;	unspecified, using default values
  9426  20003E                     	org	2097214
  9427  20003E  FFFF               	dw	65535
  9428                           
  9429                           	psect	config
  9430                           
  9431                           ;Config register CONFIG1 @ 0x300000
  9432                           ;	External Oscillator Selection
  9433                           ;	FEXTOSC = OFF, Oscillator not enabled
  9434                           ;	Reset Oscillator Selection
  9435                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  9436  300000                     	org	3145728
  9437  300000  8C                 	db	140
  9438                           
  9439                           ;Config register CONFIG2 @ 0x300001
  9440                           ;	Clock out Enable bit
  9441                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  9442                           ;	PRLOCKED One-Way Set Enable bit
  9443                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  9444                           ;	Clock Switch Enable bit
  9445                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  9446                           ;	Fail-Safe Clock Monitor Enable bit
  9447                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  9448  300001                     	org	3145729
  9449  300001  FF                 	db	255
  9450                           
  9451                           ;Config register CONFIG3 @ 0x300002
  9452                           ;	MCLR Enable bit
  9453                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  9454                           ;	Power-up timer selection bits
  9455                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  9456                           ;	Multi-vector enable bit
  9457                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  9458                           ;	IVTLOCK bit One-way set enable bit
  9459                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  9460                           ;	Low Power BOR Enable bit
  9461                           ;	LPBOREN = OFF, Low-Power BOR disabled
  9462                           ;	Brown-out Reset Enable bits
  9463                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  9464  300002                     	org	3145730
  9465  300002  FF                 	db	255
  9466                           
  9467                           ;Config register CONFIG4 @ 0x300003
  9468                           ;	Brown-out Reset Voltage Selection bits
  9469                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  9470                           ;	ZCD Disable bit
  9471                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  9472                           ;	PPSLOCK bit One-Way Set Enable bit
  9473                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
  9474                           ;	Stack Full/Underflow Reset Enable bit
  9475                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9476                           ;	Low Voltage Programming Enable bit
  9477                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  9478                           ;	Extended Instruction Set Enable bit
  9479                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  9480  300003                     	org	3145731
  9481  300003  F7                 	db	247
  9482                           
  9483                           ;Config register CONFIG5 @ 0x300004
  9484                           ;	WDT Period selection bits
  9485                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9486                           ;	WDT operating mode
  9487                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  9488  300004                     	org	3145732
  9489  300004  9F                 	db	159
  9490                           
  9491                           ;Config register CONFIG6 @ 0x300005
  9492                           ;	WDT Window Select bits
  9493                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  9494                           ;	WDT input clock selector
  9495                           ;	WDTCCS = SC, Software Control
  9496  300005                     	org	3145733
  9497  300005  FF                 	db	255
  9498                           
  9499                           ;Config register CONFIG7 @ 0x300006
  9500                           ;	Boot Block Size selection bits
  9501                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  9502                           ;	Boot Block enable bit
  9503                           ;	BBEN = OFF, Boot block disabled
  9504                           ;	Storage Area Flash enable bit
  9505                           ;	SAFEN = OFF, SAF disabled
  9506                           ;	Background Debugger
  9507                           ;	DEBUG = OFF, Background Debugger disabled
  9508  300006                     	org	3145734
  9509  300006  FF                 	db	255
  9510                           
  9511                           ;Config register CONFIG8 @ 0x300007
  9512                           ;	Boot Block Write Protection bit
  9513                           ;	WRTB = OFF, Boot Block not Write protected
  9514                           ;	Configuration Register Write Protection bit
  9515                           ;	WRTC = OFF, Configuration registers not Write protected
  9516                           ;	Data EEPROM Write Protection bit
  9517                           ;	WRTD = OFF, Data EEPROM not Write protected
  9518                           ;	SAF Write protection bit
  9519                           ;	WRTSAF = OFF, SAF not Write Protected
  9520                           ;	Application Block write protection bit
  9521                           ;	WRTAPP = OFF, Application Block not write protected
  9522  300007                     	org	3145735
  9523  300007  FF                 	db	255
  9524                           
  9525                           ;Config register CONFIG10 @ 0x300009
  9526                           ;	PFM and Data EEPROM Code Protection bit
  9527                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  9528  300009                     	org	3145737
  9529  300009  FF                 	db	255
  9530                           tosu	equ	0x4FF
  9531                           tosh	equ	0x4FE
  9532                           tosl	equ	0x4FD
  9533                           stkptr	equ	0x4FC
  9534                           pclatu	equ	0x4FB
  9535                           pclath	equ	0x4FA
  9536                           pcl	equ	0x4F9
  9537                           tblptru	equ	0x4F8
  9538                           tblptrh	equ	0x4F7
  9539                           tblptrl	equ	0x4F6
  9540                           tablat	equ	0x4F5
  9541                           prodh	equ	0x4F4
  9542                           prodl	equ	0x4F3
  9543                           indf0	equ	0x4EF
  9544                           postinc0	equ	0x4EE
  9545                           postdec0	equ	0x4ED
  9546                           preinc0	equ	0x4EC
  9547                           plusw0	equ	0x4EB
  9548                           fsr0h	equ	0x4EA
  9549                           fsr0l	equ	0x4E9
  9550                           wreg	equ	0x4E8
  9551                           indf1	equ	0x4E7
  9552                           postinc1	equ	0x4E6
  9553                           postdec1	equ	0x4E5
  9554                           preinc1	equ	0x4E4
  9555                           plusw1	equ	0x4E3
  9556                           fsr1h	equ	0x4E2
  9557                           fsr1l	equ	0x4E1
  9558                           bsr	equ	0x4E0
  9559                           indf2	equ	0x4DF
  9560                           postinc2	equ	0x4DE
  9561                           postdec2	equ	0x4DD
  9562                           preinc2	equ	0x4DC
  9563                           plusw2	equ	0x4DB
  9564                           fsr2h	equ	0x4DA
  9565                           fsr2l	equ	0x4D9
  9566                           status	equ	0x4D8

Data Sizes:
    Strings     60
    Constant    16
    Data        16
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      73
    BANK5           160    120     142
    BANK6           256      0      80
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK5[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK5[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK6[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK6[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S755$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S755$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 41
		 -> STR_1(CODE[41]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 41
		 -> STR_1(CODE[41]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 41
		 -> STR_1(CODE[41]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> vfprintf@cfmt(BANK5[1]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 41
		 -> STR_1(CODE[41]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->_isspace

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    _TMR0_ISR->i2_led_matrix_write

Critical Paths under _IOC_ISR in COMRAM

    _IOC_ISR->i2_led_7seg_write

Critical Paths under _main in BANK5

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _IOC_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _IOC_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _IOC_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _IOC_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _IOC_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _IOC_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _IOC_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _IOC_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _IOC_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _IOC_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _IOC_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _TMR0_ISR in BANK16

    None.

Critical Paths under _IOC_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _TMR0_ISR in BANK17

    None.

Critical Paths under _IOC_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _TMR0_ISR in BANK18

    None.

Critical Paths under _IOC_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _TMR0_ISR in BANK19

    None.

Critical Paths under _IOC_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _TMR0_ISR in BANK20

    None.

Critical Paths under _IOC_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _TMR0_ISR in BANK21

    None.

Critical Paths under _IOC_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _TMR0_ISR in BANK22

    None.

Critical Paths under _IOC_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _TMR0_ISR in BANK23

    None.

Critical Paths under _IOC_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _TMR0_ISR in BANK24

    None.

Critical Paths under _IOC_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _TMR0_ISR in BANK25

    None.

Critical Paths under _IOC_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _TMR0_ISR in BANK26

    None.

Critical Paths under _IOC_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _TMR0_ISR in BANK27

    None.

Critical Paths under _IOC_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _TMR0_ISR in BANK28

    None.

Critical Paths under _IOC_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _TMR0_ISR in BANK29

    None.

Critical Paths under _IOC_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _TMR0_ISR in BANK30

    None.

Critical Paths under _IOC_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _TMR0_ISR in BANK31

    None.

Critical Paths under _IOC_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _Default_ISR in BANK32

    None.

Critical Paths under _TMR0_ISR in BANK32

    None.

Critical Paths under _IOC_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _Default_ISR in BANK33

    None.

Critical Paths under _TMR0_ISR in BANK33

    None.

Critical Paths under _IOC_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _Default_ISR in BANK34

    None.

Critical Paths under _TMR0_ISR in BANK34

    None.

Critical Paths under _IOC_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _Default_ISR in BANK35

    None.

Critical Paths under _TMR0_ISR in BANK35

    None.

Critical Paths under _IOC_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _Default_ISR in BANK36

    None.

Critical Paths under _TMR0_ISR in BANK36

    None.

Critical Paths under _IOC_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   43254
                                            116 BANK5      4     4      0
                            ___fldiv
                           ___xxtofl
                     _led_7seg_write
                   _led_matrix_write
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               9     4      5   37209
                                            109 BANK5      7     2      5
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   37014
                                            103 BANK5      6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   36463
                                             85 BANK5     18    12      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     4      5     595
                                             22 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   29451
                                             23 BANK5     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1105
                                             28 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             22 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3833
                                             39 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1475
                                             32 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     975
                                             23 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             48 COMRAM    10     6      4
                                             13 BANK5     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             22 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                             22 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             47 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                             22 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             22 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3596
                                             22 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             47 COMRAM     8     0      8
                                              0 BANK5      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             22 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2903
                                             36 COMRAM    12     4      8
                                              0 BANK5     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1584
                                             29 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             22 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _led_matrix_write                                     4     1      3    1528
                                             22 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _led_7seg_write                                       2     1      1    1182
                                             22 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             22 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Default_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                            10    10      0     450
                                              4 COMRAM    10    10      0
                 i2_led_matrix_write
 ---------------------------------------------------------------------------------
 (10) i2_led_matrix_write                                  4     1      3     244
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _IOC_ISR                                              6     6      0     122
                                             16 COMRAM     6     6      0
                   i2_led_7seg_write
 ---------------------------------------------------------------------------------
 (10) i2_led_7seg_write                                    2     1      1     122
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
   ___xxtofl
   _led_7seg_write
   _led_matrix_write
   _printf
     ___xxtofl (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _Default_ISR (ROOT)

 _TMR0_ISR (ROOT)
   i2_led_matrix_write

 _IOC_ISR (ROOT)
   i2_led_7seg_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllhhh    153      0       0      99        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0      50       7       31.2%
BITBIGSFRlhllll     E4      0       0      90        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0     78      8E       5       88.8%
BITBIGSFRlllll      81      0       0     106        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      49       1       76.8%
BITBIGSFRlllhhh     52      0       0      96        0.0%
BITBIGSFRlllhhh     50      0       0      95        0.0%
BITBIGSFRlhllll     43      0       0      91        0.0%
BITBIGSFRlhllhh     3E      0       0      81        0.0%
BITBIGSFRlhllhh     31      0       0      84        0.0%
BITBIGSFRhhh        29      0       0      70        0.0%
BITBIGSFRlllhhl     17      0       0     100        0.0%
BITBIGSFRlllhhh     12      0       0      97        0.0%
BITBIGSFRlhllhl      7      0       0      85        0.0%
BITBIGSFRhhl         7      0       0      71        0.0%
BITBIGSFRlhllll      7      0       0      93        0.0%
BITBIGSFRlhllhh      6      0       0      78        0.0%
BITBIGSFRlhllll      6      0       0      89        0.0%
BITBIGSFRlhlllh      6      0       0      88        0.0%
BITBIGSFRhlll        6      0       0      75        0.0%
BITBIGSFRlhllhh      5      0       0      79        0.0%
BITBIGSFRlllhhh      5      0       0      98        0.0%
BITBIGSFRlhh         5      0       0      76        0.0%
BITBIGSFRlhllhh      3      0       0      82        0.0%
BITBIGSFRlhlllh      3      0       0      87        0.0%
BITBIGSFRhlhh        3      0       0      72        0.0%
BITBIGSFRhlhll       3      0       0      73        0.0%
BITBIGSFRlhllhh      2      0       0      80        0.0%
BITBIGSFRlllhhl      2      0       0     101        0.0%
BITBIGSFRlllhll      2      0       0     104        0.0%
BITBIGSFRlhlh        2      0       0      77        0.0%
BITBIGSFRlhlllh      1      0       0      86        0.0%
BITBIGSFRlllhll      1      0       0     103        0.0%
BITBIGSFRlhllll      1      0       0      92        0.0%
BITBIGSFRlhllhh      1      0       0      83        0.0%
BITBIGSFRhllh        1      0       0      74        0.0%
BITBIGSFRlllhhl      1      0       0     102        0.0%
BITBIGSFRlllhll      1      0       0     105        0.0%
BITBIGSFRllh         1      0       0      94        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127     107        0.0%
DATA                 0      0     127       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Dec 27 00:19:27 2023

              ___fldiv@aexp 056C                ___fldiv@bexp 056B            _led_matrix_write 4CBA  
              ___fldiv@sign 0564                ___awdiv@sign 051C         ___wmul@multiplicand 0519  
                       l220 4CCA                         l223 4CD4                         l241 4E66  
                       l226 4CDE                         l229 4CE8                         l238 4E5C  
                       l267 3FD6                         l538 448A                         l802 3912  
                       l803 38F0                         l904 379C                         l818 39E4  
                       l827 3A4A                         l828 3A46                         l935 423E  
                       l928 41C0                         l857 3C50                         l868 3CBE  
                       l869 3CBA                         l887 3500                         l896 3716  
                       l992 489E                         l897 3712                         _GIE 0026B7  
                       _pad 4870                ___awmod@sign 051C                         wreg 0004E8  
              ___flmul@aexp 0524                ___flmul@bexp 0525                ___flmul@sign 0523  
              ___flmul@temp 052E                ___flmul@prod 052A             __end_of_IOC_ISR 465E  
              ___fltol@exp1 0520                        l1029 289C                        l1152 43EA  
                      l1057 2C02                        l1234 4CB0                        l1164 40EA  
                      l4100 4264                        l4102 4270                        l5100 4050  
                      l4118 42B0                        l5014 4780                        l5110 410C  
                      l4064 4E4E                        l5032 47C0                        l5024 4798  
                      l5040 4888                        l4090 41F4                        l4082 41D0  
                      l4058 4CBC                        l4410 3868                        l4402 3848  
                      l5026 47A4                        l5018 4790                        l5114 4142  
                      l5050 48C0                        l5210 2770                        l4092 4200  
                      l5044 4896                        l5300 2B12                        l5220 2832  
                      l5204 272C                        l4094 4226                        l5134 4C78  
                      l5070 4548                        l5118 4170                        l5054 48EC  
                      l5046 48A8                        l5214 27AA                        l4088 41EE  
                      l4504 3A08                        l4520 3A28                        l4440 38A4  
                      l4344 4ECC                        l5320 2C1C                        l5312 2BD8  
                      l5232 2884                        l5216 27F8                        l5160 25C2  
                      l4514 3A1E                        l5066 453E                        l4354 4A9C  
                      l5082 4B00                        l5250 28F4                        l5242 28AC  
                      l4604 3B0A                        l4540 3A90                        l4452 38FE  
                      l5076 4588                        l5332 2C9C                        l5252 28F8  
                      l5236 28A6                        l5180 2652                        l5148 2596  
                      l4710 3D26                        l4454 3902                        l4374 37FC  
                      l5318 2BFA                        l5262 2916                        ?_pad 0528  
                      l4720 3D5C                        l4624 3B4A                        l4608 3B0E  
                      l4552 3ABE                        l5432 2F0C                        l5408 2E90  
                      l5440 2F48                        l5344 2CCA                        l5352 2CEA  
                      l5360 2D0E                        l5272 294A                        l5168 25D8  
                      l5600 3444                        l5450 42D6                        l4722 3D5E  
                      l4714 3D50                        l4706 3D02                        l4650 3BB0  
                      l4642 3B98                        l4554 3AC0                        l4378 3800  
                      l4570 4D4E                        l5418 2EBC                        l5178 2636  
                      l5186 2682                        l5522 3056                        l5460 435C  
                      l4660 3C00                        l4636 3B82                        l4628 3B4E  
                      l4812 36BE                        l4548 3AB6                        l4476 3958  
                      l4468 3936                        l5380 2DE6                        l5268 293A  
                      l5196 26E0                        l5516 302A                        l5612 4BB4  
                      l5454 4322                        l5446 42D4                        l4902 49FC  
                      l4742 34AC                        l4478 395C                        l4486 396E  
                      l4398 3844                        l4566 4D38                        l4574 4DD0  
                      l5278 2974                        l5286 2A68                        l5198 26FC  
                      l5542 3162                        l5518 3048                        l5614 4BDA  
                      l5456 432A                        l4680 3C66                        l4760 34EC  
                      l4744 34B0                        l4496 39D4                        l4576 4DD4  
                      l5368 2DA4                        l5536 3136                        l5466 4396  
                      l5458 432E                        l4906 4A0A                        l4922 4A34  
                      l4674 3C4E                        l4842 3778                        l4818 36DC  
                      l4770 351E                        l4762 34F0                        l4746 34C0  
                      l5554 3238                        l5538 3154                        l4668 3C28  
                      l5396 2E32                        l5484 4684                        l4942 4A7A  
                      l4934 4A62                        l4926 4A42                        l4918 4A28  
                      l4686 3C84                        l4950 493A                        l4854 37BA  
                      l4838 375A                        l5398 2E3C                        l5486 4690  
                      l5590 3420                        l5566 32DC                        l4880 49B4  
                      l4928 4A4A                        l5576 335E                        l5584 33DC  
                      l4874 49A4                        l4938 4A6C                        l4954 496E  
                      l4970 445E                        l5594 342C                        l4980 44C2  
                      l4886 49CA                        l4958 498C                        l4974 4474  
                      l4966 442A                        l4888 49D2                        l4898 49F2  
                      l4988 4E10                        l4998 4736                        STR_1 2511  
                      STR_2 253A                        STR_3 2542                        STR_6 253E  
                      STR_7 2546                        _LATB 0004BF                        _LATD 0004C1  
                      u5030 38C6                        u5040 38D6                        u6000 4754  
                      _U3ON 001697                        u5210 3A2C                        u5050 38D8  
                      u6100 4504                        u6005 474A                        u5230 3A40  
                      u5080 391A                        u6040 47AA                        u6200 401E  
                      u6105 44FA                        u6210 403E                        u6300 4DBE  
                      u6205 4014                        u6310 4DC0                        u6150 4580  
                      u5350 4D8E                        u6160 4582                        u5360 4D90  
                      u6145 4562                        u6330 4C74                        u5530 3CB4  
                      u5290 3A9C                        u6250 40D0                        u6170 4B42  
                      u6235 4068                        u6236 406E                        u6500 28C4  
                      u6237 407C                        u4750 427A                        u5710 370C  
                      u6270 412A                        u4910 4A94                        u6255 40C6  
                      u6440 285A                        u6360 25B2                        u6177 4B38  
                      u5810 49D6                        u5570 3D10                        u4930 4ADC  
                      u6610 2B02                        u6275 4120                        u5580 3D34  
                      u6540 2912                        u5750 3768                        u5670 350C  
                      u6470 2892                        u5920 4988                        u5760 3786  
                      u6810 2F04                        u6730 2DC8                        u6900 46EA  
                      u5870 4A4E                        u6840 43C8                        u6940 3094  
                      u5990 4724                        u6790 2EA6                        u6970 31A0  
                      _WPUA 000401                        _WPUB 000409                        _WPUC 000411  
         i2led_7seg_write@c 050F           i2led_7seg_write@r 0510                        _dbuf 0600  
                      _atoi 42C2                        _main 3D66                        _prec 05EC  
                      _nout 05E8                        pad@i 052F                        pad@p 052C  
                      fsr1h 0004E2                        fsr2h 0004DA                        indf1 0004E7  
                      indf2 0004DF                        fsr1l 0004E1                        pad@w 0531  
                      fsr2l 0004D9               ___fpclassifyf 44C6                        prodh 0004F4  
                      prodl 0004F3                        start 0102             ___fldiv@new_exp 0565  
__end_ofi2_led_matrix_write 4D2E                ___param_bank 000000                       ??_pad 052E  
             ___fltol@sign1 051F                       ?_atoi 051E             __end_of___fladd 3ADC  
                     ?_main 0501             __end_of___fldiv 3D66             __end_of___awdiv 4A14  
           __end_of___flneg 4E22                       STR_10 254A                       STR_12 254A  
           __end_of___awmod 4A84             __end_of___flmul 37D0             __end_of___flsub 4C42  
           __end_of___fltol 47D2             ___awdiv@divisor 0519                       _LATA4 0025F4  
                     _LATA5 0025F5                       _LATA6 0025F6                       _LATE0 002610  
                     _LATE1 002611                       _LATE2 002612                       _U3BRG 0002D4  
                     _IOCIE 0024F7                       _IOCIF 002577                       i2l220 4D04  
                     i2l223 4D0E                       i2l241 4E8C                       i2l226 4D18  
                     _U3RXB 0002C7                       i2l229 4D22                       i2l238 4E82  
                     _U3TXB 0002C9             ___awdiv@counter 051B                vfpfcnvrt@fmt 05B7  
                     _TMR0H 000319                       _PORTA 0004CE                       _TRISA 0004C6  
                     _TRISB 0004C7                       _TRISC 0004C8                       _TRISD 0004C9  
               _Default_ISR 4ED8                       _WPUA7 00200F                       _WPUE2 00210A  
      i2led_matrix_write@c1 0501        i2led_matrix_write@c2 0503        i2led_matrix_write@r1 0504  
      i2led_matrix_write@r2 0502            __end_of_TMR0_ISR 4870                       _flags 0543  
                     _fputc 4A84                       _fputs 4D2E             __end_of_isdigit 4DC6  
                     atoi@n 0526                       pad@fp 0528                       atoi@s 051E  
                     _width 05EA                       _putch 4ECA             __end_of_isspace 4C80  
           __end_of_isupper 4D96                       tablat 0004F5                       status 0004D8  
            ?___fpclassifyf 0517             __end_of_tolower 4CBA             __end_of_strncmp 4718  
           __initialization 4B4C                __end_of_atoi 43F4                __end_of_main 3FD8  
                    ??_atoi 0520                      ??_main 053B               __activetblptr 000003  
                 ??_IOC_ISR 0511            TMR0_ISR@romdata1 0509            TMR0_ISR@romdata2 050A  
                    ?_fputc 0518                      ?_fputs 0521            ___awdiv@dividend 0517  
                    _ANSELA 000400                      ?_putch 0501                      _ANSELB 000408  
                    _ANSELC 000410                      _ANSELD 000418                      _T0CON0 00031A  
                    _T0CON1 00031B                      _IOCCF5 0020BD                      _IOCCP5 0020AD  
                    _NCO3EN 0022B7                      _RA4PPS 000205                      _RA5PPS 000206  
                    _RB4PPS 00020D                      _RA6PPS 000207                      _RB5PPS 00020E  
                    _RB6PPS 00020F                      _RB7PPS 000210                      _RE2PPS 000223  
                    i2l4122 4CF6                      i2l4128 4E74                      i2l4152 483A  
                    i2l4148 4814                      _U3RXIE 002538                      _U3RXEN 00168C  
                    _U3TXIF 0025B9                      _U3TXEN 00168D                      _TD4_PC 0549  
                    _OSCFRQ 0000B1                      _TMR0IE 00250F                      _TMR0IF 00258F  
                    _TRISA4 002634                      _TRISA5 002635                      _TRISA6 002636  
                    _TRISA7 002637                      _TRISE0 002650                      _TRISE1 002651  
                    _TRISE2 002652            __end_of___xxtofl 42C2                vfprintf@cfmt 05CC  
                    ___flge 43F4                      ___fleq 4906            __end_of_led_font 2511  
                 ??___fladd 051F                      ___wmul 4E22                   ??___fldiv 052D  
                 ??___awdiv 051B                   ??___flneg 051B                   ??___awmod 051B  
                 ??___flmul 051F                   ??___flsub 0538                   ??___fltol 051B  
                    _efgtoa 254E                      _floorf 3FD8                      clear_0 4B72  
                    clear_1 4B8C            ___awdiv@quotient 051D             ___awmod@divisor 0519  
                    isa$std 000001             ___awmod@counter 051B                      _printf 4E98  
                    pad@buf 052A                      _strcpy 4AF0                      _strlen 4DC6  
                    fputc@c 0518                      fputs@c 0525                      fputs@i 0526  
                    fputs@s 0521                   ??_isdigit 0519             ___fpclassifyf@e 051F  
           ___fpclassifyf@u 0521             ___fpclassifyf@x 0517                __mediumconst 0000  
                 ??_isspace 0519                      tblptrh 0004F7                   ??_isupper 0519  
                    tblptrl 0004F6                      tblptru 0004F8                      putch@c 0517  
          __end_of_vfprintf 4BFC                   ??_tolower 051F    __end_of_led_matrix_write 4CF4  
                 ??_strncmp 051C                  ___flge@ff1 0530                  ___flge@ff2 0534  
           ??___fpclassifyf 051B                ___xxtofl@arg 0521                ___xxtofl@exp 0520  
              ___xxtofl@val 0517                  ___fleq@ff1 0517                  ___fleq@ff2 051B  
                __accesstop 0560     __end_of__initialization 4BA0                  ___flneg@f1 0517  
             ___rparam_used 000001                  ___fltol@f1 0517              __pcstackCOMRAM 0501  
              __pidataBANK5 4EBA                   ?_TMR0_ISR 0501              ivt0x8_undefint 0100  
             __end_of_fputc 4AF0               __end_of_fputs 4D66               __end_of_putch 4ED8  
                   ??_fputc 051C                     ??_fputs 0525                     ??_putch 0517  
                __pbssBANK5 05E8                  __pbssBANK6 0600                     IVTBASEH 00045E  
                   IVTBASEL 00045D                     IVTBASEU 00045F                  _efgtoa$884 0585  
                _efgtoa$876 0583                  _efgtoa$885 0587                     ?___flge 0530  
                   ?___fleq 0517                     ?___wmul 0517                  ??_TMR0_ISR 0505  
                   ?_efgtoa 0577                     ?_floorf 0531                     ?_printf 05CD  
                   _ANSELA4 002004                     _ANSELA5 002005                     _ANSELA6 002006  
                   _ANSELA7 002007                     _ANSELE0 002100                     _ANSELE1 002101  
                   _ANSELE2 002102                     ?_strcpy 0517                     ?_strlen 0517  
                   _NCO3CLK 000457                     _NCO3INC 000453                     _NCO3PFM 0022B0  
        i2_led_matrix_write 4CF4                     _NCO3OUT 0022B5                ?_Default_ISR 0501  
                   _IOC_ISR 4594                   ?___xxtofl 0517                     _U3RXPPS 000276  
                   _TD4_ROM 05D8                     _IVTBASE 00045D                     _IVTLOCK 000459  
                   _SPI1CLK 00008C                     _SPI2CLK 000099                     _SPI1TXB 000081  
                   _SPI2TXB 00008E             led_7seg_write@c 0517         ?i2_led_matrix_write 0501  
           led_7seg_write@r 0518                     __Hparam 0000                     __Lparam 0000  
      ??i2_led_matrix_write 0504                     ___fladd 37D0                     ___fldiv 3ADC  
                   ___awdiv 4990                     ___flneg 4DF4                     ___awmod 4A14  
                   ___flmul 3480                     ___flsub 4BFC                     ___fltol 4718  
                 ?_vfprintf 05C7            i2_led_7seg_write 4E72                __psmallconst 2500  
                   __pcinit 4B4C                     __ramtop 2500                     __ptext0 3D66  
                   __ptext1 4E98                     __ptext2 4BA6                     __ptext3 2F6E  
                   __ptext4 465E                     __ptext5 254E                     __ptext6 4C80  
                   __ptext7 4D66                     __ptext8 4AF0                     __ptext9 4870  
                   _isdigit 4D96                  ??___xxtofl 051B            ___awmod@dividend 0517  
                   _isspace 4C42                     _isupper 4D66                     efgtoa@c 057D  
                   efgtoa@d 0595                     efgtoa@e 05AD                     efgtoa@f 0579  
                   efgtoa@g 05A9                     efgtoa@h 059F                     efgtoa@i 05A7  
                   efgtoa@l 05A3                     efgtoa@m 058F                     efgtoa@n 05AF  
                   efgtoa@p 0599                     efgtoa@t 0589                     efgtoa@u 05B1  
                   efgtoa@w 059B                     atoi@neg 0524                     _tolower 4C80  
                   _strncmp 465E        end_of_initialization 4BA0                     floorf@e 0571  
                   floorf@m 056D               _scan_pointer2 0545                     floorf@u 0573  
                   floorf@x 0531                     fputc@fp 051A                     fputs@fp 0523  
         __end_of_vfpfcnvrt 3480                  efgtoa@mode 059E                  efgtoa@sign 0597  
                   postdec1 0004E5                     postdec2 0004DD                     postinc0 0004EE  
                   postinc1 0004E6                     postinc2 0004DE                  ??_vfprintf 053B  
                   strcpy@d 051F                     strlen@a 0519                     strcpy@s 051D  
                   strlen@s 0517                 ___fladd@grs 0526               ___xxtofl@sign 051F  
               ___fldiv@grs 0567                 ___fldiv@rem 0560           ?_led_matrix_write 0517  
               ___flmul@grs 0526          ??_led_matrix_write 051A              __end_of___flge 44C6  
            __end_of___fleq 4990                 vfpfcnvrt@ap 05B9                 vfpfcnvrt@ct 05C3  
               vfpfcnvrt@fp 05B5              __end_of___wmul 4E4C              __end_of_efgtoa 2F6E  
            __end_of_floorf 4182                  floorf@F526 053B              __end_of_printf 4EBA  
            __end_of_strcpy 4B4C              __end_of_strlen 4DF4         start_initialization 4B4C  
               __end_of_pad 4906              _led_7seg_write 4E4C                  ivt0x8_base 0008  
     __end_of___fpclassifyf 4592                 vfprintf@fmt 05C9                    ??___flge 0560  
                  ??___fleq 051F                    ??___wmul 051B                    ??_efgtoa 057E  
               __pdataBANK5 05D8                    ??_floorf 0535                    ??_printf 053B  
                  ??_strcpy 051B                    ??_strlen 0519                   ___fladd@a 051B  
                 ___fladd@b 0517                   ___fldiv@a 0529                   ___fldiv@b 0525  
                  ?_IOC_ISR 0501                   ___flmul@a 051B                   ___flmul@b 0517  
               __pbssCOMRAM 053B                   ___flsub@a 0534                   ___flsub@b 0530  
    __end_of_led_7seg_write 4E72               __pcstackBANK5 0560    __end_ofi2_led_7seg_write 4E98  
             TMR0_ISR@rom_a 050C                   _main$1243 05D4                    ?___fladd 0517  
                  ?___fldiv 0525                    ?___awdiv 0517                    ?___flneg 0517  
                  ?___awmod 0517                    ?___flmul 0517                    ?___flsub 0530  
                  ?___fltol 0517                 __smallconst 2500                    ?_isdigit 0517  
                  ?_isspace 0517          led_matrix_write@c1 0517          led_matrix_write@c2 0519  
        led_matrix_write@r1 051A          led_matrix_write@r2 0518             ?_led_7seg_write 0517  
                  ?_isupper 0517                  TMR0_ISR@a0 050D                  TMR0_ISR@a1 050E  
                TMR0_ISR@a2 050B                    ?_tolower 051D                    ?_strncmp 0517  
            ___wmul@product 051B                _scan_pointer 0546                _SPI1CON0bits 000084  
              _SPI1CON2bits 000086                    _SPI1BAUD 000089                _SPI2CON0bits 000091  
                  _SPI2BAUD 000096                    _SPI1CON0 000084                    _SPI1CON1 000085  
                  _SPI1CON2 000086                _SPI2CON2bits 000093                    _SPI2CON0 000091  
                  _SPI2CON1 000092                    _SPI2CON2 000093                    _SPI1TCNT 000082  
                  _SPI2TCNT 00008F                    _TMR0_ISR 47D4                   _vfpfcnvrt 2F6E  
         ___wmul@multiplier 0517                  vfpfcnvrt@c 05C6                  vfpfcnvrt@f 05BF  
                 copy_data0 4B60                    __Hrparam 0000                  vfprintf@ap 05CA  
                  __Lrparam 0000                  vfprintf@fp 05C7                  ?_vfpfcnvrt 05B5  
        ___fpclassifyf@F465 053F                    ___xxtofl 4182                    __pivt0x8 0008  
                  __ptext10 4DC6                    __ptext11 4D2E                    __ptext20 3480  
                  __ptext12 4A84                    __ptext21 43F4                    __ptext13 4ECA  
                  __ptext30 4CBA                    __ptext22 4906                    __ptext14 3FD8  
                  __ptext31 4E4C                    __ptext23 3ADC                    __ptext15 44C6  
                  __ptext32 4182                    __ptext24 4A14                    __ptext16 4718  
                  __ptext33 4ED8                    __ptext25 4990                    __ptext17 4BFC  
                  __ptext34 47D4                    __ptext26 42C2                    __ptext18 37D0  
                  __ptext35 4CF4                    __ptext27 4C42                    __ptext19 4DF4  
                  __ptext36 4594                    __ptext28 4D96                    __ptext37 4E72  
                  __ptext29 4E22                    _led_font 2501                  strcpy@dest 0517  
               _IVTLOCKbits 000459                    efgtoa@fp 0577                    efgtoa@ne 058D  
                  efgtoa@pp 058B                    efgtoa@ou 0591                    isa$xinst 000000  
                  _vfprintf 4BA6                   printf@fmt 05CD                 _isspace$963 051D  
             ??_Default_ISR 0501                    isdigit@c 0517                    intlevel2 0000  
         ?i2_led_7seg_write 050F                    isspace@c 0517          ??i2_led_7seg_write 0510  
                 strcpy@src 0519                    isupper@c 0517                   strncmp@_l 0517  
                 strncmp@_r 0519                 efgtoa@nmode 059D                    printf@ap 05D2  
                _SPI1TWIDTH 000088                  _SPI2TWIDTH 000095                 ??_vfpfcnvrt 05BB  
          ??_led_7seg_write 0518                    tolower@c 051D                _rom_pointer2 0547  
                  strncmp@l 051D                    strncmp@n 051A                    strncmp@r 051F  
             ___fladd@signs 0523         __end_of_Default_ISR 4EDA                 _rom_pointer 0548  
              ___fladd@aexp 0524                ___fladd@bexp 0525  
